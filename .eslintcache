[{"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\index.js":"1","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\accessToken.js":"2","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\reportWebVitals.js":"3","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\App.js":"5","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\index.js":"6","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\index.js":"7","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useActions.js":"8","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\muiTheme.js":"9","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Routes.js":"10","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Hospital.js":"11","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Private.js":"12","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\AppTypeContext.js":"13","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\useQuery.js":"14","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\HmoRoutes.js":"15","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\Mutation.js":"16","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\index.js":"17","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\index.js":"18","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\index.js":"19","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewReferral.js":"20","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Subscription.js":"21","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Validations.js":"22","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\appTypeReducer.js":"23","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\store.js":"24","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useCopy.js":"25","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfileHospital.js":"26","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularChart.js":"27","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profiles.js":"28","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequest.js":"29","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequestProfile.js":"30","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientAppointment.js":"31","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\hmoPages\\HmoSettings.js":"32","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\hmoPages\\HmoPlans.js":"33","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\index.js":"34","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Loader.js":"35","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\NoData.js":"36","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Time.js":"37","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\DeleteOrDisable.js":"38","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\index.js":"39","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAlert.js":"40","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\index.js":"41","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\isSelected.js":"42","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\selectedRows.js":"43","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormikControl.js":"44","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\filterHelperFunctions.js":"45","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useFormInput.js":"46","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableHeaders.js":"47","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\MainModal.js":"48","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\EmailChangeForm.js":"49","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\ChangePasswordForm.js":"50","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\EditProfileForm.js":"51","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\CreateEditHMOPlans.js":"52","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\tables\\HMOPlansTable.js":"53","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\index.js":"54","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\auth.js":"55","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\tablesActions.js":"56","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Date.js":"57","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Textarea.js":"58","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Input.js":"59","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\LoginInput.js":"60","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\DateTimePicker.js":"61","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormRadio.js":"62","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\func.js":"63","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\File.js":"64","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Checkbox.js":"65","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Select.js":"66","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\Success.js":"67","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ReferPatient.js":"68","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\mockData.js":"69","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\authReducer.js":"70","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\tablesReducer.js":"71","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\mocks\\patterns.js":"72","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTable.js":"73","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\TableLayout.js":"74","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\styles\\hmoPageStyles.js":"75","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\rows\\HMOPlanRow.js":"76","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Typography.js":"77","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\ChervonDownIcon.js":"78","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Buttons\\CloseBtn.js":"79","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-types\\index.js":"80","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableToolbar.js":"81","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableHeader.js":"82","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Buttons\\EditDelBtn.js":"83","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\StatusPill.js":"84","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\deleteIcon.js":"85","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\EditIcon.js":"86","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PreviousButton.js":"87","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\SearchInput.js":"88","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Modal.js":"89","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart2.js":"90","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Searchs.js":"91","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\NotistackAlert.js":"92","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LinearProgress.js":"93","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormSelect.js":"94","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart.js":"95","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CompoundSearch.js":"96","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PatientFilters.js":"97","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormInput.js":"98","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FilterList.js":"99","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Filter.js":"100","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile1.js":"101","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Search.js":"102","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile2.js":"103","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\TextError.js":"104","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfiles.js":"105","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile.js":"106","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DoctorFilters.js":"107","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\ProfileCard.js":"108","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CustomButton.js":"109","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularProgress.js":"110","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Button.js":"111","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Card.js":"112","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\AvailabilityCard.js":"113","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EmptyTable.js":"114","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Notifications.js":"115","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderProfile.js":"116","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderProfile.js":"117","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersProfile.js":"118","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Headers.js":"119","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\CardItem.js":"120","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderContents.js":"121","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalDashboardChart.js":"122","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderContent.js":"123","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersContents.js":"124","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashboardChart.js":"125","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashCharts.js":"126","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\AvailabilityTable.js":"127","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\SideNav.js":"128","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Header.js":"129","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAppType.js":"130","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\SubscriptionModal.js":"131","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\BellIcon.js":"132","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\LogoutIcon.js":"133","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\asideMenus.js":"134","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helperFunctions\\breadcrumb.js":"135","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\fragment.js":"136","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Copy.js":"137","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SearchIcon.js":"138","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Medications.js":"139","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Consultations.js":"140","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CaseNotes.js":"141","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\MedicalRecords.js":"142","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Chat.js":"143","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Prescriptions.js":"144","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientProfile.js":"145","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SinglePatient.js":"146","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\hmoPages\\HmoEnrollees.js":"147","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Patients.js":"148","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Setting.js":"149","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewResult.js":"150","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrder.js":"151","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Pending.js":"152","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingProfile.js":"153","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrder.js":"154","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboards.js":"155","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpConsultations.js":"156","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SubscriptionIncome.js":"157","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalSettings.js":"158","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ReferralTab.js":"159","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorPayout.js":"160","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorEarning.js":"161","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalProfile.js":"162","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\hmoPages\\HmoDashboard.js":"163","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\PrivateRoute.js":"164","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Financetable.js":"165","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Payout.js":"166","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewMessage.js":"167","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Finance.js":"168","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Email.js":"169","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Messages.js":"170","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpCaseNote.js":"171","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Appointments.js":"172","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CreateMessage.js":"173","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpEarnings.js":"174","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpPatients.js":"175","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAvailability.js":"176","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAppointments.js":"177","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HCPChat.js":"178","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpProfile.js":"179","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SingleHCP.js":"180","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Hcps.js":"181","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalDashboard.js":"182","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrderProfile.js":"183","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Settings.js":"184","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profile.js":"185","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewCompleted.js":"186","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrders.js":"187","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrders.js":"188","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ProcessingOrders.js":"189","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrder.js":"190","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PeopleIcon.js":"191","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PlansIcon.js":"192","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\LabelIcon.js":"193","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PartnersIcon.js":"194","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\bMI.js":"195","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HmoDashboardChart.js":"196","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\tables\\HmoEnrolleesTable.js":"197","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Management.js":"198","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Administrator.js":"199","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Error.js":"200","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PageNotFound.js":"201","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboard.js":"202","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Login.js":"203","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\debounce.js":"204","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\Filters\\index.js":"205","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\UploadEnrolleeListForm.js":"206","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\AddEditHMOEnrolleeModal.js":"207","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ConfirmModal.js":"208","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SubscriptionIcon.js":"209","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\RefferalsIcon.js":"210","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SettingsIcon.js":"211","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PatientsIcon.js":"212","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DoctorsIcon.js":"213","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\FinanceIcon.js":"214","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DashboardIcon.js":"215","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\HmoLineChart.js":"216","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\Filters\\HmoEnrolleeFilters.js":"217","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ConfirmDeleteOrDisable.js":"218","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\DragAndDrop.js":"219","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\EnrolleeProfileModal.js":"220","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\RoleModal.js":"221","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\WalletIcon.js":"222","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\OpenEnvelopeIcon.js":"223","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\ConsultIcon.js":"224","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\CrownIcon.js":"225","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\rows\\HmoEnrolleesRow.js":"226","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\AddEditHMOEnrolleeForm.js":"227","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\index.js":"228","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\MessageAddIcon.js":"229","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\VerifiedIcon.js":"230","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\Calender2.js":"231","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\CallIcon.js":"232","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SmsIcon.js":"233","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\LoginForm.js":"234","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\styles\\enrolleesPageStyles.js":"235"},{"size":2433,"mtime":1659095183273,"results":"236","hashOfConfig":"237"},{"size":165,"mtime":1656592111151,"results":"238","hashOfConfig":"237"},{"size":377,"mtime":1656592111518,"results":"239","hashOfConfig":"237"},{"size":5201,"mtime":1656592111520,"results":"240","hashOfConfig":"237"},{"size":15472,"mtime":1665569405385,"results":"241","hashOfConfig":"237"},{"size":38,"mtime":1656592111527,"results":"242","hashOfConfig":"237"},{"size":3610,"mtime":1665303591326,"results":"243","hashOfConfig":"237"},{"size":479,"mtime":1656592111369,"results":"244","hashOfConfig":"237"},{"size":4157,"mtime":1665569405453,"results":"245","hashOfConfig":"237"},{"size":2320,"mtime":1656592111490,"results":"246","hashOfConfig":"237"},{"size":7499,"mtime":1665303591328,"results":"247","hashOfConfig":"237"},{"size":2191,"mtime":1665299364648,"results":"248","hashOfConfig":"237"},{"size":596,"mtime":1656592111525,"results":"249","hashOfConfig":"237"},{"size":32992,"mtime":1665569405424,"results":"250","hashOfConfig":"237"},{"size":3409,"mtime":1665569405461,"results":"251","hashOfConfig":"237"},{"size":16622,"mtime":1665569405422,"results":"252","hashOfConfig":"237"},{"size":157,"mtime":1659095183126,"results":"253","hashOfConfig":"237"},{"size":1241,"mtime":1665303591026,"results":"254","hashOfConfig":"237"},{"size":1799,"mtime":1665303590907,"results":"255","hashOfConfig":"237"},{"size":7601,"mtime":1665303591311,"results":"256","hashOfConfig":"237"},{"size":12471,"mtime":1666085554234,"results":"257","hashOfConfig":"237"},{"size":15654,"mtime":1665760011638,"results":"258","hashOfConfig":"237"},{"size":278,"mtime":1656592111526,"results":"259","hashOfConfig":"237"},{"size":296,"mtime":1656592111532,"results":"260","hashOfConfig":"237"},{"size":732,"mtime":1659095183142,"results":"261","hashOfConfig":"237"},{"size":3275,"mtime":1665303590855,"results":"262","hashOfConfig":"237"},{"size":3423,"mtime":1656592111317,"results":"263","hashOfConfig":"237"},{"size":4363,"mtime":1659095183220,"results":"264","hashOfConfig":"237"},{"size":14133,"mtime":1666080903599,"results":"265","hashOfConfig":"237"},{"size":21368,"mtime":1665315276817,"results":"266","hashOfConfig":"237"},{"size":16959,"mtime":1666082256313,"results":"267","hashOfConfig":"237"},{"size":3182,"mtime":1665569405460,"results":"268","hashOfConfig":"237"},{"size":2635,"mtime":1665569405458,"results":"269","hashOfConfig":"237"},{"size":131,"mtime":1656592111522,"results":"270","hashOfConfig":"237"},{"size":536,"mtime":1665303590875,"results":"271","hashOfConfig":"237"},{"size":978,"mtime":1665303591016,"results":"272","hashOfConfig":"237"},{"size":4319,"mtime":1665569405417,"results":"273","hashOfConfig":"237"},{"size":4570,"mtime":1656592111403,"results":"274","hashOfConfig":"237"},{"size":275,"mtime":1656592111530,"results":"275","hashOfConfig":"237"},{"size":3388,"mtime":1665569405426,"results":"276","hashOfConfig":"237"},{"size":513,"mtime":1656592111502,"results":"277","hashOfConfig":"237"},{"size":82,"mtime":1656592111509,"results":"278","hashOfConfig":"237"},{"size":683,"mtime":1656592111511,"results":"279","hashOfConfig":"237"},{"size":806,"mtime":1656592111497,"results":"280","hashOfConfig":"237"},{"size":8975,"mtime":1665569405481,"results":"281","hashOfConfig":"237"},{"size":306,"mtime":1656592111372,"results":"282","hashOfConfig":"237"},{"size":9374,"mtime":1665569405419,"results":"283","hashOfConfig":"237"},{"size":2592,"mtime":1665569405450,"results":"284","hashOfConfig":"237"},{"size":4254,"mtime":1665569405397,"results":"285","hashOfConfig":"237"},{"size":6353,"mtime":1665569405390,"results":"286","hashOfConfig":"237"},{"size":6225,"mtime":1665569405395,"results":"287","hashOfConfig":"237"},{"size":5816,"mtime":1665569405392,"results":"288","hashOfConfig":"237"},{"size":7253,"mtime":1665569405468,"results":"289","hashOfConfig":"237"},{"size":173,"mtime":1656592111409,"results":"290","hashOfConfig":"237"},{"size":895,"mtime":1656592111521,"results":"291","hashOfConfig":"237"},{"size":536,"mtime":1656592111523,"results":"292","hashOfConfig":"237"},{"size":2617,"mtime":1665303591331,"results":"293","hashOfConfig":"237"},{"size":2045,"mtime":1656592111501,"results":"294","hashOfConfig":"237"},{"size":951,"mtime":1656592111498,"results":"295","hashOfConfig":"237"},{"size":1233,"mtime":1656592111499,"results":"296","hashOfConfig":"237"},{"size":2164,"mtime":1665303591333,"results":"297","hashOfConfig":"237"},{"size":1476,"mtime":1656592111496,"results":"298","hashOfConfig":"237"},{"size":6027,"mtime":1665569405483,"results":"299","hashOfConfig":"237"},{"size":4437,"mtime":1665569405474,"results":"300","hashOfConfig":"237"},{"size":3032,"mtime":1665569405472,"results":"301","hashOfConfig":"237"},{"size":6439,"mtime":1665569405476,"results":"302","hashOfConfig":"237"},{"size":1894,"mtime":1656592111408,"results":"303","hashOfConfig":"237"},{"size":4335,"mtime":1656592111406,"results":"304","hashOfConfig":"237"},{"size":11327,"mtime":1665569405485,"results":"305","hashOfConfig":"237"},{"size":1663,"mtime":1656592111528,"results":"306","hashOfConfig":"237"},{"size":807,"mtime":1656592111531,"results":"307","hashOfConfig":"237"},{"size":2525,"mtime":1665569405488,"results":"308","hashOfConfig":"237"},{"size":5164,"mtime":1666081828572,"results":"309","hashOfConfig":"237"},{"size":1435,"mtime":1665569405443,"results":"310","hashOfConfig":"237"},{"size":820,"mtime":1665569405492,"results":"311","hashOfConfig":"237"},{"size":5657,"mtime":1665569405464,"results":"312","hashOfConfig":"237"},{"size":240,"mtime":1656592111310,"results":"313","hashOfConfig":"237"},{"size":505,"mtime":1665303590793,"results":"314","hashOfConfig":"237"},{"size":1287,"mtime":1659095183079,"results":"315","hashOfConfig":"237"},{"size":706,"mtime":1656592111524,"results":"316","hashOfConfig":"237"},{"size":1942,"mtime":1656592111384,"results":"317","hashOfConfig":"237"},{"size":2414,"mtime":1666081782552,"results":"318","hashOfConfig":"237"},{"size":2486,"mtime":1665569405388,"results":"319","hashOfConfig":"237"},{"size":1177,"mtime":1665569405413,"results":"320","hashOfConfig":"237"},{"size":2134,"mtime":1665303590845,"results":"321","hashOfConfig":"237"},{"size":1606,"mtime":1665303590799,"results":"322","hashOfConfig":"237"},{"size":762,"mtime":1656592111344,"results":"323","hashOfConfig":"237"},{"size":1979,"mtime":1656592111347,"results":"324","hashOfConfig":"237"},{"size":2431,"mtime":1660158341758,"results":"325","hashOfConfig":"237"},{"size":7044,"mtime":1665303590872,"results":"326","hashOfConfig":"237"},{"size":2971,"mtime":1665303590886,"results":"327","hashOfConfig":"237"},{"size":663,"mtime":1656592111343,"results":"328","hashOfConfig":"237"},{"size":1099,"mtime":1656592111337,"results":"329","hashOfConfig":"237"},{"size":1442,"mtime":1665303590862,"results":"330","hashOfConfig":"237"},{"size":2786,"mtime":1656592111334,"results":"331","hashOfConfig":"237"},{"size":3093,"mtime":1665780810190,"results":"332","hashOfConfig":"237"},{"size":8542,"mtime":1665303590884,"results":"333","hashOfConfig":"237"},{"size":1502,"mtime":1656592111331,"results":"334","hashOfConfig":"237"},{"size":1470,"mtime":1656592111330,"results":"335","hashOfConfig":"237"},{"size":1122,"mtime":1659095183094,"results":"336","hashOfConfig":"237"},{"size":7094,"mtime":1659095183094,"results":"337","hashOfConfig":"237"},{"size":1509,"mtime":1665569405411,"results":"338","hashOfConfig":"237"},{"size":6574,"mtime":1656926098107,"results":"339","hashOfConfig":"237"},{"size":463,"mtime":1665569405415,"results":"340","hashOfConfig":"237"},{"size":7498,"mtime":1665303590858,"results":"341","hashOfConfig":"237"},{"size":4521,"mtime":1665303590853,"results":"342","hashOfConfig":"237"},{"size":7820,"mtime":1665756045061,"results":"343","hashOfConfig":"237"},{"size":2138,"mtime":1656592111345,"results":"344","hashOfConfig":"237"},{"size":2525,"mtime":1656592111320,"results":"345","hashOfConfig":"237"},{"size":1633,"mtime":1656592111319,"results":"346","hashOfConfig":"237"},{"size":1305,"mtime":1656592111314,"results":"347","hashOfConfig":"237"},{"size":1148,"mtime":1656592111315,"results":"348","hashOfConfig":"237"},{"size":2533,"mtime":1656592111312,"results":"349","hashOfConfig":"237"},{"size":1470,"mtime":1665303590953,"results":"350","hashOfConfig":"237"},{"size":3030,"mtime":1656592111395,"results":"351","hashOfConfig":"237"},{"size":3876,"mtime":1656592111393,"results":"352","hashOfConfig":"237"},{"size":10253,"mtime":1665303591010,"results":"353","hashOfConfig":"237"},{"size":3720,"mtime":1656592111390,"results":"354","hashOfConfig":"237"},{"size":1971,"mtime":1656592111388,"results":"355","hashOfConfig":"237"},{"size":8179,"mtime":1665569405429,"results":"356","hashOfConfig":"237"},{"size":8504,"mtime":1665303591002,"results":"357","hashOfConfig":"237"},{"size":17240,"mtime":1665303591012,"results":"358","hashOfConfig":"237"},{"size":12942,"mtime":1656592111392,"results":"359","hashOfConfig":"237"},{"size":10265,"mtime":1656592111389,"results":"360","hashOfConfig":"237"},{"size":12741,"mtime":1656592111379,"results":"361","hashOfConfig":"237"},{"size":11988,"mtime":1656592111378,"results":"362","hashOfConfig":"237"},{"size":11899,"mtime":1666084812069,"results":"363","hashOfConfig":"237"},{"size":6521,"mtime":1665569405440,"results":"364","hashOfConfig":"237"},{"size":2413,"mtime":1665569405435,"results":"365","hashOfConfig":"237"},{"size":434,"mtime":1659095183139,"results":"366","hashOfConfig":"237"},{"size":6155,"mtime":1659095183157,"results":"367","hashOfConfig":"237"},{"size":906,"mtime":1665303590787,"results":"368","hashOfConfig":"237"},{"size":931,"mtime":1665303590811,"results":"369","hashOfConfig":"237"},{"size":4781,"mtime":1665569405478,"results":"370","hashOfConfig":"237"},{"size":772,"mtime":1656592111503,"results":"371","hashOfConfig":"237"},{"size":263,"mtime":1656592111367,"results":"372","hashOfConfig":"237"},{"size":616,"mtime":1659095183079,"results":"373","hashOfConfig":"237"},{"size":2072,"mtime":1665303590830,"results":"374","hashOfConfig":"237"},{"size":5854,"mtime":1666082197811,"results":"375","hashOfConfig":"237"},{"size":7368,"mtime":1666085563878,"results":"376","hashOfConfig":"237"},{"size":22171,"mtime":1665303591043,"results":"377","hashOfConfig":"237"},{"size":4294,"mtime":1656592111449,"results":"378","hashOfConfig":"237"},{"size":7906,"mtime":1659095183173,"results":"379","hashOfConfig":"237"},{"size":8078,"mtime":1665303591240,"results":"380","hashOfConfig":"237"},{"size":4553,"mtime":1665303591171,"results":"381","hashOfConfig":"237"},{"size":5488,"mtime":1665303591261,"results":"382","hashOfConfig":"237"},{"size":6582,"mtime":1665569405457,"results":"383","hashOfConfig":"237"},{"size":10514,"mtime":1666085151352,"results":"384","hashOfConfig":"237"},{"size":1105,"mtime":1656592111473,"results":"385","hashOfConfig":"237"},{"size":13050,"mtime":1659095183253,"results":"386","hashOfConfig":"237"},{"size":14131,"mtime":1666085574777,"results":"387","hashOfConfig":"237"},{"size":13335,"mtime":1666080904684,"results":"388","hashOfConfig":"237"},{"size":18625,"mtime":1665303591218,"results":"389","hashOfConfig":"237"},{"size":12203,"mtime":1666084858687,"results":"390","hashOfConfig":"237"},{"size":275,"mtime":1656592111425,"results":"391","hashOfConfig":"237"},{"size":7600,"mtime":1666082030128,"results":"392","hashOfConfig":"237"},{"size":9458,"mtime":1665303591290,"results":"393","hashOfConfig":"237"},{"size":1123,"mtime":1665303591101,"results":"394","hashOfConfig":"237"},{"size":8278,"mtime":1666085560463,"results":"395","hashOfConfig":"237"},{"size":10778,"mtime":1666080905118,"results":"396","hashOfConfig":"237"},{"size":10381,"mtime":1666080904684,"results":"397","hashOfConfig":"237"},{"size":4503,"mtime":1665758486893,"results":"398","hashOfConfig":"237"},{"size":2316,"mtime":1665569405455,"results":"399","hashOfConfig":"237"},{"size":626,"mtime":1656592111490,"results":"400","hashOfConfig":"237"},{"size":9131,"mtime":1666084059267,"results":"401","hashOfConfig":"237"},{"size":9295,"mtime":1666085571020,"results":"402","hashOfConfig":"237"},{"size":2594,"mtime":1656592111481,"results":"403","hashOfConfig":"237"},{"size":10379,"mtime":1665303591069,"results":"404","hashOfConfig":"237"},{"size":12498,"mtime":1656592111428,"results":"405","hashOfConfig":"237"},{"size":9477,"mtime":1665303591120,"results":"406","hashOfConfig":"237"},{"size":19365,"mtime":1665303591080,"results":"407","hashOfConfig":"237"},{"size":1963,"mtime":1656592111413,"results":"408","hashOfConfig":"237"},{"size":8740,"mtime":1665303591059,"results":"409","hashOfConfig":"237"},{"size":9954,"mtime":1665303591092,"results":"410","hashOfConfig":"237"},{"size":6114,"mtime":1666080905118,"results":"411","hashOfConfig":"237"},{"size":14325,"mtime":1666085566948,"results":"412","hashOfConfig":"237"},{"size":12662,"mtime":1665303591074,"results":"413","hashOfConfig":"237"},{"size":7862,"mtime":1656592111433,"results":"414","hashOfConfig":"237"},{"size":7641,"mtime":1656592111440,"results":"415","hashOfConfig":"237"},{"size":7023,"mtime":1665303591258,"results":"416","hashOfConfig":"237"},{"size":22953,"mtime":1666085579351,"results":"417","hashOfConfig":"237"},{"size":828,"mtime":1665744269565,"results":"418","hashOfConfig":"237"},{"size":14353,"mtime":1659095183204,"results":"419","hashOfConfig":"237"},{"size":1107,"mtime":1656592111474,"results":"420","hashOfConfig":"237"},{"size":4618,"mtime":1665759072075,"results":"421","hashOfConfig":"237"},{"size":7747,"mtime":1659095183239,"results":"422","hashOfConfig":"237"},{"size":13281,"mtime":1665314495656,"results":"423","hashOfConfig":"237"},{"size":14647,"mtime":1665303591049,"results":"424","hashOfConfig":"237"},{"size":18632,"mtime":1666080905118,"results":"425","hashOfConfig":"237"},{"size":15295,"mtime":1665303591213,"results":"426","hashOfConfig":"237"},{"size":1934,"mtime":1665303590826,"results":"427","hashOfConfig":"237"},{"size":1354,"mtime":1665569405404,"results":"428","hashOfConfig":"237"},{"size":973,"mtime":1665303590806,"results":"429","hashOfConfig":"237"},{"size":2245,"mtime":1665303590822,"results":"430","hashOfConfig":"237"},{"size":163,"mtime":1656592111353,"results":"431","hashOfConfig":"237"},{"size":13297,"mtime":1665569405437,"results":"432","hashOfConfig":"237"},{"size":8101,"mtime":1665569405469,"results":"433","hashOfConfig":"237"},{"size":13667,"mtime":1665303591104,"results":"434","hashOfConfig":"237"},{"size":15342,"mtime":1657697851744,"results":"435","hashOfConfig":"237"},{"size":1024,"mtime":1659095183173,"results":"436","hashOfConfig":"237"},{"size":1640,"mtime":1656592111454,"results":"437","hashOfConfig":"237"},{"size":275,"mtime":1656592111425,"results":"438","hashOfConfig":"237"},{"size":3996,"mtime":1659095183188,"results":"439","hashOfConfig":"237"},{"size":314,"mtime":1659095183273,"results":"440","hashOfConfig":"237"},{"size":644,"mtime":1656592111306,"results":"441","hashOfConfig":"237"},{"size":3761,"mtime":1665569405399,"results":"442","hashOfConfig":"237"},{"size":2995,"mtime":1665569405445,"results":"443","hashOfConfig":"237"},{"size":4166,"mtime":1665569405447,"results":"444","hashOfConfig":"237"},{"size":1169,"mtime":1665303590836,"results":"445","hashOfConfig":"237"},{"size":1439,"mtime":1665303590827,"results":"446","hashOfConfig":"237"},{"size":1705,"mtime":1665303590832,"results":"447","hashOfConfig":"237"},{"size":1496,"mtime":1665303590824,"results":"448","hashOfConfig":"237"},{"size":1177,"mtime":1665303590796,"results":"449","hashOfConfig":"237"},{"size":2025,"mtime":1665303590803,"results":"450","hashOfConfig":"237"},{"size":1392,"mtime":1665303590795,"results":"451","hashOfConfig":"237"},{"size":3805,"mtime":1665569405409,"results":"452","hashOfConfig":"237"},{"size":3374,"mtime":1665569405398,"results":"453","hashOfConfig":"237"},{"size":4639,"mtime":1665569405446,"results":"454","hashOfConfig":"237"},{"size":4693,"mtime":1665569405394,"results":"455","hashOfConfig":"237"},{"size":8173,"mtime":1665569405449,"results":"456","hashOfConfig":"237"},{"size":3435,"mtime":1656592111407,"results":"457","hashOfConfig":"237"},{"size":2597,"mtime":1665569405406,"results":"458","hashOfConfig":"237"},{"size":1353,"mtime":1665569405403,"results":"459","hashOfConfig":"237"},{"size":944,"mtime":1665569405401,"results":"460","hashOfConfig":"237"},{"size":982,"mtime":1665569405402,"results":"461","hashOfConfig":"237"},{"size":6393,"mtime":1665569405465,"results":"462","hashOfConfig":"237"},{"size":8533,"mtime":1665569405390,"results":"463","hashOfConfig":"237"},{"size":53,"mtime":1659095183263,"results":"464","hashOfConfig":"237"},{"size":1016,"mtime":1665303590816,"results":"465","hashOfConfig":"237"},{"size":1481,"mtime":1665303590841,"results":"466","hashOfConfig":"237"},{"size":1747,"mtime":1665303590789,"results":"467","hashOfConfig":"237"},{"size":2047,"mtime":1665303590791,"results":"468","hashOfConfig":"237"},{"size":900,"mtime":1665303590834,"results":"469","hashOfConfig":"237"},{"size":6887,"mtime":1659330167913,"results":"470","hashOfConfig":"237"},{"size":820,"mtime":1665569405490,"results":"471","hashOfConfig":"237"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},"1gz4jv2",{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"474"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"474"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"474"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"474"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"474"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"474"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793","usedDeprecatedRules":"474"},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"474"},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"815","messages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"474"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"836","messages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"474"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845"},{"filePath":"846","messages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"856","messages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"862","messages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"890","messages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"900","messages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"902","messages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"912","messages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"930","messages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"932","messages":"933","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"936","messages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"938","messages":"939","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"944","messages":"945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"946","messages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"950","messages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"952","messages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\index.js",[],["954","955"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\accessToken.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\reportWebVitals.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\App.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useActions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\muiTheme.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Routes.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Hospital.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Private.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\AppTypeContext.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\useQuery.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\HmoRoutes.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\Mutation.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewReferral.js",["956"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Typography, Grid, Divider } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getRefferal } from \"components/graphQL/useQuery\";\r\nimport NoData from \"components/layouts/NoData\";\r\nimport Loader from \"components/Utilities/Loader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { dateMoment, timeMoment } from \"components/Utilities/Time\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  parentGrid: {\r\n    background: \"#fff\",\r\n    borderRadius: \"1rem\",\r\n    boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.1)\",\r\n  },\r\n  infoBadge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.5rem\",\r\n      borderRadius: \"1.5rem\",\r\n      background: theme.palette.common.lightGreen,\r\n      color: theme.palette.common.green,\r\n    },\r\n  },\r\n  title: {\r\n    \"&.MuiTypography-root\": {\r\n      color: theme.palette.common.grey,\r\n      marginRight: \"2rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ViewReferral = () => {\r\n  const classes = useStyles();\r\n  const { referralId } = useParams();\r\n  const { loading, data, error } = useQuery(getRefferal, {\r\n    variables: { id: referralId },\r\n  });\r\n\r\n  const [referral, setReferral] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setReferral(data.getReferral);\r\n    }\r\n  }, [data]);\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  const {\r\n    /* specialization, */\r\n    referrals,\r\n    type,\r\n    reason,\r\n    note,\r\n    testType,\r\n    createdAt,\r\n    patientData,\r\n    doctorData,\r\n    // eslint-disable-next-line\r\n  } = referral;\r\n\r\n  return (\r\n    <Grid container direction=\"column\" gap={2}>\r\n      <Grid\r\n        item\r\n        container\r\n        direction=\"column\"\r\n        width=\"90%\"\r\n        margin=\"auto\"\r\n        className={classes.parentGrid}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          flexWrap=\"no-wrap\"\r\n          padding=\" 2rem 0\"\r\n          width=\"90%\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid item>\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Patient:\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Typography variant=\"h5\">\r\n                  {patientData\r\n                    ? `${patientData.firstName} ${patientData.lastName}`\r\n                    : \"No Patient\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Referred By:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">\r\n                  {doctorData\r\n                    ? `${doctorData.firstName} ${doctorData.lastName}`\r\n                    : \"No Doctor\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item alignItems=\"center\">\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Referral ID:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">\r\n                  {referrals ? referrals : \"No Value\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          flexWrap=\"no-wrap\"\r\n          padding=\" 2rem 0\"\r\n          width=\"90%\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid item>\r\n            <Grid item container alignItems=\"center\" gap={2}>\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Type:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">{type}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {/* <Grid item>\r\n            <Grid item container alignItems=\"center\" gap={2}>\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Specialization:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">{specialization}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid> */}\r\n          <Grid item>\r\n            <Grid item container alignItems=\"center\" gap={2}>\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Test Type:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">\r\n                  {testType ? testType : \"No Value\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item alignItems=\"center\">\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Date:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">{dateMoment(createdAt)}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item container gap={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"body1\" className={classes.title}>\r\n                  Time:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">{timeMoment(createdAt)}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          item\r\n          container\r\n          rowSpacing={2}\r\n          flexDirection=\"column\"\r\n          padding=\" 2rem 0\"\r\n          width=\"90%\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"body1\" className={classes.title}>\r\n              Reasons\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\" style={{ lineHeight: 1.85 }}>\r\n              {reason}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          item\r\n          container\r\n          rowSpacing={2}\r\n          flexDirection=\"column\"\r\n          padding=\" 2rem 0\"\r\n          width=\"90%\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"body1\" className={classes.title}>\r\n              Referral Notes:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\" style={{ lineHeight: 1.85 }}>\r\n              {note}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ViewReferral;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Subscription.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Validations.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\appTypeReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\store.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useCopy.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfileHospital.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profiles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequest.js",["957","958","959"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequestProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientAppointment.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\hmoPages\\HmoSettings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\hmoPages\\HmoPlans.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Loader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\NoData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Time.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\DeleteOrDisable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAlert.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\isSelected.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\selectedRows.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormikControl.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\filterHelperFunctions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useFormInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableHeaders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\MainModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\EmailChangeForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\ChangePasswordForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\EditProfileForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\CreateEditHMOPlans.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\tables\\HMOPlansTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\auth.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\tablesActions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Date.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Textarea.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Input.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\LoginInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\DateTimePicker.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormRadio.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\func.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\File.js",["960"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Grid,\r\n  Avatar,\r\n  Button,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport { Loader, TextError } from \"components/Utilities\";\r\nimport { RequiredIcon } from \"components/Typography\";\r\nimport {\r\n  compressAndUploadImage,\r\n  uploadImage,\r\n} from \"helpers/filterHelperFunctions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  FormLabel: {\r\n    \"&.MuiFormLabel-root\": {\r\n      ...theme.typography.FormLabel,\r\n    },\r\n  },\r\n\r\n  uploadBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: \"#f2f2f2\",\r\n      boxShadow: \"none\",\r\n      borderRadius: \"5px\",\r\n      fontSize: \"1.4rem\",\r\n      color: theme.palette.common.black,\r\n\r\n      \"&:hover\": {\r\n        background: \"#f2f3f3\",\r\n        boxShadow: \"none\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        boxShadow: \"none\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport const Formiks = ({ name, setFieldValue, onBlur, value }) => {\r\n  const fileRef = useRef(null);\r\n  const classes = useStyles();\r\n  const { displayMessage } = useAlert();\r\n  const [preview, setPreview] = useState(\"\");\r\n  const [isCompleted, setIsCompleted] = useState(null);\r\n  const [progress, setProgress] = useState();\r\n  const [isCompressing, setIsCompressing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    isCompleted === \"passed\" &&\r\n      displayMessage(\"success\", \"Image upload complete.\");\r\n    if (isCompleted === \"failed\") {\r\n      displayMessage(\"error\", \"Image upload failed, Try again.\");\r\n    }\r\n  }, [isCompleted, displayMessage]);\r\n\r\n  const onChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    setProgress(1);\r\n    compressAndUploadImage(\r\n      file,\r\n      uploadImage,\r\n      setPreview,\r\n      name,\r\n      setFieldValue,\r\n      setProgress,\r\n      setIsCompressing,\r\n      setIsCompleted\r\n    );\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = (e) => setPreview(reader.result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      setPreview(value);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2} alignItems=\"center\">\r\n      {progress < 100 || isCompressing ? (\r\n        <Grid\r\n          container\r\n          item\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography display={\"inline\"}>\r\n            {isCompressing ? \"Compressing image\" : \"Uploading image\"}\r\n          </Typography>\r\n          <Loader />\r\n        </Grid>\r\n      ) : (\r\n        <>\r\n          <Grid item>\r\n            <FormControl fullWidth>\r\n              <Grid item container>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  onChange={onChange}\r\n                  type=\"file\"\r\n                  name={name}\r\n                  onBlur={onBlur}\r\n                  hidden\r\n                  ref={fileRef}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={() => fileRef.current.click()}\r\n                  component=\"span\"\r\n                  className={classes.uploadBtn}\r\n                >\r\n                  Upload Photo\r\n                </Button>\r\n              </Grid>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            {!preview ? (\r\n              <Typography sx={{ color: \"#757886\", fontSize: \"16px\" }}>\r\n                No file chosen\r\n              </Typography>\r\n            ) : preview && isCompleted !== \"failed\" ? (\r\n              <Avatar sx={{ backgroundColor: \"#eaeaea\" }} src={preview} />\r\n            ) : preview ? (\r\n              <Avatar sx={{ backgroundColor: \"#eaeaea\" }} src={preview} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Files = (props) => {\r\n  const { name, label, isRequired, ...rest } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container direction=\"column\" gap={1}>\r\n      <FormLabel className={classes.FormLabel}>\r\n        {label} {isRequired && <RequiredIcon />}\r\n      </FormLabel>\r\n      <Field name={name} as={Formiks} label={label} {...rest} />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Checkbox.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Select.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\Success.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ReferPatient.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\mockData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\tablesReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\mocks\\patterns.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\TableLayout.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\styles\\hmoPageStyles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\rows\\HMOPlanRow.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Typography.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\ChervonDownIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Buttons\\CloseBtn.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-types\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableToolbar.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableHeader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Buttons\\EditDelBtn.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\StatusPill.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\deleteIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\EditIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PreviousButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\SearchInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Modal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart2.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Searchs.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\NotistackAlert.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LinearProgress.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormSelect.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CompoundSearch.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PatientFilters.js",["961","962","963","964"],"import React, { useEffect, useState } from \"react\";\r\nimport t from \"prop-types\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport Filter from \"./Filter\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getPlans, getProviders } from \"components/graphQL/useQuery\";\r\nimport { deleteVar, filterData } from \"helpers/filterHelperFunctions\";\r\nimport {\r\n  genderType,\r\n  patientsProfileDefaultFilterByValues,\r\n  /* statusFilterBy, */\r\n} from \"helpers/mockData\";\r\n\r\nconst PatientFilters = ({ setProfiles, setPageInfo, queryParams }) => {\r\n  const { displayAlert } = useAlert();\r\n  const [plans, setPlans] = useState([]);\r\n  const [fetchPlans] = useLazyQuery(getPlans);\r\n  const [providers, setProviders] = useState([]);\r\n  const [fetchProviders] = useLazyQuery(getProviders);\r\n  const [providerId, setProviderId] = useState(null);\r\n  const [filterPlanValue, setFilterPlanValue] = useState(\"\");\r\n  const [, setStatusFilterValue] = useState(\"\");\r\n  const { patientsParams, patientsByStatusParams, patientsByPlanParams } =\r\n    queryParams;\r\n  const { fetchPatient, loading, refetch, variables } = patientsParams;\r\n  const [profileFilterValues, setProfileFilterValues] = useState(\r\n    patientsProfileDefaultFilterByValues\r\n  );\r\n  const {\r\n    byStatusLoading,\r\n    /* byStatusVaribles,\r\n    byStatusRefetch,\r\n    fetchPatientByStatus, */\r\n  } = patientsByStatusParams;\r\n  const { byPlanLoading, byPlanVaribles, byPlanRefetch, fetchPatientByPlan } =\r\n    patientsByPlanParams;\r\n\r\n  useEffect(() => {\r\n    fetchProviders()\r\n      .then(({ data }) => {\r\n        if (!data) throw Error(\"Couldn't get list of providers\");\r\n        const providersList = (data?.getProviders?.provider).map((provider) => {\r\n          const { _id, name } = provider;\r\n          return { key: name, value: _id };\r\n        });\r\n        setProviders(providersList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (providerId === \"\" || providerId === null) return;\r\n    fetchPlans({ variables: { provider: providerId } })\r\n      .then(({ data }) => {\r\n        if (!data) throw Error(\"Couldn't get list of plans\");\r\n        const planList = (data?.getPlans?.plan || []).map((plan) => {\r\n          const { _id, name } = plan;\r\n          return { key: name, value: _id };\r\n        });\r\n        setPlans(planList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [providerId]);\r\n\r\n  const onFilterProfileChange = async (name, value) => {\r\n    try {\r\n      if (name === \"provider\") setProviderId(value);\r\n      setStatusFilterValue(\"\");\r\n      deleteVar(variables);\r\n      const filterValues = { ...profileFilterValues, [name]: value };\r\n      setProfileFilterValues(filterValues);\r\n      filterData(filterValues, {\r\n        fetchData: fetchPatient,\r\n        refetch,\r\n        variables,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.profiles?.data || []);\r\n          setPageInfo(data?.profiles?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setProfileFilterValues, patientsProfileDefaultFilterByValues);\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setProfileFilterValues, patientsProfileDefaultFilterByValues);\r\n    }\r\n  };\r\n\r\n  /*   const onFilterStatusChange = async (value) => {\r\n    try {\r\n      setProfileFilterValues({ gender: \"\", provider: \"\" });\r\n      deleteVar(byStatusVaribles);\r\n      setStatusFilterValue(value);\r\n      const filterVariables = { status: value };\r\n\r\n      filterData(filterVariables, {\r\n        fetchData: fetchPatientByStatus,\r\n        refetch: byStatusRefetch,\r\n        variables: byStatusVaribles,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.profilesByStatus?.data || []);\r\n          setPageInfo(data?.profilesByStatus?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setStatusFilterValue, \"\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setStatusFilterValue, \"\");\r\n    }\r\n  }; */\r\n\r\n  const onFilterPlanChange = async (value) => {\r\n    try {\r\n      if (value === \"\") {\r\n        setProfileFilterValues({\r\n          ...patientsProfileDefaultFilterByValues,\r\n        });\r\n      } else {\r\n        setProfileFilterValues({\r\n          ...patientsProfileDefaultFilterByValues,\r\n          provider: profileFilterValues.provider,\r\n        });\r\n      }\r\n      deleteVar(byPlanVaribles);\r\n      setFilterPlanValue(value);\r\n      const filterVariables = { planId: value };\r\n\r\n      filterData(filterVariables, {\r\n        fetchData: fetchPatientByPlan,\r\n        refetch: byPlanRefetch,\r\n        variables: byPlanVaribles,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.profilesByPlan?.data || []);\r\n          setPageInfo(data?.profilesByPlan?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setStatusFilterValue, \"\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setStatusFilterValue, \"\");\r\n    }\r\n  };\r\n\r\n  const refresh = async (setFilterValue, defaultVal) => {\r\n    displayAlert(\"error\", \"Something went wrong while filtering. Try again.\");\r\n    setFilterValue(defaultVal);\r\n\r\n    deleteVar(variables);\r\n\r\n    refetch()\r\n      .then(({ data }) => {\r\n        setProfiles(data?.profiles?.data || []);\r\n        setPageInfo(data?.profiles?.pageInfo || {});\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayAlert(\"error\", \"Failed to get patients data, Try again\");\r\n      });\r\n  };\r\n  return (\r\n    <Grid item container flexWrap=\"wrap\" spacing={2} alignItems=\"flex-end\">\r\n      {/* FILTER BY GENDER */}\r\n      <Grid item>\r\n        <Filter\r\n          onHandleChange={(e) =>\r\n            onFilterProfileChange(\"gender\", e?.target?.value)\r\n          }\r\n          onClickClearBtn={() => onFilterProfileChange(\"gender\", \"\")}\r\n          options={[{ key: \"Gender\", value: \"\" }, ...genderType]}\r\n          name=\"gender\"\r\n          value={profileFilterValues.gender}\r\n          hasClearBtn={true}\r\n          disable={loading || byStatusLoading || byPlanLoading}\r\n          variant=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      {/* FILTER BY PROVIDER AND PLAN */}\r\n      {/* <Grid item>\r\n        <Filter\r\n          onHandleChange={(e) =>\r\n            onFilterProfileChange(\"provider\", e?.target?.value)\r\n          }\r\n          onClickClearBtn={() => onFilterProfileChange(\"provider\", \"\")}\r\n          options={[{ key: \"Provider\", value: \"\" }, ...providers]}\r\n          name=\"provider\"\r\n          value={profileFilterValues.provider}\r\n          hasClearBtn={true}\r\n          disable={loading || byStatusLoading || byPlanLoading}\r\n        />\r\n      </Grid> */}\r\n      {/* {profileFilterValues.provider === \"\" ? null : (\r\n        <Grid item>\r\n          <Filter\r\n            label=\"\"\r\n            onHandleChange={(e) => onFilterPlanChange(e?.target?.value)}\r\n            onClickClearBtn={() => onFilterPlanChange(\"\")}\r\n            options={plans}\r\n            name=\"plan\"\r\n            placeholder=\"Provider Plan\"\r\n            value={filterPlanValue}\r\n            hasClearBtn={true}\r\n            disable={loading || byStatusLoading || byPlanLoading}\r\n          />\r\n        </Grid>\r\n      )} */}\r\n\r\n      {/* FILTER BY STATUS */}\r\n      {/* <Grid item>\r\n        <Filter\r\n          label=\"By Status\"\r\n          onHandleChange={(e) => onFilterStatusChange(e?.target?.value)}\r\n          onClickClearBtn={() => onFilterStatusChange(\"\")}\r\n          options={statusFilterBy}\r\n          name=\"status\"\r\n          placeholder=\"None\"\r\n          value={statusFilterValue}\r\n          hasClearBtn={true}\r\n          disable={loading || byStatusLoading || byPlanLoading}\r\n        />\r\n      </Grid> */}\r\n      {/* ==== CLEAR FILTERS BUTTON ===== */}\r\n      {/* <Grid item>\r\n            <ClearFiltersBtn\r\n              title=\"Clear filters\"\r\n              onHandleClick={() => {\r\n                resetFilters(\r\n                  setFilterValues,\r\n                  patientsPageDefaultFilterValues,\r\n                  variables,\r\n                  fetchPatient\r\n                );\r\n              }}\r\n            />\r\n          </Grid> */}\r\n    </Grid>\r\n  );\r\n};\r\nPatientFilters.propTypes = {\r\n  setProfiles: t.func.isRequired,\r\n  setPageInfo: t.func.isRequired,\r\n  queryParams: t.object.isRequired,\r\n};\r\n\r\nexport default PatientFilters;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FilterList.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Filter.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile1.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Search.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile2.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\TextError.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfiles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DoctorFilters.js",["965"],"import React, { useEffect, useState } from \"react\";\r\nimport ProPtypes from \"prop-types\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport Filter from \"./Filter\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport {\r\n  cadreOptions,\r\n  defaultPageInfo,\r\n  doctorsProfileDefaultFilterByValues,\r\n  genderType,\r\n  specializationOptions,\r\n  statusFilterBy,\r\n} from \"helpers/mockData\";\r\nimport { deleteVar, filterData } from \"helpers/filterHelperFunctions\";\r\nimport { getProviders } from \"components/graphQL/useQuery\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n\r\nconst DoctorFilters = ({ setProfiles, setPageInfo, queryParams }) => {\r\n  const { displayAlert } = useAlert();\r\n  const [statusFilterValue, setStatusFilterValue] = useState(\"\");\r\n  const [providers, setProviders] = useState([]);\r\n  const [profileFilterValues, setProfileFilterValues] = useState(\r\n    doctorsProfileDefaultFilterByValues\r\n  ); // gender cadre specialization providerId\r\n  const [fetchProviders] = useLazyQuery(getProviders);\r\n  const { doctorsParams, doctorsByStatusParams } = queryParams;\r\n  const { fetchDoctors, loading, refetch, variables } = doctorsParams;\r\n  const {\r\n    byStatusLoading,\r\n    byStatusVaribles,\r\n    byStatusRefetch,\r\n    fetchDoctorsByStatus,\r\n  } = doctorsByStatusParams;\r\n\r\n  useEffect(() => {\r\n    fetchProviders()\r\n      .then(({ data }) => {\r\n        if (!data) throw Error(\"Couldn'ProPtypes get list of providers\");\r\n        const providersList = (data?.getProviders?.provider || []).map(\r\n          (provider) => {\r\n            const { _id, name } = provider;\r\n            return { key: name, value: _id };\r\n          }\r\n        );\r\n        setProviders(providersList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onFilterProfileChange = async (name, value) => {\r\n    try {\r\n      setStatusFilterValue(\"\");\r\n      deleteVar(variables);\r\n      const filterValues = { ...profileFilterValues, [name]: value };\r\n      setProfileFilterValues(filterValues);\r\n      filterData(filterValues, {\r\n        fetchData: fetchDoctors,\r\n        refetch,\r\n        variables,\r\n      })\r\n        .then((data) => {\r\n          setPageInfo(data.doctorProfiles.pageInfo || []);\r\n          setProfiles(data.doctorProfiles.profile || defaultPageInfo);\r\n        })\r\n        .catch(() => {\r\n          refresh(setProfileFilterValues, doctorsProfileDefaultFilterByValues);\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setProfileFilterValues, doctorsProfileDefaultFilterByValues);\r\n    }\r\n  };\r\n\r\n  const onFilterStatusChange = async (value) => {\r\n    try {\r\n      setProfileFilterValues(doctorsProfileDefaultFilterByValues);\r\n      deleteVar(byStatusVaribles);\r\n      setStatusFilterValue(value);\r\n      const filterVariables = { status: value };\r\n\r\n      filterData(filterVariables, {\r\n        fetchData: fetchDoctorsByStatus,\r\n        refetch: byStatusRefetch,\r\n        variables: byStatusVaribles,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.doctorProfilesByStatus?.profile || []);\r\n          setPageInfo(data?.doctorProfilesByStatus?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setStatusFilterValue, \"\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setStatusFilterValue, \"\");\r\n    }\r\n  };\r\n\r\n  const refresh = async (setFilterValue, defaultVal) => {\r\n    displayAlert(\"error\", \"Something went wrong while filtering. Try again.\");\r\n    setFilterValue(defaultVal);\r\n\r\n    deleteVar(variables);\r\n\r\n    refetch()\r\n      .then(({ data }) => {\r\n        setProfiles(data?.profiles?.data || []);\r\n        setPageInfo(data?.profiles?.pageInfo || {});\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayAlert(\"error\", \"Failed to get patients data, Try again\");\r\n      });\r\n  };\r\n  return (\r\n    <Grid item container flexWrap=\"wrap\" spacing={4}>\r\n      {/* FILTER BY PROFILE */}\r\n      <Grid item>\r\n        <Grid container flexWrap=\"wrap\" spacing={2} alignItems=\"flex-end\">\r\n          {[\r\n            {\r\n              label: \"\",\r\n              onHandleChange: (e) =>\r\n                onFilterProfileChange(\"gender\", e?.target?.value),\r\n              onClickClearBtn: () => onFilterProfileChange(\"gender\", \"\"),\r\n              options: [{ key: \"Gender\", value: \"\" }, ...genderType],\r\n              name: \"gender\",\r\n              // placeholder: \"By gender\",\r\n              value: profileFilterValues.gender,\r\n              hasClearBtn: true,\r\n              disavle: loading || byStatusLoading,\r\n            },\r\n            {\r\n              label: \"\",\r\n              onHandleChange: (e) =>\r\n                onFilterProfileChange(\"cadre\", e?.target?.value),\r\n              onClickClearBtn: () => onFilterProfileChange(\"cadre\", \"\"),\r\n              options: [{ key: \"Cadre\", value: \"\" }, ...cadreOptions],\r\n              name: \"cadre\",\r\n              // placeholder: \"By cadre\",\r\n              value: profileFilterValues.cadre,\r\n              hasClearBtn: true,\r\n              disavle: loading || byStatusLoading,\r\n            },\r\n            {\r\n              label: \"\",\r\n              onHandleChange: (e) =>\r\n                onFilterProfileChange(\"specialization\", e?.target?.value),\r\n              onClickClearBtn: () =>\r\n                onFilterProfileChange(\"specialization\", \"\"),\r\n              options: [\r\n                { key: \"Specialization\", value: \"\" },\r\n                ...specializationOptions,\r\n              ],\r\n              name: \"specialization\",\r\n              // placeholder: \"By specialization\",\r\n              value: profileFilterValues.specialization,\r\n              hasClearBtn: true,\r\n              disavle: loading || byStatusLoading,\r\n            },\r\n            // {\r\n            //   label: \"\",\r\n            //   onHandleChange: (e) =>\r\n            //     onFilterProfileChange(\"providerId\", e?.target?.value),\r\n            //   onClickClearBtn: () => onFilterProfileChange(\"providerId\", \"\"),\r\n            //   options: [{ key: \"Provider\", value: \"\" }, ...providers],\r\n            //   name: \"providerId\",\r\n            //   placeholder: \"By provider\",\r\n            //   value: profileFilterValues.providerId,\r\n            //   hasClearBtn: true,\r\n            //   disavle: loading || byStatusLoading,\r\n            // },\r\n          ].map((filter, idx) => {\r\n            return (\r\n              <Grid item key={`${idx}-${filter.name}`}>\r\n                <Filter\r\n                  label={filter.label}\r\n                  onHandleChange={(e) => filter.onHandleChange(e)}\r\n                  onClickClearBtn={() => filter.onClickClearBtn()}\r\n                  options={filter.options}\r\n                  name={filter.name}\r\n                  placeholder={filter.placeholder}\r\n                  value={filter.value}\r\n                  hasClearBtn={true}\r\n                  disable={loading || byStatusLoading}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n\r\n          {/* FILTER BY STATUS */}\r\n          <Grid item>\r\n            <Filter\r\n              label=\"\"\r\n              onHandleChange={(e) => onFilterStatusChange(e?.target?.value)}\r\n              onClickClearBtn={() => onFilterStatusChange(\"\")}\r\n              options={[{ key: \"Status\", value: \"\" }, ...statusFilterBy]}\r\n              name=\"status\"\r\n              placeholder=\"None\"\r\n              value={statusFilterValue}\r\n              hasClearBtn={true}\r\n              disable={loading || byStatusLoading}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nDoctorFilters.propTypes = {\r\n  setProfiles: ProPtypes.func,\r\n  setPageInfo: ProPtypes.func,\r\n  queryParams: ProPtypes.object,\r\n};\r\n\r\nexport default DoctorFilters;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\ProfileCard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CustomButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularProgress.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Button.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Card.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\AvailabilityCard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EmptyTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Notifications.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderProfile.js",["966","967","968"],"import React, { useState, useEffect } from \"react\";\r\nimport Copy from \"components/Copy\";\r\n// import { ReactComponent as SearchIcon } from \"assets/images/search.svg\";\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  Grid,\r\n  InputBase,\r\n  Typography,\r\n  Badge,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n// import BellIcon from \"components/Icons/BellIcon\";\r\nimport { ReactComponent as SearchIcon } from \"assets/images/search.svg\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\n// import NotificationsActiveIcon from \"@mui/icons-material/NotificationsActive\";\r\nimport Notifications from \"components/layouts/Notifications\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getPartner, getNotifications } from \"components/graphQL/useQuery\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport BellIcon from \"components/Icons/BellIcon\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  role: {\r\n    fontSize: \"clamp(1rem, 1vw, 1.5rem)\",\r\n    color: theme.palette.common.lightGrey,\r\n  },\r\n\r\n  name: {\r\n    fontWeight: \"normal\",\r\n    fontSize: \"clamp(1.6rem, 2vw, 1.2rem)\",\r\n  },\r\n\r\n  notification: {\r\n    fontSize: \"clamp(2rem, 2vw, 1.2rem)\",\r\n  },\r\n  HeaderProfile: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  head: {\r\n    \"@media(max-width:600px)\": {\r\n      \"&.MuiGrid-root\": {\r\n        display: \"none\",\r\n      },\r\n    },\r\n  },\r\n  iconContainer: {\r\n    height: \"inherit\",\r\n    backgroundColor: \"#F8F8F8\",\r\n    borderRadius: \"100%\",\r\n    display: \"flex\",\r\n    width: \"4.8rem\",\r\n    padding: \"0 !important\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst HeaderProfile = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const { userDetail } = useActions();\r\n  const classes = useStyles();\r\n  function notificationsLabel(count) {\r\n    if (count === 0) {\r\n      return \"no notifications\";\r\n    }\r\n    if (count > 99) {\r\n      return \"more than 99 notifications\";\r\n    }\r\n    return `${count} notifications`;\r\n  }\r\n  const id = localStorage.getItem(\"AppId\");\r\n  const [num, setNum] = useState(null);\r\n  const [pharmacyData, setPharmacyData] = useState([]);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [pharmacy, { data }] = useLazyQuery(getPartner, {\r\n    variables: { id },\r\n  });\r\n  const [notify, { data: notData }] = useLazyQuery(getNotifications, {\r\n    variables: { user: id },\r\n  });\r\n  useEffect(() => {\r\n    setNum(notifications && notifications?.length);\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  useEffect(() => {\r\n    (async () => {\r\n      setTimeout(notify, 300);\r\n    })();\r\n    if (notData) {\r\n      setNotifications(notData.getNotifications.data);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [notData]);\r\n  const handleNotification = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setNum(0);\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      setTimeout(pharmacy, 300);\r\n    })();\r\n    if (data) {\r\n      setPharmacyData(data?.getPartner);\r\n      userDetail({\r\n        data: data?.getPartner.category,\r\n      });\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [pharmacy, data]);\r\n  const returnString = (data) => {\r\n    let string = data?.split(\"/\");\r\n    if (string) return string[string?.length - 1];\r\n    return null;\r\n  };\r\n  // return (\r\n  //   <header className={classes.HeaderProfile}>\r\n  //     <Grid\r\n  //       container\r\n  //       alignItems=\"center\"\r\n  //       gap=\"1rem\"\r\n  //       justifyContent=\"space-between\"\r\n  //       flexWrap=\"nowrap\"\r\n  //       className={classes.head}\r\n  //       spacing={1}\r\n  //       sx={{ height: \"4.8rem\" }}\r\n  //     >\r\n  //       <Grid\r\n  //         item\r\n  //         className={classes.grid}\r\n  //         sx={{\r\n  //           height: \"inherit\",\r\n  //           width: \"40rem\",\r\n  //           background: \"#F8F8F8\",\r\n  //           borderRadius: \"4rem\",\r\n  //           display: \"flex\",\r\n  //           alignItems: \"center\",\r\n  //           padding: \"1.4rem 1.6rem\",\r\n  //           paddingTop: 0,\r\n  //         }}\r\n  //       >\r\n  //         <IconButton\r\n  //           type=\"button\"\r\n  //           sx={{ color: \"#F8F8F8\" }}\r\n  //           aria-label=\"search\"\r\n  //         >\r\n  //           <SearchIcon />\r\n  //         </IconButton>\r\n  //         <InputBase\r\n  //           sx={{ flex: 1, p: 0 }}\r\n  //           size=\"large\"\r\n  //           placeholder=\"Search partners, patients, enrollees… \"\r\n  //         />\r\n  //       </Grid>\r\n  //       <Grid className={classes.iconContainer} item>\r\n  //         <IconButton\r\n  //           aria-label={notificationsLabel(num)}\r\n  //           onClick={(event) => handleNotification(event)}\r\n  //           sx={{\r\n  //             borderRadius: \"100%\",\r\n  //             backgroundColor: \"#F8F8F8\",\r\n  //             padding: \"1rem\",\r\n  //           }}\r\n  //         >\r\n  //           <Badge>\r\n  //             <BellIcon sx={{ color: \"transparent\" }} />\r\n  //           </Badge>\r\n  //         </IconButton>\r\n  //         <Notifications\r\n  //           anchorEl={anchorEl}\r\n  //           Notifications={notifications}\r\n  //           setNotifications={setNotifications}\r\n  //           setAnchorEl={setAnchorEl}\r\n  //         />\r\n  //       </Grid>\r\n  //       <Grid item className={classes.iconContainer}>\r\n  //         <Avatar\r\n  //           alt=\"Display avatar\"\r\n  //           src={displayPhoto}\r\n  //           sx={{ height: \"100%\", width: \"100%\" }}\r\n  //         />\r\n  //       </Grid>\r\n  //     </Grid>\r\n  //   </header>\r\n  // );\r\n  return (\r\n    <header className={classes.HeaderProfile}>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        gap=\"2rem\"\r\n        justifyContent=\"space-between\"\r\n        flexWrap=\"nowrap\"\r\n        className={classes.head}\r\n        spacing={1}\r\n        sx={{ height: \"4.8rem\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          className={classes.grid}\r\n          sx={{\r\n            height: \"inherit\",\r\n            width: \"40rem\",\r\n            background: \"#F8F8F8\",\r\n            borderRadius: \"4rem\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            padding: \"1.4rem 1.6rem\",\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <IconButton\r\n            type=\"button\"\r\n            sx={{ color: \"#F8F8F8\" }}\r\n            aria-label=\"search\"\r\n          >\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <InputBase\r\n            sx={{ flex: 1, p: 0 }}\r\n            size=\"large\"\r\n            placeholder=\"Search , Patients, Doctors... \"\r\n          />\r\n        </Grid>\r\n        <Grid className={classes.iconContainer} item>\r\n          <IconButton\r\n            aria-label={notificationsLabel(num)}\r\n            onClick={(event) => handleNotification(event)}\r\n            sx={{\r\n              borderRadius: \"100%\",\r\n              backgroundColor: \"#F8F8F8\",\r\n              padding: \"1rem\",\r\n            }}\r\n          >\r\n            <Badge>\r\n              <BellIcon sx={{ color: \"transparent\" }} />\r\n            </Badge>\r\n          </IconButton>\r\n          <Notifications\r\n            anchorEl={anchorEl}\r\n            Notifications={notifications}\r\n            setNotifications={setNotifications}\r\n            setAnchorEl={setAnchorEl}\r\n          />\r\n        </Grid>\r\n        <Grid item className={classes.iconContainer}>\r\n          <Avatar\r\n            alt=\"Display avatar\"\r\n            src={\r\n              pharmacyData?.logoImageUrl\r\n                ? pharmacyData?.logoImageUrl\r\n                : displayPhoto\r\n            }\r\n            sx={{ height: \"100%\", width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </header>\r\n  );\r\n  // return (\r\n  //   <header className={classes.HeaderProfile}>\r\n  //     <Grid\r\n  //       container\r\n  //       alignItems=\"center\"\r\n  //       gap=\"3px\"\r\n  //       justifyContent=\"space-between\"\r\n  //       flexWrap=\"nowrap\"\r\n  //     >\r\n  //       <Grid\r\n  //         className={classes.head}\r\n  //         item\r\n  //         style={{ marginRight: \"3em\", marginLeft: \"1em\" }}\r\n  //       >\r\n  //         <Grid container direction=\"column\" justifyContent=\"center\">\r\n  //           {/* <Grid item>\r\n  //             <Typography variant=\"body1\" className={classes.name}>\r\n  //               {pharmacyData?.name}\r\n  //             </Typography>\r\n  //           </Grid> */}\r\n  //           {/*<Grid item>\r\n  //         <Typography\r\n  //               variant=\"body2\"\r\n  //               className={classes.role}\r\n  //               style={{ fontWeight: 300 }}\r\n  //             >\r\n  //               {pharmacyData?.profileUrl !== null &&\r\n  //               pharmacyData?.category === \"hospital\" ? (\r\n  //                 <Grid item container alignItems=\"center\">\r\n  //                   {returnString(pharmacyData?.profileUrl)}\r\n  //                   <Copy text={pharmacyData?.profileUrl} name=\"Profile URL\" />\r\n  //                 </Grid>\r\n  //               ) : (\r\n  //                 pharmacyData?.category\r\n  //               )}\r\n  //             </Typography>\r\n  //           </Grid> */}\r\n  //         </Grid>\r\n  //       </Grid>\r\n  //       <Grid className={classes.iconContainer} item>\r\n  //         {/* <IconButton\r\n  //           aria-label={notificationsLabel(num)}\r\n  //           onClick={(event) => handleNotification(event)}\r\n  //           sx={{\r\n  //             borderRadius: \"100%\",\r\n  //             backgroundColor: \"#F8F8F8\",\r\n  //             padding: \"1rem\",\r\n  //           }}\r\n  //         >\r\n  //           <Badge>\r\n  //             <BellIcon sx={{ color: \"transparent\" }} />\r\n  //           </Badge>\r\n  //         </IconButton> */}\r\n  //         <Grid item>\r\n  //           <Avatar\r\n  //             alt={pharmacyData?.name}\r\n  //             src={\r\n  //               pharmacyData?.logoImageUrl\r\n  //                 ? pharmacyData?.logoImageUrl\r\n  //                 : displayPhoto\r\n  //             }\r\n  //           />\r\n  //         </Grid>\r\n  //         <Notifications\r\n  //           anchorEl={anchorEl}\r\n  //           Notifications={notifications}\r\n  //           setNotifications={setNotifications}\r\n  //           setAnchorEl={setAnchorEl}\r\n  //         />\r\n  //       </Grid>\r\n  //     </Grid>\r\n  //   </header>\r\n  // );\r\n};\r\n\r\nexport default HeaderProfile;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Headers.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\CardItem.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderContents.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalDashboardChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderContent.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersContents.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashboardChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashCharts.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\AvailabilityTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\SideNav.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Header.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAppType.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\SubscriptionModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\BellIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\LogoutIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\asideMenus.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helperFunctions\\breadcrumb.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\fragment.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Copy.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SearchIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Medications.js",["969","970","971","972"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Consultations.js",["973","974","975","976"],"import React, { useEffect, useState } from \"react\";\r\nimport { dateMoment } from \"components/Utilities/Time\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, Typography, TableRow, TableCell } from \"@mui/material\";\r\nimport { FilterList, Loader } from \"components/Utilities\";\r\nimport { EnhancedTable, NoData, EmptyTable } from \"components/layouts\";\r\nimport { consultationsHeadCells4 } from \"components/Utilities/tableHeaders\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getConsultations } from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"12rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst filterOptions = [\r\n  { id: 0, value: \"Name\" },\r\n  { id: 1, value: \"Date\" },\r\n  { id: 2, value: \"Description\" },\r\n];\r\n\r\nconst Consultations = () => {\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const { patientConsultation } = useActions();\r\n  const { patientId } = useParams();\r\n  const [fetchConsultations, { loading, data, error }] =\r\n    useLazyQuery(getConsultations);\r\n\r\n  useEffect(() => {\r\n    fetchConsultations({\r\n      variables: {\r\n        id: patientId,\r\n        orderBy: \"-createdAt\",\r\n      },\r\n    });\r\n  }, [fetchConsultations, patientId]);\r\n\r\n  const [consultations, setConsultations] = useState([]);\r\n  useEffect(() => {\r\n    if (data) {\r\n      setConsultations(data?.getConsultations?.data);\r\n      setPageInfo(data?.getConsultations?.pageInfo);\r\n    }\r\n  }, [data, consultations, patientConsultation]);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n\r\n  return (\r\n    <Grid container gap={2} flexWrap=\"nowrap\" direction=\"column\" height=\"100%\">\r\n      <Grid\r\n        item\r\n        container\r\n        flexWrap=\"nowrap\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item flex={1}>\r\n          <Typography variant=\"h2\">Consultations</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <FilterList options={filterOptions} title=\"Filter\" />\r\n        </Grid>\r\n      </Grid>\r\n      {consultations.length > 0 ? (\r\n        <Grid item container direction=\"column\" height=\"100%\">\r\n          <EnhancedTable\r\n            headCells={consultationsHeadCells4}\r\n            rows={consultations}\r\n            paginationLabel=\"Patients per page\"\r\n            hasCheckbox={true}\r\n            changeLimit={(e) =>\r\n              changeHospitalTableLimit(fetchConsultations, {\r\n                first: e,\r\n                id: patientId,\r\n                orderBy: \"-createdAt\",\r\n              })\r\n            }\r\n            dataPageInfo={pageInfo}\r\n            handlePagination={(page) =>\r\n              handleHospitalPageChange(fetchConsultations, page, pageInfo, {\r\n                id: patientId,\r\n                orderBy: \"-createdAt\",\r\n              })\r\n            }\r\n          >\r\n            {consultations.map((row, index) => {\r\n              const {\r\n                doctorData,\r\n                createdAt,\r\n                symptoms,\r\n                _id,\r\n                contactMedium,\r\n                type,\r\n                status,\r\n              } = row;\r\n\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                  key={_id}\r\n                  sx={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    history.push(\r\n                      `/patients/${patientId}/consultations/case-note/${_id}`\r\n                    )\r\n                  }\r\n                >\r\n                  <TableCell align=\"left\" className={classes.tableCell}>\r\n                    {dateMoment(createdAt)}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                    style={{ maxWidth: \"25rem\" }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <span style={{ fontSize: \"1.25rem\" }}>\r\n                        {doctorData.firstName\r\n                          ? `${doctorData.firstName} ${doctorData.lastName}`\r\n                          : \"No Doctor\"}\r\n                      </span>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\" className={classes.tableCell}>\r\n                    <Grid container gap={1}>\r\n                      {symptoms\r\n                        ? symptoms.map((i) => {\r\n                            return <p key={i.name}>{i.name}</p>;\r\n                          })\r\n                        : \"No Value\"}\r\n                    </Grid>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                    style={{\r\n                      color: theme.palette.common.grey,\r\n                      minWidth: \"6rem\",\r\n                    }}\r\n                  >\r\n                    {contactMedium ? contactMedium : \"No Value\"}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                    style={{\r\n                      color: theme.palette.common.grey,\r\n                    }}\r\n                  >\r\n                    {type ? type : \"No Value\"}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                    style={{\r\n                      color: theme.palette.common.grey,\r\n                    }}\r\n                  >\r\n                    {status ? status : \"No Value\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </EnhancedTable>\r\n        </Grid>\r\n      ) : (\r\n        <EmptyTable\r\n          headCells={consultationsHeadCells4}\r\n          paginationLabel=\"Patients per page\"\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Consultations;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CaseNotes.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\MedicalRecords.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Chat.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Prescriptions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SinglePatient.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\hmoPages\\HmoEnrollees.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Patients.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Setting.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewResult.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Pending.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboards.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpConsultations.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SubscriptionIncome.js",["977"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  TableCell,\r\n  TableRow,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport TrendingDownIcon from \"@mui/icons-material/TrendingDown\";\r\nimport {\r\n  timeMoment,\r\n  dateMoment,\r\n  formatNumber,\r\n} from \"components/Utilities/Time\";\r\nimport { EnhancedTable, NoData, EmptyTable } from \"components/layouts\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { financeHeader2 } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { Loader } from \"components/Utilities\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getSubscriptionsIncome } from \"components/graphQL/useQuery\";\r\nimport { defaultPageInfo } from \"helpers/mockData\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { useAlert } from \"components/hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  iconWrapper: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: \"50%\",\r\n    display: \"grid\",\r\n    placeContent: \"center\",\r\n    background: theme.palette.common.lightGreen,\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SubscriptionIncome = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [profiles, setProfiles] = useState(\"\");\r\n  const { displayMessage } = useAlert();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n  const [pageInfo, setPageInfo] = useState(defaultPageInfo);\r\n\r\n  const [fetchDoctors, { error, loading }] = useLazyQuery(\r\n    getSubscriptionsIncome\r\n  );\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    try {\r\n      setPageInfo(\r\n        response.getEarningStats.subscriptionIncomeData.PageInfo || []\r\n      );\r\n      setProfiles(\r\n        response.getEarningStats.subscriptionIncomeData.data || defaultPageInfo\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n      displayMessage(\"error\", error);\r\n    }\r\n  };\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const { data } = await fetchDoctors({\r\n          variables: {\r\n            first: pageInfo.limit,\r\n            providerId: partnerProviderId,\r\n          },\r\n        });\r\n        if (data) {\r\n          setPageInfo(\r\n            data.getEarningStats.subscriptionIncomeData.PageInfo || []\r\n          );\r\n          setProfiles(\r\n            data.getEarningStats.subscriptionIncomeData.data || defaultPageInfo\r\n          );\r\n        }\r\n        // ...\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} height=\"100%\">\r\n      <Card\r\n        variant=\"outlined\"\r\n        sx={{\r\n          width: \"100%\",\r\n          borderRadius: \"1.5rem\",\r\n          borderColor: \"transparent\",\r\n          p: 2,\r\n          mt: 2,\r\n        }}\r\n      >\r\n        <Grid item container gap={1} alignItems=\"center\">\r\n          <Grid item flex={1}>\r\n            <Typography noWrap variant=\"h1\" component=\"div\" color=\"#2D2F39\">\r\n              Subscription Earnings table\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item className={classes.iconWrapper}>\r\n            <TrendingDownIcon color=\"success\" className={classes.cardIcon} />\r\n          </Grid>\r\n        </Grid>\r\n        {profiles.length > 0 ? (\r\n          <Grid item container>\r\n            <EnhancedTable\r\n              headCells={financeHeader2}\r\n              rows={profiles}\r\n              paginationLabel=\"finance per page\"\r\n              hasCheckbox={true}\r\n              dataPageInfo={pageInfo}\r\n              changeLimit={async (e) => {\r\n                const res = await changeHospitalTableLimit(fetchDoctors, {\r\n                  first: e,\r\n                  providerId: partnerProviderId,\r\n                });\r\n                console.log(res);\r\n                await setTableData(res.data, \"Failed to change table limit\");\r\n              }}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchDoctors,\r\n                  page,\r\n                  pageInfo,\r\n                  partnerProviderId\r\n                );\r\n                await setTableData(res, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const { createdAt, amount, patientData, providerId, planId } =\r\n                  row;\r\n                const { firstName, image, lastName } = patientData || {};\r\n                const isItemSelected = isSelected(row._id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row._id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(\r\n                            row.id,\r\n                            selectedRows,\r\n                            setSelectedRows\r\n                          )\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {formatNumber(amount.toFixed(2))}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {patientData && patientData !== {} ? (\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <span style={{ fontSize: \"1.25rem\" }}>\r\n                            {patientData &&\r\n                              `${firstName && firstName} ${\r\n                                lastName && lastName\r\n                              }`}\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        \"No name\"\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {planId}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {providerId}\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.black }}\r\n                    >\r\n                      {`${dateMoment(createdAt)} - ${timeMoment(createdAt)}`}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={financeHeader2}\r\n            paginationLabel=\"Finance  per page\"\r\n          />\r\n        )}\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SubscriptionIncome;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalSettings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ReferralTab.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorPayout.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorEarning.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\hmoPages\\HmoDashboard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\PrivateRoute.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Financetable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Payout.js",["978"],"import React, { useEffect, useState } from \"react\";\r\nimport { EmptyTable, NoData } from \"components/layouts\";\r\nimport { defaultPageInfo } from \"helpers/mockData\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Chip,\r\n  Checkbox,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@mui/material\";\r\nimport { timeMoment, dateMoment } from \"components/Utilities/Time\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport { Loader } from \"components/Utilities\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEarningStats } from \"components/graphQL/useQuery\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { payoutHeader } from \"components/Utilities/tableHeaders\";\r\nimport TrendingUpIcon from \"@mui/icons-material/TrendingUp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  iconWrapper: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: \"50%\",\r\n    display: \"grid\",\r\n    placeContent: \"center\",\r\n    marginLeft: \"1rem\",\r\n    background: theme.palette.common.lightGreen,\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Payout = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n  const [profiles, setProfiles] = useState(\"\");\r\n  const { displayMessage } = useAlert();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n  const [fetchDoctors, { error, loading }] = useLazyQuery(getEarningStats);\r\n\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const { data } = await fetchDoctors({\r\n          variables: {\r\n            first: pageInfo.limit,\r\n            providerId: partnerProviderId,\r\n          },\r\n        });\r\n        if (data) {\r\n          setPageInfo(data.getEarningStats.payoutData.PageInfo || []);\r\n          setProfiles(data.getEarningStats.payoutData.data || defaultPageInfo);\r\n        }\r\n        // ...\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    response\r\n      .then(({ data }) => {\r\n        setPageInfo(data.getEarningStats.payoutData.PageInfo || []);\r\n        setProfiles(data.getEarningStats.payoutData.data || defaultPageInfo);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayMessage(\"error\", error);\r\n      });\r\n  };\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n\r\n  return (\r\n    <Grid container direction=\"column\" rowSpacing={2}>\r\n      <>\r\n        <Grid\r\n          item\r\n          container\r\n          justifyContent=\"space-between\"\r\n          style={{ paddingBottom: \"3rem\" }}\r\n        >\r\n          <Grid item>\r\n            <Grid item container alignItems=\"center\">\r\n              <Typography noWrap variant=\"h1\" component=\"div\" color=\"#2D2F39\">\r\n                Payout table\r\n              </Typography>\r\n              <Grid item className={classes.iconWrapper} marginLeft=\"1rem\">\r\n                <TrendingUpIcon color=\"success\" className={classes.cardIcon} />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {profiles?.length > 0 ? (\r\n          <Grid item container>\r\n            <EnhancedTable\r\n              headCells={payoutHeader}\r\n              rows={profiles}\r\n              paginationLabel=\"payout per page\"\r\n              hasCheckbox={true}\r\n              dataPageInfo={pageInfo}\r\n              changeLimit={async (e) => {\r\n                const res = await changeHospitalTableLimit(fetchDoctors, {\r\n                  first: e,\r\n                  providerId: partnerProviderId,\r\n                });\r\n\r\n                await setTableData(res, \"Failed to change table limit\");\r\n              }}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchDoctors,\r\n                  page,\r\n                  pageInfo,\r\n                  partnerProviderId\r\n                );\r\n                await setTableData(res, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const { amount, createdAt, status, _id, doctorData } = row;\r\n                const data = doctorData || [];\r\n                const { firstName, lastName, picture } = data[0] || {};\r\n                const isItemSelected = isSelected(_id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={_id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(_id, selectedRows, setSelectedRows)\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.black }}\r\n                    >\r\n                      {dateMoment(createdAt)}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.black }}\r\n                    >\r\n                      {timeMoment(createdAt)}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {row?.doctorData && row?.doctorData[0] !== {} ? (\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"left\",\r\n                          }}\r\n                        >\r\n                          <span style={{ fontSize: \"1.25rem\" }}>{`${\r\n                            firstName && firstName\r\n                          } ${lastName && lastName}`}</span>\r\n                        </div>\r\n                      ) : (\r\n                        \"No Name\"\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {amount}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <Chip\r\n                        label={status}\r\n                        className={classes.badge}\r\n                        style={{\r\n                          background:\r\n                            status === \"Success\"\r\n                              ? theme.palette.common.lightGreen\r\n                              : status === \"Failed\"\r\n                              ? theme.palette.common.lightGreen\r\n                              : theme.palette.common.lightRed,\r\n                          color:\r\n                            status === \"Success\"\r\n                              ? theme.palette.common.green\r\n                              : status === \"Failed\"\r\n                              ? theme.palette.common.danger\r\n                              : theme.palette.common.red,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={payoutHeader}\r\n            paginationLabel=\"Payout  per page\"\r\n          />\r\n        )}\r\n      </>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Payout;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewMessage.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Finance.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Email.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Messages.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpCaseNote.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Appointments.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CreateMessage.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpEarnings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpPatients.js",["979","980","981"],"import React, { useState, useEffect } from \"react\";\r\nimport { Loader } from \"components/Utilities\";\r\nimport {\r\n  Grid,\r\n  TableRow,\r\n  Typography,\r\n  TableCell,\r\n  Card,\r\n  Button,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { NoData, EnhancedTable, EmptyTable } from \"components/layouts\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { hcpPatientsHeadCells } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { getDoctorPatients } from \"components/graphQL/useQuery\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"12rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst HcpPatients = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n\r\n  const { hcpId } = useParams();\r\n\r\n  const { setSelectedRows } = useActions();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n\r\n  const [fetchDoctorsPatients, { loading, error, data }] = useLazyQuery(\r\n    getDoctorPatients,\r\n    { notifyOnNetworkStatusChange: true }\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchDoctorsPatients({\r\n      variables: { id: hcpId },\r\n    });\r\n  }, [fetchDoctorsPatients, hcpId]);\r\n  const [profiles, setProfiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setProfiles(data.getDoctorPatients.data);\r\n      setPageInfo(data.getDoctorPatients.pageInfo);\r\n    }\r\n  }, [data]);\r\n  const history = useHistory();\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n      <Card\r\n        variant=\"outlined\"\r\n        sx={{\r\n          width: \"100%\",\r\n          borderRadius: \"1.5rem\",\r\n          borderColor: \"transparent\",\r\n          p: 2,\r\n          mt: 2,\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <Grid item sx={{ mb: 2 }}>\r\n          <Typography variant=\"h2\">Doctor Patients</Typography>\r\n        </Grid>\r\n        {profiles.length > 0 ? (\r\n          <Grid item container direction=\"column\" height=\"100%\">\r\n            <EnhancedTable\r\n              headCells={hcpPatientsHeadCells}\r\n              rows={profiles}\r\n              paginationLabel=\"List Per Page\"\r\n              hasCheckbox={true}\r\n              changeLimit={(e) =>\r\n                changeHospitalTableLimit(fetchDoctorsPatients, {\r\n                  first: e,\r\n                  id: hcpId,\r\n                })\r\n              }\r\n              dataPageInfo={pageInfo}\r\n              handlePagination={(page) =>\r\n                handleHospitalPageChange(fetchDoctorsPatients, page, pageInfo, {\r\n                  id: hcpId,\r\n                })\r\n              }\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const { _id, doctorData, patientData } = row;\r\n                const isItemSelected = isSelected(_id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => history.push(`/hcps/${hcpId}/profile`)}\r\n                    key={_id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(_id, selectedRows, setSelectedRows)\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.grey }}\r\n                    >\r\n                      {doctorData\r\n                        ? doctorData?.dociId?.split(\"-\")[1]\r\n                        : \"No Doctor ID\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <div\r\n                        style={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          textAlign: \"left\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: \"1.25rem\" }}>\r\n                          {patientData?.firstName\r\n                            ? `${patientData?.firstName} ${patientData?.lastName}`\r\n                            : \"No Patient Name\"}\r\n                          {row.lastName}\r\n                        </span>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={hcpPatientsHeadCells}\r\n            paginationLabel=\"List  per page\"\r\n          />\r\n        )}\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HcpPatients;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAvailability.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAppointments.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HCPChat.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SingleHCP.js",["982"],"import React, { useState, createElement, useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { NoData } from \"components/layouts\";\r\nimport { doctor, getDoctorsProfile } from \"components/graphQL/useQuery\";\r\nimport { CustomButton, Loader, Card } from \"components/Utilities\";\r\nimport PersonRemoveIcon from \"@mui/icons-material/PersonRemove\";\r\nimport PaymentsIcon from \"@mui/icons-material/Payments\";\r\nimport DisablePatient from \"components/modals/DeleteOrDisable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { ReactComponent as ConsultationIcon } from \"assets/images/consultation.svg\";\r\nimport { ReactComponent as UserIcon } from \"assets/images/user.svg\";\r\nimport { ReactComponent as CalendarIcon } from \"assets/images/calendar.svg\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { deleteDoctor } from \"components/graphQL/Mutation\";\r\n//\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridContainer: {\r\n    paddingBottom: \"10rem\",\r\n  },\r\n\r\n  gridsWrapper: {\r\n    \"@media(max-width:600px)\": {\r\n      \"&.MuiGrid-root\": {\r\n        flexDirection: \"column\",\r\n        rowGap: \"1.5rem\",\r\n        alignItems: \"center\",\r\n        \"& .detailsContainer\": {\r\n          justifyContent: \"space-around\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  parentGrid: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  icon: {\r\n    \"&.css-1o5jd4y-MuiSvgIcon-root\": {\r\n      fontSize: \"4rem\",\r\n    },\r\n  },\r\n  \"@media(max-width:600px)\": {\r\n    \"&.MuiGrid-root\": {\r\n      flexDirection: \"column\",\r\n      rowGap: \"1.5rem\",\r\n    },\r\n  },\r\n  container: {\r\n    \"&.MuiGrid-root\": {\r\n      paddingTop: \"5rem\",\r\n      flexWrap: \"wrap\",\r\n      \"@media(max-width:600px)\": {\r\n        \"&\": {\r\n          padding: 0,\r\n          paddingTop: \"1rem\",\r\n          // flexDirection: \"column\",\r\n          rowGap: \"1.5rem\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\nconst SingleHCP = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { hcpId } = useParams();\r\n  const history = useHistory();\r\n  const [disableUser] = useMutation(deleteDoctor);\r\n  const [doctorProfile, setDoctorProfile] = useState(\"\");\r\n  const [openDisableDoctor, setOpenDisableDoctor] = useState(false);\r\n  const { loading, error, data } = useQuery(doctor, {\r\n    variables: {\r\n      id: hcpId,\r\n    },\r\n  });\r\n  const onConfirm = async () => {\r\n    try {\r\n      await disableUser({\r\n        variables: { id: hcpId },\r\n        refetchQueries: [{ query: getDoctorsProfile }],\r\n      });\r\n      history.push(\"/hcps\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (data) {\r\n      setDoctorProfile(data.doctorProfile);\r\n    }\r\n  }, [data, hcpId]);\r\n\r\n  const cards2 = [\r\n    {\r\n      id: 1,\r\n      title: \"Doctor Profile\",\r\n      background: theme.palette.common.lightRed,\r\n      path: \"profile\",\r\n      icon: UserIcon,\r\n      fill: theme.palette.common.red,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Availability\",\r\n      background: theme.palette.common.lightGreen,\r\n      path: \"availability\",\r\n      icon: ConsultationIcon,\r\n      fill: theme.palette.common.green,\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Consultations\",\r\n      background: theme.palette.common.lightRed,\r\n      path: \"consultations\",\r\n      icon: ConsultationIcon,\r\n      fill: theme.palette.common.red,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Earnings\",\r\n      background: theme.palette.common.lightGreen,\r\n      path: \"earnings\" /* \"earnings\", */,\r\n      icon: PaymentsIcon,\r\n      fill: theme.palette.common.green,\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Patients\",\r\n      background: theme.palette.common.lightRed,\r\n      path: \"doctor-patients\",\r\n      icon: UserIcon,\r\n      fill: theme.palette.common.red,\r\n    },\r\n    // {\r\n    //   id: 2,\r\n    //   title: \"Appointments\",\r\n    //   background: theme.palette.common.lightGreen,\r\n    //   path: \"appointments\",\r\n    //   icon: CalendarIcon,\r\n    //   fill: theme.palette.common.green,\r\n    // },\r\n  ];\r\n\r\n  const trasparentButton = {\r\n    background: \"transparent\",\r\n    hover: \"#fafafa\",\r\n    active: \"#f4f4f4\",\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        gap={2}\r\n        rowSpacing={2}\r\n        className={classes.gridContainer}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          p={2}\r\n          className={classes.gridsWrapper}\r\n        >\r\n          {/* Display photo and profile name grid */}\r\n          <Grid\r\n            item\r\n            alignItems=\"center\"\r\n            container\r\n            gap={2}\r\n            className=\"detailsContainer\"\r\n            sx={{ flex: 1 }}\r\n          >\r\n            <Typography variant=\"h2\">{`${doctorProfile.firstName} ${doctorProfile.lastName}`}</Typography>\r\n          </Grid>\r\n          {/* Action Buttons grid */}\r\n\r\n          <Grid item>\r\n            <CustomButton\r\n              endIcon={<PersonRemoveIcon />}\r\n              title=\"Disable Doctor\"\r\n              onClick={() => setOpenDisableDoctor(true)}\r\n              type={trasparentButton}\r\n              textColor={theme.palette.common.red}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* BOTTOM CARDS SECTION */}\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            p={2}\r\n            flexWrap=\"wrap\"\r\n            // sx={{ background: \"yellow\" }}\r\n            columnSpacing={{ md: 6, sm: 4, xs: 4 }}\r\n            rowSpacing={{ md: 6, sm: 4, xs: 4 }}\r\n            // spacing={2}\r\n          >\r\n            {cards2.map((card) => (\r\n              <Grid\r\n                key={card.id}\r\n                item\r\n                xs={10}\r\n                sm={6}\r\n                md={4}\r\n                className={classes.parentGrid}\r\n                component={Link}\r\n                to={`/hcps/${hcpId}/${card.path}`}\r\n              >\r\n                <Card\r\n                  title={card.title}\r\n                  background={card.background}\r\n                  header=\"h4\"\r\n                >\r\n                  {createElement(card.icon, {\r\n                    fill: card.fill,\r\n                    color:\r\n                      card.id === 4 || card.id === 6 ? \"success\" : undefined,\r\n                    style: { fontSize: \"clamp(2.5rem, 3vw,4rem)\" },\r\n                  })}\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <DisablePatient\r\n        open={openDisableDoctor}\r\n        setOpen={setOpenDisableDoctor}\r\n        title=\"Delete Doctor\"\r\n        btnValue=\"delete\"\r\n        confirmationMsg=\"delete Doctor\"\r\n        onConfirm={onConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleHCP;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Hcps.js",["983","984","985","986","987","988"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { NoData, EmptyTable } from \"components/layouts\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { useMutation, useLazyQuery, NetworkStatus } from \"@apollo/client\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  Modals,\r\n  Loader,\r\n  CompoundSearch,\r\n  DoctorFilters,\r\n  CustomButton,\r\n} from \"components/Utilities\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport TableLayout from \"components/layouts/TableLayout\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { hcpsHeadCells5 } from \"components/Utilities/tableHeaders\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Grid, TableRow, TableCell, Chip } from \"@mui/material\";\r\nimport { createDOctorProfile } from \"components/graphQL/Mutation\";\r\nimport { timeConverter } from \"components/Utilities/Time\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  getSearchPlaceholder,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { defaultPageInfo, doctorsSearchOptions } from \"helpers/mockData\";\r\nimport {\r\n  getDoctorsProfile,\r\n  getDoctorsProfileByStatus,\r\n} from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  filterBtnGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      marginRight: \"3rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n      whiteSpace: \"nowrap\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem !important\",\r\n      height: \"2.7rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n\r\n  searchFilterBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: theme.palette.common.black,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  uploadBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: \"#f2f2f2\",\r\n      boxShadow: \"none\",\r\n      color: theme.palette.common.black,\r\n\r\n      \"&:hover\": {\r\n        background: \"#f2f3f3\",\r\n        boxShadow: \"none\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        boxShadow: \"none\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Hcps = () => {\r\n  const classes = useStyles();\r\n  const { displayMessage } = useAlert();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n  const cadre = [\r\n    { key: \"1\", value: \"1\" },\r\n    { key: \"2\", value: \"2\" },\r\n    { key: \"3\", value: \"3\" },\r\n    { key: \"4\", value: \"4\" },\r\n    { key: \"5\", value: \"5\" },\r\n  ];\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n  const [fetchDoctors, { error, loading, refetch, variables, networkStatus }] =\r\n    useLazyQuery(getDoctorsProfile);\r\n  const [\r\n    fetchDoctorsByStatus,\r\n    {\r\n      loading: byStatusLoading,\r\n      refetch: byStatusRefetch,\r\n      variables: byStatusVariables,\r\n    },\r\n  ] = useLazyQuery(getDoctorsProfileByStatus);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const { data } = await fetchDoctors({\r\n          variables: {\r\n            first: pageInfo.limit,\r\n            providerId: partnerProviderId,\r\n          },\r\n        });\r\n        if (data) {\r\n          setPageInfo(data.doctorProfiles.pageInfo || []);\r\n          setProfiles(data.doctorProfiles.profile || defaultPageInfo);\r\n        }\r\n        // ...\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    response\r\n      .then(({ data }) => {\r\n        setPageInfo(data.doctorProfiles.pageInfo || []);\r\n        setProfiles(data.doctorProfiles.profile || defaultPageInfo);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayMessage(\"error\", errMsg);\r\n      });\r\n  };\r\n\r\n  const [profiles, setProfiles] = useState(\"\");\r\n\r\n  const [openHcpFilter, setOpenHcpFilter] = useState(false);\r\n  const [openAddHcp, setOpenAddHcp] = useState(false);\r\n\r\n  const initialValues1 = {\r\n    hospital: \"\",\r\n    specialization: \"\",\r\n    phone: \"\",\r\n    cadre: \"\",\r\n  };\r\n\r\n  const validationSchema1 = Yup.object({\r\n    hospital: Yup.string(\"Enter your hospital\"),\r\n    specialization: Yup.string(\"Enter your specialization\"),\r\n    phone: Yup.number(\"Enter a correct Number\").typeError(\r\n      \"Enter a current Number\"\r\n    ),\r\n    cadre: Yup.string(\"Enter your Cadre\").trim(),\r\n  });\r\n  const onSubmit1 = async (values) => {\r\n    const { specialization } = values;\r\n    await refetch({\r\n      specialization,\r\n    });\r\n    setOpenHcpFilter(false);\r\n  };\r\n  const onSubmit = async (values) => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      gender,\r\n      phone,\r\n      email,\r\n      hospital,\r\n      healaId,\r\n      specialization,\r\n      dob,\r\n      cadre,\r\n      image,\r\n    } = values;\r\n    const correctDOB = timeConverter(dob);\r\n    await createDoc({\r\n      variables: {\r\n        dociId: healaId,\r\n        firstName,\r\n        lastName,\r\n        gender,\r\n        phoneNumber: phone,\r\n        email,\r\n        hospital,\r\n        specialization,\r\n        dob: correctDOB,\r\n        cadre,\r\n        image,\r\n        providerId: \"61db6f8968b248001aec4fcb\",\r\n      },\r\n      refetchQueries: [{ query: getDoctorsProfile }],\r\n    });\r\n    setOpenAddHcp(false);\r\n  };\r\n  const specializations = [\r\n    { key: \"diagnostics\", value: \"diagnostics\" },\r\n    { key: \"pharmacy\", value: \"pharmacy\" },\r\n  ];\r\n\r\n  const gender = [\r\n    { key: \"Male\", value: \"Male\" },\r\n    { key: \"Female\", value: \"Female\" },\r\n  ];\r\n\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    specialization: \"\",\r\n    image: null,\r\n    cadre: \"\",\r\n    gender: \"\",\r\n    hospital: \"\",\r\n    phone: \"\",\r\n    dob: null,\r\n    healaId: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string(\"Enter your firstName\").required(\r\n      \"firstName is required\"\r\n    ),\r\n    hospital: Yup.string(\"Enter your hosptial\").required(\r\n      \"hospital is required\"\r\n    ),\r\n    dob: Yup.date(\"required\")\r\n      .typeError(\" Enter a valid DOB\")\r\n      .required(\" DOB required\"),\r\n    healaId: Yup.string(\"Enter healaId\").required(\"HealaID required\"),\r\n    gender: Yup.string(\"select your Gender\").required(\"Select a gender\"),\r\n    phone: Yup.number(\"Enter your Phone Number\")\r\n      .typeError(\" Enter a valid phone number\")\r\n      .min(11, \"min value is  11 digits\")\r\n      .required(\"Phone number is required\"),\r\n    lastName: Yup.string(\"Enter your lastName\").required(\r\n      \"LastName is required\"\r\n    ),\r\n    image: Yup.string(\"Upload a single Image\")\r\n      .typeError(\"Pick correct image\")\r\n      .required(\"Image is required\"),\r\n    specialization: Yup.string(\"select your Specialization\").required(\r\n      \"Specialization is required\"\r\n    ),\r\n    cadre: Yup.string(\"select your Cadre\").required(\"Cadre is required\"),\r\n  });\r\n  const [createDoc] = useMutation(createDOctorProfile);\r\n  const history = useHistory();\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n      <Grid\r\n        item\r\n        gap={{ md: 4, sm: 4, xs: 2 }}\r\n        flexDirection={{ md: \"row\", sm: \"row\", xs: \"column\" }}\r\n        container\r\n        justifyContent=\"space-between\"\r\n      >\r\n        {/* <Grid item container flex={1} justifyContent=\"space-between\"> */}\r\n        <Grid item sx={{ ml: \"auto\" }}>\r\n          <CustomButton\r\n            endIcon={<AddIcon />}\r\n            title=\"Add Doctor\"\r\n            type={buttonType}\r\n            onClick={() => setOpenAddHcp(true)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TableLayout\r\n        filters={\r\n          <DoctorFilters\r\n            setProfiles={setProfiles}\r\n            setPageInfo={setPageInfo}\r\n            queryParams={{\r\n              doctorsParams: { fetchDoctors, loading, refetch, variables },\r\n              doctorsByStatusParams: {\r\n                byStatusLoading,\r\n                byStatusVariables,\r\n                byStatusRefetch,\r\n                fetchDoctorsByStatus,\r\n              },\r\n            }}\r\n          />\r\n        }\r\n        search={\r\n          <CompoundSearch\r\n            queryParams={{ fetchData: fetchDoctors, variables, loading }}\r\n            setPageInfo={(data) =>\r\n              setPageInfo(data.doctorProfiles.pageInfo || {})\r\n            }\r\n            setProfiles={(data) =>\r\n              setProfiles(data.doctorProfiles.profile || [])\r\n            }\r\n            getSearchPlaceholder={(filterBy) => getSearchPlaceholder(filterBy)}\r\n            filterOptions={doctorsSearchOptions}\r\n          />\r\n        }\r\n      >\r\n        {loading ? (\r\n          <Loader />\r\n        ) : byStatusLoading ? (\r\n          <Loader />\r\n        ) : networkStatus === NetworkStatus.refetch ? (\r\n          <Loader />\r\n        ) : profiles.length > 0 ? (\r\n          <Grid item container height=\"100%\" direction=\"column\">\r\n            <EnhancedTable\r\n              headCells={hcpsHeadCells5}\r\n              rows={profiles}\r\n              paginationLabel=\"Doctors per page\"\r\n              hasCheckbox={true}\r\n              changeLimit={async (e) => {\r\n                const res = await changeHospitalTableLimit(fetchDoctors, {\r\n                  first: e,\r\n                  providerId: partnerProviderId,\r\n                });\r\n\r\n                await setTableData(res, \"Failed to change table limit\");\r\n              }}\r\n              dataPageInfo={pageInfo}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchDoctors,\r\n                  page,\r\n                  pageInfo,\r\n                  partnerProviderId\r\n                );\r\n\r\n                await setTableData(res, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const {\r\n                  _id,\r\n                  dociId,\r\n                  firstName,\r\n                  status,\r\n                  specialization,\r\n                  consultations,\r\n                  lastName,\r\n                } = row;\r\n\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    onClick={() => history.push(`hcps/${_id}`)}\r\n                    key={_id}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{\r\n                        color: theme.palette.common.grey,\r\n                        minWidth: \"10rem\",\r\n                      }}\r\n                    >\r\n                      {dociId?.split(\"-\")[1]}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <div\r\n                        style={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          alignItems: \"left\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: \"1.25rem\" }}>\r\n                          {firstName} {lastName}\r\n                        </span>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.grey }}\r\n                    >\r\n                      {specialization}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {consultations ? consultations : 0}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <Chip\r\n                        label={status ? status : \"No Status\"}\r\n                        className={classes.badge}\r\n                        style={{\r\n                          background:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.lightGreen\r\n                              : theme.palette.common.lightRed,\r\n                          color:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.green\r\n                              : theme.palette.common.red,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    {/* <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        component={Link}\r\n                        to=\r\n                        endIcon={<ArrowForwardIosIcon />}\r\n                      >\r\n                        View Doctor\r\n                      </Button>\r\n                    </TableCell> */}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={hcpsHeadCells5}\r\n            paginationLabel=\"Doctors  per page\"\r\n          />\r\n        )}\r\n      </TableLayout>\r\n      {/* Filter Modal */}\r\n      <Modals\r\n        isOpen={openHcpFilter}\r\n        title=\"Filter\"\r\n        rowSpacing={5}\r\n        handleClose={() => setOpenHcpFilter(false)}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues1}\r\n          onSubmit={onSubmit1}\r\n          validationSchema={validationSchema1}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({ isSubmitting, isValid, dirty }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"3rem\" }}>\r\n                <Grid item container direction=\"column\" gap={1}>\r\n                  <Grid item container rowSpacing={3}>\r\n                    <Grid item container>\r\n                      <FormikControl\r\n                        control=\"select\"\r\n                        options={specializations}\r\n                        name=\"specialization\"\r\n                        label=\"Specialization\"\r\n                        placeholder=\"Select Specialization\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item marginTop={3}>\r\n                  <CustomButton\r\n                    title=\"Apply Filter\"\r\n                    width=\"100%\"\r\n                    type={buttonType}\r\n                    isSubmitting={isSubmitting}\r\n                    disabled={!(dirty || isValid)}\r\n                  />\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n      {/* ADD Doctor MODAL */}\r\n      <Modals\r\n        isOpen={openAddHcp}\r\n        title=\"Add Doctor\"\r\n        rowSpacing={5}\r\n        height=\"auto\"\r\n        handleClose={() => setOpenAddHcp(false)}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({\r\n            isSubmitting,\r\n            dirty,\r\n            isValid,\r\n            setFieldValue,\r\n            errors,\r\n            setValues,\r\n          }) => {\r\n            console.log(errors);\r\n            return (\r\n              <Form style={{ marginTop: \"1rem\" }}>\r\n                <Grid container direction=\"column\" gap={2}>\r\n                  <Grid item container direction=\"column\" gap={1}>\r\n                    <Grid item container>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"First Name\"\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"Enter first name\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Last Name\"\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Enter last name\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" gap={2}>\r\n                      <Grid item container>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item md>\r\n                            <Grid container direction=\"column\">\r\n                              <FormikControl\r\n                                control=\"select\"\r\n                                options={specializations}\r\n                                name=\"specialization\"\r\n                                label=\"Specialization\"\r\n                                placeholder=\"Specialization\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"select\"\r\n                              label=\"Gender\"\r\n                              id=\"gender\"\r\n                              name=\"gender\"\r\n                              options={gender}\r\n                              placeholder=\"Gender\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container direction=\"column\" gap={2}>\r\n                    <Grid item container>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Phone Number\"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter last Phone number\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item md>\r\n                          <Grid container direction=\"column\">\r\n                            <FormikControl\r\n                              control=\"select\"\r\n                              options={cadre}\r\n                              name=\"cadre\"\r\n                              label=\"Cadre\"\r\n                              placeholder=\"Select Cadre\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" gap={2}>\r\n                      <Grid item container>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"date\"\r\n                              name=\"dob\"\r\n                              label=\"DOB\"\r\n                              type=\"hospital\"\r\n                              setFieldValue={setFieldValue}\r\n                              setValues={setValues}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"input\"\r\n                              label=\"HealaId\"\r\n                              id=\"heala\"\r\n                              name=\"healaId\"\r\n                              placeholder=\"Enter Heala ID\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container spacing={2} alignItems=\"center\">\r\n                    <Grid item container md>\r\n                      <FormikControl\r\n                        control=\"file\"\r\n                        name=\"image\"\r\n                        label=\"Profile Pics\"\r\n                        setFieldValue={setFieldValue}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md>\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        name=\"hospital\"\r\n                        label=\"Hospital\"\r\n                        placeholder=\"Enter Hospital\"\r\n                      />\r\n                    </Grid>\r\n                    {/* <Grid item md>\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        label=\"Heala-ID\"\r\n                        id=\"dociId\"\r\n                        name=\"dociId\"\r\n                        placeholder=\"Enter Heala ID\"\r\n                      />\r\n                    </Grid> */}\r\n                  </Grid>\r\n                  <Grid item container>\r\n                    <CustomButton\r\n                      title=\"Add Doctor\"\r\n                      width=\"100%\"\r\n                      type={buttonType}\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Hcps;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalDashboard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrderProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Settings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewCompleted.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ProcessingOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PeopleIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PlansIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\LabelIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PartnersIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\bMI.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HmoDashboardChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\tables\\HmoEnrolleesTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Management.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Administrator.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Error.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PageNotFound.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Login.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\debounce.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\Filters\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\UploadEnrolleeListForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\AddEditHMOEnrolleeModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ConfirmModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SubscriptionIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\RefferalsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SettingsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PatientsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DoctorsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\FinanceIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DashboardIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\HmoLineChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\Filters\\HmoEnrolleeFilters.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ConfirmDeleteOrDisable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\DragAndDrop.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\EnrolleeProfileModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\RoleModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\WalletIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\OpenEnvelopeIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\ConsultIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\CrownIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\rows\\HmoEnrolleesRow.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\AddEditHMOEnrolleeForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\MessageAddIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\VerifiedIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\Calender2.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\CallIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SmsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\LoginForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\styles\\enrolleesPageStyles.js",[],{"ruleId":"989","replacedBy":"990"},{"ruleId":"991","replacedBy":"992"},{"ruleId":"993","severity":1,"message":"994","line":5,"column":8,"nodeType":"995","messageId":"996","endLine":5,"endColumn":20},{"ruleId":"993","severity":1,"message":"997","line":8,"column":3,"nodeType":"995","messageId":"996","endLine":8,"endColumn":11},{"ruleId":"993","severity":1,"message":"998","line":27,"column":10,"nodeType":"995","messageId":"996","endLine":27,"endColumn":28},{"ruleId":"993","severity":1,"message":"999","line":221,"column":11,"nodeType":"995","messageId":"996","endLine":221,"endColumn":26},{"ruleId":"1000","severity":1,"message":"1001","line":89,"column":6,"nodeType":"1002","endLine":89,"endColumn":8,"suggestions":"1003"},{"ruleId":"993","severity":1,"message":"1004","line":18,"column":10,"nodeType":"995","messageId":"996","endLine":18,"endColumn":15},{"ruleId":"993","severity":1,"message":"1005","line":20,"column":10,"nodeType":"995","messageId":"996","endLine":20,"endColumn":19},{"ruleId":"993","severity":1,"message":"1006","line":23,"column":10,"nodeType":"995","messageId":"996","endLine":23,"endColumn":25},{"ruleId":"993","severity":1,"message":"1007","line":123,"column":9,"nodeType":"995","messageId":"996","endLine":123,"endColumn":27},{"ruleId":"993","severity":1,"message":"1005","line":22,"column":10,"nodeType":"995","messageId":"996","endLine":22,"endColumn":19},{"ruleId":"993","severity":1,"message":"1008","line":2,"column":8,"nodeType":"995","messageId":"996","endLine":2,"endColumn":12},{"ruleId":"993","severity":1,"message":"1009","line":9,"column":3,"nodeType":"995","messageId":"996","endLine":9,"endColumn":13},{"ruleId":"993","severity":1,"message":"1010","line":113,"column":9,"nodeType":"995","messageId":"996","endLine":113,"endColumn":21},{"ruleId":"993","severity":1,"message":"997","line":6,"column":8,"nodeType":"995","messageId":"996","endLine":6,"endColumn":16},{"ruleId":"993","severity":1,"message":"998","line":14,"column":10,"nodeType":"995","messageId":"996","endLine":14,"endColumn":28},{"ruleId":"993","severity":1,"message":"999","line":38,"column":11,"nodeType":"995","messageId":"996","endLine":38,"endColumn":26},{"ruleId":"993","severity":1,"message":"1011","line":84,"column":25,"nodeType":"995","messageId":"996","endLine":84,"endColumn":32},{"ruleId":"993","severity":1,"message":"997","line":4,"column":49,"nodeType":"995","messageId":"996","endLine":4,"endColumn":57},{"ruleId":"993","severity":1,"message":"998","line":13,"column":10,"nodeType":"995","messageId":"996","endLine":13,"endColumn":28},{"ruleId":"993","severity":1,"message":"999","line":81,"column":11,"nodeType":"995","messageId":"996","endLine":81,"endColumn":26},{"ruleId":"993","severity":1,"message":"1011","line":154,"column":21,"nodeType":"995","messageId":"996","endLine":154,"endColumn":28},{"ruleId":"993","severity":1,"message":"1012","line":196,"column":36,"nodeType":"995","messageId":"996","endLine":196,"endColumn":41},{"ruleId":"993","severity":1,"message":"1013","line":197,"column":46,"nodeType":"995","messageId":"996","endLine":197,"endColumn":53},{"ruleId":"993","severity":1,"message":"1014","line":9,"column":3,"nodeType":"995","messageId":"996","endLine":9,"endColumn":9},{"ruleId":"993","severity":1,"message":"1015","line":17,"column":8,"nodeType":"995","messageId":"996","endLine":17,"endColumn":27},{"ruleId":"993","severity":1,"message":"1016","line":24,"column":10,"nodeType":"995","messageId":"996","endLine":24,"endColumn":14},{"ruleId":"993","severity":1,"message":"1017","line":14,"column":28,"nodeType":"995","messageId":"996","endLine":14,"endColumn":40},{"ruleId":"993","severity":1,"message":"1015","line":21,"column":8,"nodeType":"995","messageId":"996","endLine":21,"endColumn":27},{"ruleId":"993","severity":1,"message":"1016","line":22,"column":10,"nodeType":"995","messageId":"996","endLine":22,"endColumn":14},{"ruleId":"993","severity":1,"message":"998","line":25,"column":10,"nodeType":"995","messageId":"996","endLine":25,"endColumn":28},{"ruleId":"993","severity":1,"message":"1014","line":31,"column":3,"nodeType":"995","messageId":"996","endLine":31,"endColumn":9},{"ruleId":"993","severity":1,"message":"997","line":32,"column":3,"nodeType":"995","messageId":"996","endLine":32,"endColumn":11},{"ruleId":"993","severity":1,"message":"999","line":309,"column":11,"nodeType":"995","messageId":"996","endLine":309,"endColumn":26},"no-native-reassign",["1018"],"no-negated-in-lhs",["1019"],"no-unused-vars","'displayPhoto' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'handleSelectedRows' is defined but never used.","'setSelectedRows' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array. If 'setPreview' needs the current value of 'value', you can also switch to useReducer instead of useState and read 'value' in the reducer.","ArrayExpression",["1020"],"'plans' is assigned a value but never used.","'providers' is assigned a value but never used.","'filterPlanValue' is assigned a value but never used.","'onFilterPlanChange' is assigned a value but never used.","'Copy' is defined but never used.","'Typography' is defined but never used.","'returnString' is assigned a value but never used.","'labelId' is assigned a value but never used.","'image' is assigned a value but never used.","'picture' is assigned a value but never used.","'Button' is defined but never used.","'ArrowForwardIosIcon' is defined but never used.","'Link' is defined but never used.","'CalendarIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1021","fix":"1022"},"Update the dependencies array to be: [value]",{"range":"1023","text":"1024"},[2224,2226],"[value]"]