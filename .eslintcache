<<<<<<< HEAD
[{"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\index.js":"1","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\reportWebVitals.js":"2","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\accessToken.js":"3","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\App.js":"4","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\serviceWorkerRegistration.js":"5","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\index.js":"6","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\index.js":"7","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\muiTheme.js":"8","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\SideNav.js":"9","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Routes.js":"10","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Private.js":"11","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\Mutation.js":"12","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useActions.js":"13","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Hospital.js":"14","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\useQuery.js":"15","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\AppTypeContext.js":"16","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\index.js":"17","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\index.js":"18","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\appTypeReducer.js":"19","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\fragment.js":"20","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\store.js":"21","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Notifications.js":"22","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EmptyTable.js":"23","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfileHospital.js":"24","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpConsultations.js":"25","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientAppointment.js":"26","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalSettings.js":"27","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ReferralTab.js":"28","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\asideMenus.js":"29","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalProfile.js":"30","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\func.js":"31","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\DeleteOrDisable.js":"32","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableToolbar.js":"33","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableHeader.js":"34","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\index.js":"35","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\filterHelperFunctions.js":"36","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Time.js":"37","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormikControl.js":"38","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\isSelected.js":"39","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\selectedRows.js":"40","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableHeaders.js":"41","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\authReducer.js":"42","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\tablesReducer.js":"43","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\index.js":"44","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\mocks\\patterns.js":"45","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Date.js":"46","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-types\\index.js":"47","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\LoginInput.js":"48","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Textarea.js":"49","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Input.js":"50","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\File.js":"51","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\DateTimePicker.js":"52","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormRadio.js":"53","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Select.js":"54","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Checkbox.js":"55","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Typography.js":"56","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularChart.js":"57","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\TextError.js":"58","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\SearchInput.js":"59","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Search.js":"60","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PreviousButton.js":"61","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Modal.js":"62","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Loader.js":"63","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\NotistackAlert.js":"64","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart2.js":"65","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart.js":"66","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LinearProgress.js":"67","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormInput.js":"68","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormSelect.js":"69","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FilterList.js":"70","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile1.js":"71","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile2.js":"72","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfiles.js":"73","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\ProfileCard.js":"74","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile.js":"75","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularProgress.js":"76","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CustomButton.js":"77","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Button.js":"78","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Card.js":"79","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\AvailabilityCard.js":"80","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\NoData.js":"81","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderProfile.js":"82","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Header.js":"83","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderProfile.js":"84","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersProfile.js":"85","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Headers.js":"86","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalDashboardChart.js":"87","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersContents.js":"88","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderContents.js":"89","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderContent.js":"90","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTable.js":"91","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashCharts.js":"92","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashboardChart.js":"93","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\AvailabilityTable.js":"94","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\mockData.js":"95","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helperFunctions\\breadcrumb.js":"96","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Subscription.js":"97","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewReferral.js":"98","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Payout.js":"99","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Financetable.js":"100","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Finance.js":"101","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Email.js":"102","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewMessage.js":"103","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Messages.js":"104","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CreateMessage.js":"105","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Appointments.js":"106","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpCaseNote.js":"107","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpPatients.js":"108","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SinglePatient.js":"109","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SingleHCP.js":"110","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Settings.js":"111","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Prescriptions.js":"112","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Patients.js":"113","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpEarnings.js":"114","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAvailability.js":"115","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HCPChat.js":"116","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAppointments.js":"117","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpProfile.js":"118","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Hcps.js":"119","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Medications.js":"120","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CaseNotes.js":"121","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\MedicalRecords.js":"122","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Consultations.js":"123","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientProfile.js":"124","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Chat.js":"125","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalDashboard.js":"126","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\PrivateRoute.js":"127","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequest.js":"128","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequestProfile.js":"129","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profiles.js":"130","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewResult.js":"131","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Setting.js":"132","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrder.js":"133","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Pending.js":"134","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingProfile.js":"135","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrder.js":"136","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboards.js":"137","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrderProfile.js":"138","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profile.js":"139","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrders.js":"140","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewCompleted.js":"141","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrders.js":"142","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ProcessingOrders.js":"143","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrder.js":"144","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboard.js":"145","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\index.js":"146","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\SubscriptionModal.js":"147","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\WaitingListTable.js":"148","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Copy.js":"149","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\bMI.js":"150","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useFormInput.js":"151","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\Success.js":"152","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\index.js":"153","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\auth.js":"154","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\tablesActions.js":"155","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useCopy.js":"156","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableData.js":"157","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ReferPatient.js":"158","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Management.js":"159","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Administrator.js":"160","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Error.js":"161","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PageNotFound.js":"162","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Login.js":"163","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\RoleModal.js":"164","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\debounce.js":"165","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CompoundSearch.js":"166","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Filter.js":"167","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PatientFilters.js":"168","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DoctorFilters.js":"169","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Buttons\\CloseBtn.js":"170","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\index.js":"171","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAppType.js":"172","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAlert.js":"173","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SubscriptionIncome.js":"174","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\index.js":"175","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\LoginForm.js":"176","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\Filters\\index.js":"177","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorPayout.js":"178","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorEarning.js":"179","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\CardItem.js":"180","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\ChervonDownIcon.js":"181","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\BellIcon.js":"182","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DoctorsIcon.js":"183","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DashboardIcon.js":"184","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PatientsIcon.js":"185","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\FinanceIcon.js":"186","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SettingsIcon.js":"187","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\RefferalsIcon.js":"188","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SubscriptionIcon.js":"189","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\LogoutIcon.js":"190","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\TableLayout.js":"191","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SearchIcon.js":"192","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Searchs.js":"193"},{"size":2433,"mtime":1659095183273,"results":"194","hashOfConfig":"195"},{"size":377,"mtime":1656592111518,"results":"196","hashOfConfig":"195"},{"size":165,"mtime":1656592111151,"results":"197","hashOfConfig":"195"},{"size":12061,"mtime":1663057448144,"results":"198","hashOfConfig":"195"},{"size":5201,"mtime":1656592111520,"results":"199","hashOfConfig":"195"},{"size":38,"mtime":1656592111527,"results":"200","hashOfConfig":"195"},{"size":3553,"mtime":1661339027074,"results":"201","hashOfConfig":"195"},{"size":3799,"mtime":1663136448239,"results":"202","hashOfConfig":"195"},{"size":6411,"mtime":1663136320381,"results":"203","hashOfConfig":"195"},{"size":2320,"mtime":1656592111490,"results":"204","hashOfConfig":"195"},{"size":2191,"mtime":1656592111489,"results":"205","hashOfConfig":"195"},{"size":11368,"mtime":1656592111365,"results":"206","hashOfConfig":"195"},{"size":479,"mtime":1656592111369,"results":"207","hashOfConfig":"195"},{"size":7386,"mtime":1663088071664,"results":"208","hashOfConfig":"195"},{"size":28949,"mtime":1660904365510,"results":"209","hashOfConfig":"195"},{"size":596,"mtime":1656592111525,"results":"210","hashOfConfig":"195"},{"size":1241,"mtime":1662876975116,"results":"211","hashOfConfig":"195"},{"size":1799,"mtime":1663088544202,"results":"212","hashOfConfig":"195"},{"size":278,"mtime":1656592111526,"results":"213","hashOfConfig":"195"},{"size":263,"mtime":1656592111367,"results":"214","hashOfConfig":"195"},{"size":296,"mtime":1656592111532,"results":"215","hashOfConfig":"195"},{"size":3030,"mtime":1656592111395,"results":"216","hashOfConfig":"195"},{"size":1470,"mtime":1656592111380,"results":"217","hashOfConfig":"195"},{"size":3275,"mtime":1661339347622,"results":"218","hashOfConfig":"195"},{"size":8384,"mtime":1661338848403,"results":"219","hashOfConfig":"195"},{"size":18337,"mtime":1661338823675,"results":"220","hashOfConfig":"195"},{"size":1123,"mtime":1663088140521,"results":"221","hashOfConfig":"195"},{"size":9947,"mtime":1663088994972,"results":"222","hashOfConfig":"195"},{"size":3529,"mtime":1663055504155,"results":"223","hashOfConfig":"195"},{"size":4512,"mtime":1659095183188,"results":"224","hashOfConfig":"195"},{"size":1505,"mtime":1659095183273,"results":"225","hashOfConfig":"195"},{"size":4570,"mtime":1656592111403,"results":"226","hashOfConfig":"195"},{"size":1942,"mtime":1656592111384,"results":"227","hashOfConfig":"195"},{"size":2013,"mtime":1662885864260,"results":"228","hashOfConfig":"195"},{"size":275,"mtime":1656592111530,"results":"229","hashOfConfig":"195"},{"size":7668,"mtime":1660281236033,"results":"230","hashOfConfig":"195"},{"size":4167,"mtime":1662881370118,"results":"231","hashOfConfig":"195"},{"size":806,"mtime":1656592111497,"results":"232","hashOfConfig":"195"},{"size":82,"mtime":1656592111509,"results":"233","hashOfConfig":"195"},{"size":683,"mtime":1656592111511,"results":"234","hashOfConfig":"195"},{"size":8917,"mtime":1663087093268,"results":"235","hashOfConfig":"195"},{"size":1663,"mtime":1656592111528,"results":"236","hashOfConfig":"195"},{"size":807,"mtime":1656592111531,"results":"237","hashOfConfig":"195"},{"size":513,"mtime":1656592111502,"results":"238","hashOfConfig":"195"},{"size":2130,"mtime":1660281236036,"results":"239","hashOfConfig":"195"},{"size":2040,"mtime":1656592111493,"results":"240","hashOfConfig":"195"},{"size":706,"mtime":1656592111524,"results":"241","hashOfConfig":"195"},{"size":1233,"mtime":1656592111499,"results":"242","hashOfConfig":"195"},{"size":2045,"mtime":1656592111501,"results":"243","hashOfConfig":"195"},{"size":951,"mtime":1656592111498,"results":"244","hashOfConfig":"195"},{"size":4077,"mtime":1659095183271,"results":"245","hashOfConfig":"195"},{"size":1914,"mtime":1656592111494,"results":"246","hashOfConfig":"195"},{"size":1476,"mtime":1656592111496,"results":"247","hashOfConfig":"195"},{"size":6451,"mtime":1662880744353,"results":"248","hashOfConfig":"195"},{"size":2262,"mtime":1656592111492,"results":"249","hashOfConfig":"195"},{"size":240,"mtime":1656592111310,"results":"250","hashOfConfig":"195"},{"size":3423,"mtime":1656592111317,"results":"251","hashOfConfig":"195"},{"size":460,"mtime":1656592111349,"results":"252","hashOfConfig":"195"},{"size":1979,"mtime":1656592111347,"results":"253","hashOfConfig":"195"},{"size":1528,"mtime":1663082736951,"results":"254","hashOfConfig":"195"},{"size":762,"mtime":1656592111344,"results":"255","hashOfConfig":"195"},{"size":2431,"mtime":1660158341758,"results":"256","hashOfConfig":"195"},{"size":536,"mtime":1660281235958,"results":"257","hashOfConfig":"195"},{"size":663,"mtime":1656592111343,"results":"258","hashOfConfig":"195"},{"size":7044,"mtime":1662893384388,"results":"259","hashOfConfig":"195"},{"size":2786,"mtime":1656592111334,"results":"260","hashOfConfig":"195"},{"size":1099,"mtime":1656592111337,"results":"261","hashOfConfig":"195"},{"size":1502,"mtime":1656592111331,"results":"262","hashOfConfig":"195"},{"size":1442,"mtime":1660281235953,"results":"263","hashOfConfig":"195"},{"size":1470,"mtime":1656592111330,"results":"264","hashOfConfig":"195"},{"size":7094,"mtime":1659095183094,"results":"265","hashOfConfig":"195"},{"size":6574,"mtime":1656926098107,"results":"266","hashOfConfig":"195"},{"size":7498,"mtime":1661337656902,"results":"267","hashOfConfig":"195"},{"size":2138,"mtime":1656592111345,"results":"268","hashOfConfig":"195"},{"size":4521,"mtime":1660281235951,"results":"269","hashOfConfig":"195"},{"size":1633,"mtime":1656592111319,"results":"270","hashOfConfig":"195"},{"size":2525,"mtime":1656592111320,"results":"271","hashOfConfig":"195"},{"size":1305,"mtime":1656592111314,"results":"272","hashOfConfig":"195"},{"size":1148,"mtime":1656592111315,"results":"273","hashOfConfig":"195"},{"size":2533,"mtime":1656592111312,"results":"274","hashOfConfig":"195"},{"size":978,"mtime":1663141023669,"results":"275","hashOfConfig":"195"},{"size":3876,"mtime":1656592111393,"results":"276","hashOfConfig":"195"},{"size":2292,"mtime":1663135335322,"results":"277","hashOfConfig":"195"},{"size":10253,"mtime":1663140745993,"results":"278","hashOfConfig":"195"},{"size":3720,"mtime":1656592111390,"results":"279","hashOfConfig":"195"},{"size":1971,"mtime":1656592111388,"results":"280","hashOfConfig":"195"},{"size":17240,"mtime":1663134554138,"results":"281","hashOfConfig":"195"},{"size":10265,"mtime":1656592111389,"results":"282","hashOfConfig":"195"},{"size":8504,"mtime":1663140906791,"results":"283","hashOfConfig":"195"},{"size":12942,"mtime":1656592111392,"results":"284","hashOfConfig":"195"},{"size":5051,"mtime":1660281235979,"results":"285","hashOfConfig":"195"},{"size":11988,"mtime":1656592111378,"results":"286","hashOfConfig":"195"},{"size":12741,"mtime":1656592111379,"results":"287","hashOfConfig":"195"},{"size":12969,"mtime":1663142457760,"results":"288","hashOfConfig":"195"},{"size":6242,"mtime":1663059767566,"results":"289","hashOfConfig":"195"},{"size":772,"mtime":1656592111503,"results":"290","hashOfConfig":"195"},{"size":13773,"mtime":1663088923671,"results":"291","hashOfConfig":"195"},{"size":7601,"mtime":1661338881794,"results":"292","hashOfConfig":"195"},{"size":10005,"mtime":1661338896949,"results":"293","hashOfConfig":"195"},{"size":9982,"mtime":1663083386707,"results":"294","hashOfConfig":"195"},{"size":10379,"mtime":1660905070030,"results":"295","hashOfConfig":"195"},{"size":12498,"mtime":1656592111428,"results":"296","hashOfConfig":"195"},{"size":2594,"mtime":1656592111481,"results":"297","hashOfConfig":"195"},{"size":9477,"mtime":1661338820444,"results":"298","hashOfConfig":"195"},{"size":8740,"mtime":1661339774128,"results":"299","hashOfConfig":"195"},{"size":1963,"mtime":1656592111413,"results":"300","hashOfConfig":"195"},{"size":19365,"mtime":1661339789613,"results":"301","hashOfConfig":"195"},{"size":6621,"mtime":1663087409410,"results":"302","hashOfConfig":"195"},{"size":5488,"mtime":1661337808579,"results":"303","hashOfConfig":"195"},{"size":7023,"mtime":1663142562863,"results":"304","hashOfConfig":"195"},{"size":1107,"mtime":1656592111474,"results":"305","hashOfConfig":"195"},{"size":8078,"mtime":1661338836567,"results":"306","hashOfConfig":"195"},{"size":13813,"mtime":1663088581463,"results":"307","hashOfConfig":"195"},{"size":9954,"mtime":1660281235996,"results":"308","hashOfConfig":"195"},{"size":15650,"mtime":1663142900657,"results":"309","hashOfConfig":"195"},{"size":7862,"mtime":1656592111433,"results":"310","hashOfConfig":"195"},{"size":12662,"mtime":1661338863743,"results":"311","hashOfConfig":"195"},{"size":7641,"mtime":1656592111440,"results":"312","hashOfConfig":"195"},{"size":24067,"mtime":1663083121436,"results":"313","hashOfConfig":"195"},{"size":6512,"mtime":1661338812656,"results":"314","hashOfConfig":"195"},{"size":22171,"mtime":1661337203667,"results":"315","hashOfConfig":"195"},{"size":4294,"mtime":1656592111449,"results":"316","hashOfConfig":"195"},{"size":8731,"mtime":1661338872257,"results":"317","hashOfConfig":"195"},{"size":4553,"mtime":1661339361189,"results":"318","hashOfConfig":"195"},{"size":7906,"mtime":1659095183173,"results":"319","hashOfConfig":"195"},{"size":804,"mtime":1662887393343,"results":"320","hashOfConfig":"195"},{"size":626,"mtime":1656592111490,"results":"321","hashOfConfig":"195"},{"size":14971,"mtime":1661338860481,"results":"322","hashOfConfig":"195"},{"size":21299,"mtime":1659095183235,"results":"323","hashOfConfig":"195"},{"size":4363,"mtime":1659095183220,"results":"324","hashOfConfig":"195"},{"size":13050,"mtime":1659095183253,"results":"325","hashOfConfig":"195"},{"size":1105,"mtime":1656592111473,"results":"326","hashOfConfig":"195"},{"size":15131,"mtime":1659095183173,"results":"327","hashOfConfig":"195"},{"size":14244,"mtime":1661338826017,"results":"328","hashOfConfig":"195"},{"size":18697,"mtime":1659095183220,"results":"329","hashOfConfig":"195"},{"size":12887,"mtime":1661337156943,"results":"330","hashOfConfig":"195"},{"size":275,"mtime":1656592111425,"results":"331","hashOfConfig":"195"},{"size":14353,"mtime":1659095183204,"results":"332","hashOfConfig":"195"},{"size":4618,"mtime":1659095183220,"results":"333","hashOfConfig":"195"},{"size":13281,"mtime":1659095183157,"results":"334","hashOfConfig":"195"},{"size":7747,"mtime":1659095183239,"results":"335","hashOfConfig":"195"},{"size":14984,"mtime":1659095183173,"results":"336","hashOfConfig":"195"},{"size":19124,"mtime":1661338838610,"results":"337","hashOfConfig":"195"},{"size":15781,"mtime":1661338828930,"results":"338","hashOfConfig":"195"},{"size":275,"mtime":1656592111425,"results":"339","hashOfConfig":"195"},{"size":131,"mtime":1656592111522,"results":"340","hashOfConfig":"195"},{"size":6155,"mtime":1659095183157,"results":"341","hashOfConfig":"195"},{"size":5232,"mtime":1656592111399,"results":"342","hashOfConfig":"195"},{"size":616,"mtime":1659095183079,"results":"343","hashOfConfig":"195"},{"size":163,"mtime":1656592111353,"results":"344","hashOfConfig":"195"},{"size":306,"mtime":1656592111372,"results":"345","hashOfConfig":"195"},{"size":1894,"mtime":1656592111408,"results":"346","hashOfConfig":"195"},{"size":173,"mtime":1656592111409,"results":"347","hashOfConfig":"195"},{"size":895,"mtime":1656592111521,"results":"348","hashOfConfig":"195"},{"size":536,"mtime":1656592111523,"results":"349","hashOfConfig":"195"},{"size":732,"mtime":1659095183142,"results":"350","hashOfConfig":"195"},{"size":7937,"mtime":1656592111357,"results":"351","hashOfConfig":"195"},{"size":4335,"mtime":1656592111406,"results":"352","hashOfConfig":"195"},{"size":13667,"mtime":1661339828885,"results":"353","hashOfConfig":"195"},{"size":15342,"mtime":1657697851744,"results":"354","hashOfConfig":"195"},{"size":1024,"mtime":1659095183173,"results":"355","hashOfConfig":"195"},{"size":1640,"mtime":1656592111454,"results":"356","hashOfConfig":"195"},{"size":3996,"mtime":1659095183188,"results":"357","hashOfConfig":"195"},{"size":3435,"mtime":1656592111407,"results":"358","hashOfConfig":"195"},{"size":314,"mtime":1659095183273,"results":"359","hashOfConfig":"195"},{"size":3093,"mtime":1663088565384,"results":"360","hashOfConfig":"195"},{"size":1122,"mtime":1659095183094,"results":"361","hashOfConfig":"195"},{"size":8542,"mtime":1663064379439,"results":"362","hashOfConfig":"195"},{"size":7811,"mtime":1663065409832,"results":"363","hashOfConfig":"195"},{"size":1287,"mtime":1659095183079,"results":"364","hashOfConfig":"195"},{"size":157,"mtime":1659095183126,"results":"365","hashOfConfig":"195"},{"size":434,"mtime":1659095183139,"results":"366","hashOfConfig":"195"},{"size":1010,"mtime":1660281235974,"results":"367","hashOfConfig":"195"},{"size":9458,"mtime":1663087938109,"results":"368","hashOfConfig":"195"},{"size":53,"mtime":1659095183263,"results":"369","hashOfConfig":"195"},{"size":6887,"mtime":1659330167913,"results":"370","hashOfConfig":"195"},{"size":644,"mtime":1656592111306,"results":"371","hashOfConfig":"195"},{"size":11285,"mtime":1661337365810,"results":"372","hashOfConfig":"195"},{"size":10888,"mtime":1661338936756,"results":"373","hashOfConfig":"195"},{"size":4091,"mtime":1661969190836,"results":"374","hashOfConfig":"195"},{"size":505,"mtime":1662880890555,"results":"375","hashOfConfig":"195"},{"size":906,"mtime":1661939670949,"results":"376","hashOfConfig":"195"},{"size":1177,"mtime":1662198259872,"results":"377","hashOfConfig":"195"},{"size":1392,"mtime":1662198259857,"results":"378","hashOfConfig":"195"},{"size":1496,"mtime":1662198259914,"results":"379","hashOfConfig":"195"},{"size":2025,"mtime":1662198259875,"results":"380","hashOfConfig":"195"},{"size":1705,"mtime":1662198259920,"results":"381","hashOfConfig":"195"},{"size":1439,"mtime":1662198259916,"results":"382","hashOfConfig":"195"},{"size":1169,"mtime":1662198259927,"results":"383","hashOfConfig":"195"},{"size":931,"mtime":1662198259902,"results":"384","hashOfConfig":"195"},{"size":972,"mtime":1663058588839,"results":"385","hashOfConfig":"195"},{"size":2072,"mtime":1661939670960,"results":"386","hashOfConfig":"195"},{"size":2971,"mtime":1663088467558,"results":"387","hashOfConfig":"195"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},"1gz4jv2",{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"390"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"390"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"390"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"390"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"689"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"689"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"390"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"390"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"390"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"755","messages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\index.js",[],["783","784"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\reportWebVitals.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\accessToken.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\App.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\muiTheme.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\SideNav.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Routes.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Private.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\Mutation.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useActions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Hospital.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\useQuery.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\AppTypeContext.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\appTypeReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\fragment.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\store.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Notifications.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EmptyTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfileHospital.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpConsultations.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientAppointment.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalSettings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ReferralTab.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\asideMenus.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\func.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\DeleteOrDisable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableToolbar.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableHeader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\filterHelperFunctions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Time.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormikControl.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\isSelected.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\selectedRows.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableHeaders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\tablesReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\mocks\\patterns.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Date.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-types\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\LoginInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Textarea.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Input.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\File.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\DateTimePicker.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormRadio.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Select.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Checkbox.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Typography.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\TextError.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\SearchInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Search.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PreviousButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Modal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Loader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\NotistackAlert.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart2.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LinearProgress.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormSelect.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FilterList.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile1.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile2.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfiles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\ProfileCard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularProgress.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CustomButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Button.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Card.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\AvailabilityCard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\NoData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Header.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderProfile.js",["785","786","787"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Headers.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalDashboardChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersContents.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderContents.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderContent.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashCharts.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashboardChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\AvailabilityTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\mockData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helperFunctions\\breadcrumb.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Subscription.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewReferral.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Payout.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Financetable.js",["788","789","790"],"import React, { useState, useEffect } from \"react\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TableCell,\r\n  Button,\r\n  TableRow,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport TrendingDownIcon from \"@mui/icons-material/TrendingDown\";\r\nimport {\r\n  timeMoment,\r\n  dateMoment,\r\n  formatNumber,\r\n} from \"components/Utilities/Time\";\r\nimport { EnhancedTable, NoData, EmptyTable } from \"components/layouts\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { payoutHeaderss1 } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { Loader } from \"components/Utilities\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEarningStats } from \"components/graphQL/useQuery\";\r\nimport { defaultPageInfo } from \"helpers/mockData\";\r\nimport { useAlert } from \"components/hooks\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  buttons: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  iconWrapper: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: \"50%\",\r\n    display: \"grid\",\r\n    placeContent: \"center\",\r\n    background: theme.palette.common.lightGreen,\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Financetable = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { displayMessage } = useAlert();\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n  const [profiles, setProfiles] = useState(\"\");\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n  const [fetchDoctors, { error, loading }] = useLazyQuery(getEarningStats);\r\n\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const { data } = await fetchDoctors({\r\n          variables: {\r\n            first: pageInfo.limit,\r\n            providerId: partnerProviderId,\r\n          },\r\n        });\r\n        if (data) {\r\n          setPageInfo(data.getEarningStats.earningData.PageInfo || []);\r\n          setProfiles(data.getEarningStats.earningData.data || defaultPageInfo);\r\n        }\r\n        // ...\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    try {\r\n      setPageInfo(response.getEarningStats.earningData.PageInfo || []);\r\n      setProfiles(response.getEarningStats.earningData.data || defaultPageInfo);\r\n    } catch (error) {\r\n      console.error(error);\r\n      displayMessage(\"error\", error);\r\n    }\r\n  };\r\n  const history = useHistory();\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} height=\"100%\">\r\n      <>\r\n        <Grid item container gap={1} alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography noWrap variant=\"h1\" component=\"div\" color=\"#2D2F39\">\r\n              Earnings table\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item className={classes.iconWrapper}>\r\n            <TrendingDownIcon color=\"success\" className={classes.cardIcon} />\r\n          </Grid>\r\n        </Grid>\r\n        {profiles.length > 0 ? (\r\n          <Grid item container>\r\n            <EnhancedTable\r\n              headCells={payoutHeaderss1}\r\n              rows={profiles}\r\n              paginationLabel=\"finance per page\"\r\n              hasCheckbox={true}\r\n              dataPageInfo={pageInfo}\r\n              changeLimit={async (e) => {\r\n                const res = await changeHospitalTableLimit(fetchDoctors, {\r\n                  first: e,\r\n                  providerId: partnerProviderId,\r\n                });\r\n\r\n                await setTableData(res.data, \"Failed to change table limit\");\r\n              }}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchDoctors,\r\n                  page,\r\n                  pageInfo,\r\n                  partnerProviderId\r\n                );\r\n                await setTableData(res.data, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const { createdAt, providerId, balance, doctorData } = row;\r\n                const { firstName, lastName } = doctorData[0] || {};\r\n                const isItemSelected = isSelected(row._id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row._id}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    selected={isItemSelected}\r\n                    onClick={() =>\r\n                      history.push(`hcps/${doctorData[0]._id}/consultations`)\r\n                    }\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(\r\n                            row.id,\r\n                            selectedRows,\r\n                            setSelectedRows\r\n                          )\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {formatNumber(balance.toFixed(2))}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {doctorData && doctorData[0] !== {} ? (\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <span style={{ fontSize: \"1.25rem\" }}>\r\n                            {doctorData &&\r\n                              `${firstName && firstName} ${\r\n                                lastName && lastName\r\n                              }`}\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        \"No name\"\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.black }}\r\n                    >\r\n                      {providerId}\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.black }}\r\n                    >\r\n                      {`${dateMoment(createdAt)} - ${timeMoment(createdAt)}`}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={payoutHeaderss1}\r\n            paginationLabel=\"Finance  per page\"\r\n          />\r\n        )}\r\n      </>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Financetable;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Finance.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Email.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewMessage.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Messages.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CreateMessage.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Appointments.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpCaseNote.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpPatients.js",["791","792","793"],"import React, { useState, useEffect } from \"react\";\r\nimport { Loader } from \"components/Utilities\";\r\nimport {\r\n  Grid,\r\n  TableRow,\r\n  Typography,\r\n  TableCell,\r\n  Card,\r\n  Button,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { NoData, EnhancedTable, EmptyTable } from \"components/layouts\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { hcpPatientsHeadCells } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { getDoctorPatients } from \"components/graphQL/useQuery\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"12rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst HcpPatients = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n\r\n  const { hcpId } = useParams();\r\n\r\n  const { setSelectedRows } = useActions();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n\r\n  const [fetchDoctorsPatients, { loading, error, data }] = useLazyQuery(\r\n    getDoctorPatients,\r\n    { notifyOnNetworkStatusChange: true }\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchDoctorsPatients({\r\n      variables: { id: hcpId },\r\n    });\r\n  }, [fetchDoctorsPatients, hcpId]);\r\n  const [profiles, setProfiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setProfiles(data.getDoctorPatients.data);\r\n      setPageInfo(data.getDoctorPatients.pageInfo);\r\n    }\r\n  }, [data]);\r\n  const history = useHistory();\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n      <Card\r\n        variant=\"outlined\"\r\n        sx={{\r\n          width: \"100%\",\r\n          borderRadius: \"1.5rem\",\r\n          borderColor: \"transparent\",\r\n          p: 2,\r\n          mt: 2,\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <Grid item sx={{ mb: 2 }}>\r\n          <Typography variant=\"h2\">Doctor Patients</Typography>\r\n        </Grid>\r\n        {profiles.length > 0 ? (\r\n          <Grid item container direction=\"column\" height=\"100%\">\r\n            <EnhancedTable\r\n              headCells={hcpPatientsHeadCells}\r\n              rows={profiles}\r\n              paginationLabel=\"List Per Page\"\r\n              hasCheckbox={true}\r\n              changeLimit={(e) =>\r\n                changeHospitalTableLimit(fetchDoctorsPatients, {\r\n                  first: e,\r\n                  id: hcpId,\r\n                })\r\n              }\r\n              dataPageInfo={pageInfo}\r\n              handlePagination={(page) =>\r\n                handleHospitalPageChange(fetchDoctorsPatients, page, pageInfo, {\r\n                  id: hcpId,\r\n                })\r\n              }\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const { _id, doctorData, patientData } = row;\r\n                const isItemSelected = isSelected(_id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => history.push(`/hcps/${hcpId}/profile`)}\r\n                    key={_id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(_id, selectedRows, setSelectedRows)\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.grey }}\r\n                    >\r\n                      {doctorData\r\n                        ? doctorData?.dociId?.split(\"-\")[1]\r\n                        : \"No Doctor ID\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <div\r\n                        style={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          textAlign: \"left\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: \"1.25rem\" }}>\r\n                          {patientData?.firstName\r\n                            ? `${patientData?.firstName} ${patientData?.lastName}`\r\n                            : \"No Patient Name\"}\r\n                          {row.lastName}\r\n                        </span>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={hcpPatientsHeadCells}\r\n            paginationLabel=\"List  per page\"\r\n          />\r\n        )}\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HcpPatients;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SinglePatient.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SingleHCP.js",["794"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Settings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Prescriptions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Patients.js",["795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811"],"import React, { useState, useEffect } from \"react\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport TableLayout from \"components/layouts/TableLayout\";\r\nimport * as Yup from \"yup\";\r\nimport { NoData, EmptyTable } from \"components/layouts\";\r\nimport {\r\n  defaultPageInfo,\r\n  searchOptions,\r\n  patientSearchOptions,\r\n} from \"helpers/mockData\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Checkbox,\r\n  TableCell,\r\n  TableRow,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport {\r\n  Modals,\r\n  Loader,\r\n  CustomButton,\r\n  PatientFilters,\r\n  CompoundSearch,\r\n} from \"components/Utilities\";\r\nimport { EnhancedTable } from \"components/layouts\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { patientsHeadCells1 } from \"components/Utilities/tableHeaders\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n// import { getPatients } from \"components/graphaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjkkkkvkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo6666666666666666666666666666666666666666666666666666666666666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuukkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkQL/useQuery\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n  getSearchPlaceholder,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport {\r\n  getPatients,\r\n  getPatientsByPlan,\r\n  getPatientsByStatus,\r\n} from \"components/graphQL/useQuery\";\r\n\r\nconst genderType = [\r\n  { key: \"Male\", value: \"0\" },\r\n  { key: \"Female\", value: \"1\" },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchFilterContainer: {\r\n    \"&.MuiGrid-root\": {\r\n      justifyContent: \"space-between\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: \"#757886\",\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n      whiteSpace: \"nowrap\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n      textAlign: \"left\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem !important\",\r\n      height: \"2.7rem\",\r\n\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n  searchFilterBtn: {\r\n    \"&.MuiButton-root\": {\r\n      fontSize: \"1.5rem\",\r\n      textTransform: \"none\",\r\n      height: \"5rem\",\r\n      borderRadius: 10,\r\n      boxShadow: \"0px 0px 4px -1px rgba(71,64,71,0.63)\",\r\n      background: \"#2D2F39\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Patients = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [fetchPatient, { loading, refetch, error, variables }] =\r\n    useLazyQuery(getPatients);\r\n  const [\r\n    fetchPatientByStatus,\r\n    {\r\n      loading: byStatusLoading,\r\n      variables: byStatusVaribles,\r\n      refetch: byStatusRefetch,\r\n    },\r\n  ] = useLazyQuery(getPatientsByStatus);\r\n  const [\r\n    fetchPatientByPlan,\r\n    {\r\n      loading: byPlanLoading,\r\n      variables: byPlanVaribles,\r\n      refetch: byPlanRefetch,\r\n    },\r\n  ] = useLazyQuery(getPatientsByPlan);\r\n  const id = localStorage.getItem(\"partnerProviderId\");\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    bloodGroup: \"\",\r\n    phone: \"\",\r\n    gender: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string(\"Enter your hospital\").trim(),\r\n    bloodGroup: Yup.string(\"Enter your bloodGroup\").trim(),\r\n    gender: Yup.string(\"Select your gender\"),\r\n    phone: Yup.number(\"Enter your specialization\").typeError(\r\n      \"Enter a current Number\"\r\n    ),\r\n  });\r\n  const setTableData = async (response, errMsg) => {\r\n    response\r\n      .then(({ data }) => {\r\n        setPageInfo(data?.profiles?.pageInfo || []);\r\n        setProfiles(data?.profiles?.data || defaultPageInfo);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPatient({\r\n      variables: {\r\n        first: pageInfo.limit,\r\n      },\r\n    }).then(({ data }) => {\r\n      if (data) {\r\n        setPageInfo(data?.profiles?.pageInfo || []);\r\n        setProfiles(data?.profiles?.data || defaultPageInfo);\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchPatient({\r\n      variables: {\r\n        first: 10,\r\n        providerId: id,\r\n      },\r\n    });\r\n  }, [fetchPatient, id]);\r\n\r\n  const [profiles, setProfiles] = useState([]);\r\n  const onSubmit = async (values) => {\r\n    const { gender } = values;\r\n    await fetchPatient({\r\n      variables: {\r\n        gender,\r\n      },\r\n    });\r\n    handleDialogClose();\r\n  };\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n  const history = useHistory();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const handleDialogClose = () => setIsOpen(false);\r\n\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n    disabled: theme.palette.common.black,\r\n  };\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid item flex={1} container direction=\"column\" rowGap={2}>\r\n      <Grid\r\n        item\r\n        container\r\n        spacing={2}\r\n        className={classes.searchFilterContainer}\r\n      >\r\n        <Grid item container flexWrap=\"wrap\" spacing={4}></Grid>\r\n      </Grid>\r\n      <TableLayout\r\n        filters={\r\n          <PatientFilters\r\n            setProfiles={setProfiles}\r\n            setPageInfo={setPageInfo}\r\n            queryParams={{\r\n              patientsParams: { fetchPatient, loading, refetch, variables },\r\n              patientsByStatusParams: {\r\n                byStatusLoading,\r\n                byStatusVaribles,\r\n                byStatusRefetch,\r\n                fetchPatientByStatus,\r\n              },\r\n              patientsByPlanParams: {\r\n                byPlanLoading,\r\n                byPlanVaribles,\r\n                byPlanRefetch,\r\n                fetchPatientByPlan,\r\n              },\r\n            }}\r\n          />\r\n        }\r\n        search={\r\n          <CompoundSearch\r\n            queryParams={{\r\n              fetchData: fetchPatient,\r\n              variables,\r\n              loading,\r\n              newVariables: {},\r\n            }}\r\n            setPageInfo={(data) => setPageInfo(data?.profiles?.pageInfo || {})}\r\n            setProfiles={(data) => setProfiles(data?.profiles?.data || [])}\r\n            getSearchPlaceholder={(filterBy) => getSearchPlaceholder(filterBy)}\r\n            filterOptions={searchOptions}\r\n          />\r\n        }\r\n      >\r\n        {loading || byStatusLoading || byPlanLoading ? (\r\n          <Loader />\r\n        ) : // ) : networkStatus === NetworkStatus.refetch ? (\r\n        //   <Loader />\r\n        profiles.length > 0 ? (\r\n          /* ================= PATIENTS TABLE ================= */\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            overflow=\"hidden\"\r\n            maxWidth={{ md: \"100%\", sm: \"100%\", xs: \"100%\" }}\r\n          >\r\n            <EnhancedTable\r\n              headCells={patientsHeadCells1}\r\n              rows={profiles}\r\n              paginationLabel=\"Patients per page\"\r\n              hasCheckbox={true}\r\n              changeLimit={async (e) => {\r\n                const res = changeHospitalTableLimit(fetchPatient, {\r\n                  first: e,\r\n                  providerId: id,\r\n                });\r\n                await setTableData(res, \"Failed to change table limit.\");\r\n              }}\r\n              dataPageInfo={pageInfo}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchPatient,\r\n                  page,\r\n                  pageInfo,\r\n                  id\r\n                );\r\n                await setTableData(res, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                const {\r\n                  dociId,\r\n                  firstName,\r\n                  lastName,\r\n                  plan,\r\n                  provider,\r\n                  //image,\r\n                  consultations,\r\n                  _id,\r\n                  status,\r\n                } = row;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    // aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={_id}\r\n                    // selected={isItemSelected}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => history.push(`patients/${_id}`)}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(_id, selectedRows, setSelectedRows)\r\n                        }\r\n                        color=\"primary\"\r\n                        // checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{\r\n                        color: theme.palette.common.grey,\r\n                        textAlign: \"left\",\r\n                      }}\r\n                    >\r\n                      {dociId?.split(\"-\")[1]}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <div\r\n                        style={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <span\r\n                          test=\"test-value\"\r\n                          style={{ fontSize: \"1.25rem\" }}\r\n                        >{`${firstName} ${lastName}`}</span>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {plan ? plan : \"No Plan\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      data-testid=\"test-value\"\r\n                    >\r\n                      {provider ? provider : \"No Provider\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {consultations ? consultations : 0}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <Chip\r\n                        label={status ? status : \"No Status\"}\r\n                        className={classes.badge}\r\n                        style={{\r\n                          background:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.lightGreen\r\n                              : theme.palette.common.lightRed,\r\n                          color:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.green\r\n                              : theme.palette.common.red,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={patientsHeadCells1}\r\n            paginationLabel=\"Patients per page\"\r\n          />\r\n        )}\r\n      </TableLayout>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpEarnings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAvailability.js",["812","813","814","815","816","817","818"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HCPChat.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAppointments.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Hcps.js",["819","820","821"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { NoData, EmptyTable } from \"components/layouts\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { useMutation, useLazyQuery, NetworkStatus } from \"@apollo/client\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  Modals,\r\n  Loader,\r\n  CompoundSearch,\r\n  DoctorFilters,\r\n  CustomButton,\r\n} from \"components/Utilities\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport TableLayout from \"components/layouts/TableLayout\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { hcpsHeadCells5 } from \"components/Utilities/tableHeaders\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport {\r\n  Grid,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Checkbox,\r\n  Chip,\r\n} from \"@mui/material\";\r\nimport { createDOctorProfile } from \"components/graphQL/Mutation\";\r\nimport { timeConverter } from \"components/Utilities/Time\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  getSearchPlaceholder,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { defaultPageInfo, doctorsSearchOptions } from \"helpers/mockData\";\r\nimport {\r\n  getDoctorsProfile,\r\n  getDoctorsProfileByStatus,\r\n} from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  filterBtnGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      marginRight: \"3rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n      whiteSpace: \"nowrap\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem !important\",\r\n      height: \"2.7rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n\r\n  searchFilterBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: theme.palette.common.black,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  uploadBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: \"#f2f2f2\",\r\n      boxShadow: \"none\",\r\n      color: theme.palette.common.black,\r\n\r\n      \"&:hover\": {\r\n        background: \"#f2f3f3\",\r\n        boxShadow: \"none\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        boxShadow: \"none\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Hcps = () => {\r\n  const classes = useStyles();\r\n  const { displayMessage } = useAlert();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n  const cadre = [\r\n    { key: \"1\", value: \"1\" },\r\n    { key: \"2\", value: \"2\" },\r\n    { key: \"3\", value: \"3\" },\r\n    { key: \"4\", value: \"4\" },\r\n    { key: \"5\", value: \"5\" },\r\n  ];\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n  const [fetchDoctors, { error, loading, refetch, variables, networkStatus }] =\r\n    useLazyQuery(getDoctorsProfile);\r\n  const [\r\n    fetchDoctorsByStatus,\r\n    {\r\n      loading: byStatusLoading,\r\n      refetch: byStatusRefetch,\r\n      variables: byStatusVariables,\r\n    },\r\n  ] = useLazyQuery(getDoctorsProfileByStatus);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const { data } = await fetchDoctors({\r\n          variables: {\r\n            first: pageInfo.limit,\r\n            providerId: partnerProviderId,\r\n          },\r\n        });\r\n        if (data) {\r\n          setPageInfo(data.doctorProfiles.pageInfo || []);\r\n          setProfiles(data.doctorProfiles.profile || defaultPageInfo);\r\n        }\r\n        // ...\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    response\r\n      .then(({ data }) => {\r\n        setPageInfo(data.doctorProfiles.pageInfo || []);\r\n        setProfiles(data.doctorProfiles.profile || defaultPageInfo);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayMessage(\"error\", errMsg);\r\n      });\r\n  };\r\n\r\n  const [profiles, setProfiles] = useState(\"\");\r\n\r\n  const [openHcpFilter, setOpenHcpFilter] = useState(false);\r\n  const [openAddHcp, setOpenAddHcp] = useState(false);\r\n\r\n  const initialValues1 = {\r\n    hospital: \"\",\r\n    specialization: \"\",\r\n    phone: \"\",\r\n    cadre: \"\",\r\n  };\r\n\r\n  const validationSchema1 = Yup.object({\r\n    hospital: Yup.string(\"Enter your hospital\"),\r\n    specialization: Yup.string(\"Enter your specialization\"),\r\n    phone: Yup.number(\"Enter a correct Number\").typeError(\r\n      \"Enter a current Number\"\r\n    ),\r\n    cadre: Yup.string(\"Enter your Cadre\").trim(),\r\n  });\r\n  const onSubmit1 = async (values) => {\r\n    const { specialization } = values;\r\n    await refetch({\r\n      specialization,\r\n    });\r\n    setOpenHcpFilter(false);\r\n  };\r\n  const onSubmit = async (values) => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      gender,\r\n      phone,\r\n      email,\r\n      hospital,\r\n      healaId,\r\n      specialization,\r\n      dob,\r\n      cadre,\r\n      image,\r\n    } = values;\r\n    const correctDOB = timeConverter(dob);\r\n    await createDoc({\r\n      variables: {\r\n        dociId: healaId,\r\n        firstName,\r\n        lastName,\r\n        gender,\r\n        phoneNumber: phone,\r\n        email,\r\n        hospital,\r\n        specialization,\r\n        dob: correctDOB,\r\n        cadre,\r\n        image,\r\n        providerId: \"61db6f8968b248001aec4fcb\",\r\n      },\r\n      refetchQueries: [{ query: getDoctorsProfile }],\r\n    });\r\n    setOpenAddHcp(false);\r\n  };\r\n  const specializations = [\r\n    { key: \"diagnostics\", value: \"diagnostics\" },\r\n    { key: \"pharmacy\", value: \"pharmacy\" },\r\n  ];\r\n\r\n  const gender = [\r\n    { key: \"Male\", value: \"Male\" },\r\n    { key: \"Female\", value: \"Female\" },\r\n  ];\r\n\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    specialization: \"\",\r\n    image: null,\r\n    cadre: \"\",\r\n    gender: \"\",\r\n    hospital: \"\",\r\n    phone: \"\",\r\n    dob: null,\r\n    healaId: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string(\"Enter your firstName\").required(\r\n      \"firstName is required\"\r\n    ),\r\n    hospital: Yup.string(\"Enter your hosptial\").required(\r\n      \"hospital is required\"\r\n    ),\r\n    dob: Yup.date(\"required\")\r\n      .typeError(\" Enter a valid DOB\")\r\n      .required(\" DOB required\"),\r\n    healaId: Yup.string(\"Enter healaId\").required(\"HealaID required\"),\r\n    gender: Yup.string(\"select your Gender\").required(\"Select a gender\"),\r\n    phone: Yup.number(\"Enter your Phone Number\")\r\n      .typeError(\" Enter a valid phone number\")\r\n      .min(11, \"min value is  11 digits\")\r\n      .required(\"Phone number is required\"),\r\n    lastName: Yup.string(\"Enter your lastName\").required(\r\n      \"LastName is required\"\r\n    ),\r\n    image: Yup.string(\"Upload a single Image\")\r\n      .typeError(\"Pick correct image\")\r\n      .required(\"Image is required\"),\r\n    specialization: Yup.string(\"select your Specialization\").required(\r\n      \"Specialization is required\"\r\n    ),\r\n    cadre: Yup.string(\"select your Cadre\").required(\"Cadre is required\"),\r\n  });\r\n  const [createDoc] = useMutation(createDOctorProfile);\r\n  const history = useHistory();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n\r\n  const { setSelectedRows } = useActions();\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n      <Grid\r\n        item\r\n        gap={{ md: 4, sm: 4, xs: 2 }}\r\n        flexDirection={{ md: \"row\", sm: \"row\", xs: \"column\" }}\r\n        container\r\n        justifyContent=\"space-between\"\r\n      >\r\n        {/* <Grid item container flex={1} justifyContent=\"space-between\"> */}\r\n        <Grid item sx={{ ml: \"auto\" }}>\r\n          <CustomButton\r\n            endIcon={<AddIcon />}\r\n            title=\"Add Doctor\"\r\n            type={buttonType}\r\n            onClick={() => setOpenAddHcp(true)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TableLayout\r\n        filters={\r\n          <DoctorFilters\r\n            setProfiles={setProfiles}\r\n            setPageInfo={setPageInfo}\r\n            queryParams={{\r\n              doctorsParams: { fetchDoctors, loading, refetch, variables },\r\n              doctorsByStatusParams: {\r\n                byStatusLoading,\r\n                byStatusVariables,\r\n                byStatusRefetch,\r\n                fetchDoctorsByStatus,\r\n              },\r\n            }}\r\n          />\r\n        }\r\n        search={\r\n          <CompoundSearch\r\n            queryParams={{ fetchData: fetchDoctors, variables, loading }}\r\n            setPageInfo={(data) =>\r\n              setPageInfo(data.doctorProfiles.pageInfo || {})\r\n            }\r\n            setProfiles={(data) =>\r\n              setProfiles(data.doctorProfiles.profile || [])\r\n            }\r\n            getSearchPlaceholder={(filterBy) => getSearchPlaceholder(filterBy)}\r\n            filterOptions={doctorsSearchOptions}\r\n          />\r\n        }\r\n      >\r\n        {loading ? (\r\n          <Loader />\r\n        ) : byStatusLoading ? (\r\n          <Loader />\r\n        ) : networkStatus === NetworkStatus.refetch ? (\r\n          <Loader />\r\n        ) : profiles.length > 0 ? (\r\n          <Grid item container height=\"100%\" direction=\"column\">\r\n            <EnhancedTable\r\n              headCells={hcpsHeadCells5}\r\n              rows={profiles}\r\n              paginationLabel=\"Doctors per page\"\r\n              hasCheckbox={true}\r\n              changeLimit={async (e) => {\r\n                const res = await changeHospitalTableLimit(fetchDoctors, {\r\n                  first: e,\r\n                  providerId: partnerProviderId,\r\n                });\r\n\r\n                await setTableData(res, \"Failed to change table limit\");\r\n              }}\r\n              dataPageInfo={pageInfo}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchDoctors,\r\n                  page,\r\n                  pageInfo,\r\n                  partnerProviderId\r\n                );\r\n\r\n                await setTableData(res, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const {\r\n                  _id,\r\n                  dociId,\r\n                  firstName,\r\n                  status,\r\n                  specialization,\r\n                  consultations,\r\n                  lastName,\r\n                } = row;\r\n                const isItemSelected = isSelected(_id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    onClick={() => history.push(`hcps/${_id}`)}\r\n                    key={_id}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(_id, selectedRows, setSelectedRows)\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{\r\n                        color: theme.palette.common.grey,\r\n                        minWidth: \"10rem\",\r\n                      }}\r\n                    >\r\n                      {dociId?.split(\"-\")[1]}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <div\r\n                        style={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          alignItems: \"left\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: \"1.25rem\" }}>\r\n                          {firstName} {lastName}\r\n                        </span>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.grey }}\r\n                    >\r\n                      {specialization}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {consultations ? consultations : 0}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <Chip\r\n                        label={status ? status : \"No Status\"}\r\n                        className={classes.badge}\r\n                        style={{\r\n                          background:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.lightGreen\r\n                              : theme.palette.common.lightRed,\r\n                          color:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.green\r\n                              : theme.palette.common.red,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    {/* <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        component={Link}\r\n                        to=\r\n                        endIcon={<ArrowForwardIosIcon />}\r\n                      >\r\n                        View Doctor\r\n                      </Button>\r\n                    </TableCell> */}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={hcpsHeadCells5}\r\n            paginationLabel=\"Doctors  per page\"\r\n          />\r\n        )}\r\n      </TableLayout>\r\n      {/* Filter Modal */}\r\n      <Modals\r\n        isOpen={openHcpFilter}\r\n        title=\"Filter\"\r\n        rowSpacing={5}\r\n        handleClose={() => setOpenHcpFilter(false)}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues1}\r\n          onSubmit={onSubmit1}\r\n          validationSchema={validationSchema1}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({ isSubmitting, isValid, dirty }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"3rem\" }}>\r\n                <Grid item container direction=\"column\" gap={1}>\r\n                  <Grid item container rowSpacing={3}>\r\n                    <Grid item container>\r\n                      <FormikControl\r\n                        control=\"select\"\r\n                        options={specializations}\r\n                        name=\"specialization\"\r\n                        label=\"Specialization\"\r\n                        placeholder=\"Select Specialization\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item marginTop={3}>\r\n                  <CustomButton\r\n                    title=\"Apply Filter\"\r\n                    width=\"100%\"\r\n                    type={buttonType}\r\n                    isSubmitting={isSubmitting}\r\n                    disabled={!(dirty || isValid)}\r\n                  />\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n      {/* ADD Doctor MODAL */}\r\n      <Modals\r\n        isOpen={openAddHcp}\r\n        title=\"Add Doctor\"\r\n        rowSpacing={5}\r\n        height=\"auto\"\r\n        handleClose={() => setOpenAddHcp(false)}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({\r\n            isSubmitting,\r\n            dirty,\r\n            isValid,\r\n            setFieldValue,\r\n            errors,\r\n            setValues,\r\n          }) => {\r\n            console.log(errors);\r\n            return (\r\n              <Form style={{ marginTop: \"1rem\" }}>\r\n                <Grid container direction=\"column\" gap={2}>\r\n                  <Grid item container direction=\"column\" gap={1}>\r\n                    <Grid item container>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"First Name\"\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"Enter first name\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Last Name\"\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Enter last name\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" gap={2}>\r\n                      <Grid item container>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item md>\r\n                            <Grid container direction=\"column\">\r\n                              <FormikControl\r\n                                control=\"select\"\r\n                                options={specializations}\r\n                                name=\"specialization\"\r\n                                label=\"Specialization\"\r\n                                placeholder=\"Specialization\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"select\"\r\n                              label=\"Gender\"\r\n                              id=\"gender\"\r\n                              name=\"gender\"\r\n                              options={gender}\r\n                              placeholder=\"Gender\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container direction=\"column\" gap={2}>\r\n                    <Grid item container>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Phone Number\"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter last Phone number\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item md>\r\n                          <Grid container direction=\"column\">\r\n                            <FormikControl\r\n                              control=\"select\"\r\n                              options={cadre}\r\n                              name=\"cadre\"\r\n                              label=\"Cadre\"\r\n                              placeholder=\"Select Cadre\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" gap={2}>\r\n                      <Grid item container>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"date\"\r\n                              name=\"dob\"\r\n                              label=\"DOB\"\r\n                              type=\"hospital\"\r\n                              setFieldValue={setFieldValue}\r\n                              setValues={setValues}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"input\"\r\n                              label=\"HealaId\"\r\n                              id=\"heala\"\r\n                              name=\"healaId\"\r\n                              placeholder=\"Enter Heala ID\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container spacing={2} alignItems=\"center\">\r\n                    <Grid item container md>\r\n                      <FormikControl\r\n                        control=\"file\"\r\n                        name=\"image\"\r\n                        label=\"Profile Pics\"\r\n                        setFieldValue={setFieldValue}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md>\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        name=\"hospital\"\r\n                        label=\"Hospital\"\r\n                        placeholder=\"Enter Hospital\"\r\n                      />\r\n                    </Grid>\r\n                    {/* <Grid item md>\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        label=\"Heala-ID\"\r\n                        id=\"dociId\"\r\n                        name=\"dociId\"\r\n                        placeholder=\"Enter Heala ID\"\r\n                      />\r\n                    </Grid> */}\r\n                  </Grid>\r\n                  <Grid item container>\r\n                    <CustomButton\r\n                      title=\"Add Doctor\"\r\n                      width=\"100%\"\r\n                      type={buttonType}\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Hcps;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Medications.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CaseNotes.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\MedicalRecords.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Consultations.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Chat.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalDashboard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\PrivateRoute.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequest.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequestProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profiles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewResult.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Setting.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Pending.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboards.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrderProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewCompleted.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ProcessingOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\SubscriptionModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\WaitingListTable.js",[],["822","823"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Copy.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\bMI.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useFormInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\Success.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\auth.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\tablesActions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useCopy.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ReferPatient.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Management.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Administrator.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Error.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PageNotFound.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Login.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\RoleModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\debounce.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CompoundSearch.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Filter.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PatientFilters.js",["824","825","826","827"],"import React, { useEffect, useState } from \"react\";\r\nimport t from \"prop-types\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport Filter from \"./Filter\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getPlans, getProviders } from \"components/graphQL/useQuery\";\r\nimport { deleteVar, filterData } from \"helpers/filterHelperFunctions\";\r\nimport {\r\n  genderType,\r\n  patientsProfileDefaultFilterByValues,\r\n  /* statusFilterBy, */\r\n} from \"helpers/mockData\";\r\n\r\nconst PatientFilters = ({ setProfiles, setPageInfo, queryParams }) => {\r\n  const { displayAlert } = useAlert();\r\n  const [plans, setPlans] = useState([]);\r\n  const [fetchPlans] = useLazyQuery(getPlans);\r\n  const [providers, setProviders] = useState([]);\r\n  const [fetchProviders] = useLazyQuery(getProviders);\r\n  const [providerId, setProviderId] = useState(null);\r\n  const [filterPlanValue, setFilterPlanValue] = useState(\"\");\r\n  const [, setStatusFilterValue] = useState(\"\");\r\n  const { patientsParams, patientsByStatusParams, patientsByPlanParams } =\r\n    queryParams;\r\n  const { fetchPatient, loading, refetch, variables } = patientsParams;\r\n  const [profileFilterValues, setProfileFilterValues] = useState(\r\n    patientsProfileDefaultFilterByValues\r\n  );\r\n  const {\r\n    byStatusLoading,\r\n    /* byStatusVaribles,\r\n    byStatusRefetch,\r\n    fetchPatientByStatus, */\r\n  } = patientsByStatusParams;\r\n  const { byPlanLoading, byPlanVaribles, byPlanRefetch, fetchPatientByPlan } =\r\n    patientsByPlanParams;\r\n\r\n  useEffect(() => {\r\n    fetchProviders()\r\n      .then(({ data }) => {\r\n        if (!data) throw Error(\"Couldn't get list of providers\");\r\n        const providersList = (data?.getProviders?.provider).map((provider) => {\r\n          const { _id, name } = provider;\r\n          return { key: name, value: _id };\r\n        });\r\n        setProviders(providersList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (providerId === \"\" || providerId === null) return;\r\n    fetchPlans({ variables: { provider: providerId } })\r\n      .then(({ data }) => {\r\n        if (!data) throw Error(\"Couldn't get list of plans\");\r\n        const planList = (data?.getPlans?.plan || []).map((plan) => {\r\n          const { _id, name } = plan;\r\n          return { key: name, value: _id };\r\n        });\r\n        setPlans(planList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [providerId]);\r\n\r\n  const onFilterProfileChange = async (name, value) => {\r\n    try {\r\n      if (name === \"provider\") setProviderId(value);\r\n      setStatusFilterValue(\"\");\r\n      deleteVar(variables);\r\n      const filterValues = { ...profileFilterValues, [name]: value };\r\n      setProfileFilterValues(filterValues);\r\n      filterData(filterValues, {\r\n        fetchData: fetchPatient,\r\n        refetch,\r\n        variables,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.profiles?.data || []);\r\n          setPageInfo(data?.profiles?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setProfileFilterValues, patientsProfileDefaultFilterByValues);\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setProfileFilterValues, patientsProfileDefaultFilterByValues);\r\n    }\r\n  };\r\n\r\n  /*   const onFilterStatusChange = async (value) => {\r\n    try {\r\n      setProfileFilterValues({ gender: \"\", provider: \"\" });\r\n      deleteVar(byStatusVaribles);\r\n      setStatusFilterValue(value);\r\n      const filterVariables = { status: value };\r\n\r\n      filterData(filterVariables, {\r\n        fetchData: fetchPatientByStatus,\r\n        refetch: byStatusRefetch,\r\n        variables: byStatusVaribles,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.profilesByStatus?.data || []);\r\n          setPageInfo(data?.profilesByStatus?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setStatusFilterValue, \"\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setStatusFilterValue, \"\");\r\n    }\r\n  }; */\r\n\r\n  const onFilterPlanChange = async (value) => {\r\n    try {\r\n      if (value === \"\") {\r\n        setProfileFilterValues({\r\n          ...patientsProfileDefaultFilterByValues,\r\n        });\r\n      } else {\r\n        setProfileFilterValues({\r\n          ...patientsProfileDefaultFilterByValues,\r\n          provider: profileFilterValues.provider,\r\n        });\r\n      }\r\n      deleteVar(byPlanVaribles);\r\n      setFilterPlanValue(value);\r\n      const filterVariables = { planId: value };\r\n\r\n      filterData(filterVariables, {\r\n        fetchData: fetchPatientByPlan,\r\n        refetch: byPlanRefetch,\r\n        variables: byPlanVaribles,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.profilesByPlan?.data || []);\r\n          setPageInfo(data?.profilesByPlan?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setStatusFilterValue, \"\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setStatusFilterValue, \"\");\r\n    }\r\n  };\r\n\r\n  const refresh = async (setFilterValue, defaultVal) => {\r\n    displayAlert(\"error\", \"Something went wrong while filtering. Try again.\");\r\n    setFilterValue(defaultVal);\r\n\r\n    deleteVar(variables);\r\n\r\n    refetch()\r\n      .then(({ data }) => {\r\n        setProfiles(data?.profiles?.data || []);\r\n        setPageInfo(data?.profiles?.pageInfo || {});\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayAlert(\"error\", \"Failed to get patients data, Try again\");\r\n      });\r\n  };\r\n  return (\r\n    <Grid item container flexWrap=\"wrap\" spacing={2} alignItems=\"flex-end\">\r\n      {/* FILTER BY GENDER */}\r\n      <Grid item>\r\n        <Filter\r\n          onHandleChange={(e) =>\r\n            onFilterProfileChange(\"gender\", e?.target?.value)\r\n          }\r\n          onClickClearBtn={() => onFilterProfileChange(\"gender\", \"\")}\r\n          options={[{ key: \"Gender\", value: \"\" }, ...genderType]}\r\n          name=\"gender\"\r\n          value={profileFilterValues.gender}\r\n          hasClearBtn={true}\r\n          disable={loading || byStatusLoading || byPlanLoading}\r\n          variant=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      {/* FILTER BY PROVIDER AND PLAN */}\r\n      {/* <Grid item>\r\n        <Filter\r\n          onHandleChange={(e) =>\r\n            onFilterProfileChange(\"provider\", e?.target?.value)\r\n          }\r\n          onClickClearBtn={() => onFilterProfileChange(\"provider\", \"\")}\r\n          options={[{ key: \"Provider\", value: \"\" }, ...providers]}\r\n          name=\"provider\"\r\n          value={profileFilterValues.provider}\r\n          hasClearBtn={true}\r\n          disable={loading || byStatusLoading || byPlanLoading}\r\n        />\r\n      </Grid> */}\r\n      {/* {profileFilterValues.provider === \"\" ? null : (\r\n        <Grid item>\r\n          <Filter\r\n            label=\"\"\r\n            onHandleChange={(e) => onFilterPlanChange(e?.target?.value)}\r\n            onClickClearBtn={() => onFilterPlanChange(\"\")}\r\n            options={plans}\r\n            name=\"plan\"\r\n            placeholder=\"Provider Plan\"\r\n            value={filterPlanValue}\r\n            hasClearBtn={true}\r\n            disable={loading || byStatusLoading || byPlanLoading}\r\n          />\r\n        </Grid>\r\n      )} */}\r\n\r\n      {/* FILTER BY STATUS */}\r\n      {/* <Grid item>\r\n        <Filter\r\n          label=\"By Status\"\r\n          onHandleChange={(e) => onFilterStatusChange(e?.target?.value)}\r\n          onClickClearBtn={() => onFilterStatusChange(\"\")}\r\n          options={statusFilterBy}\r\n          name=\"status\"\r\n          placeholder=\"None\"\r\n          value={statusFilterValue}\r\n          hasClearBtn={true}\r\n          disable={loading || byStatusLoading || byPlanLoading}\r\n        />\r\n      </Grid> */}\r\n      {/* ==== CLEAR FILTERS BUTTON ===== */}\r\n      {/* <Grid item>\r\n            <ClearFiltersBtn\r\n              title=\"Clear filters\"\r\n              onHandleClick={() => {\r\n                resetFilters(\r\n                  setFilterValues,\r\n                  patientsPageDefaultFilterValues,\r\n                  variables,\r\n                  fetchPatient\r\n                );\r\n              }}\r\n            />\r\n          </Grid> */}\r\n    </Grid>\r\n  );\r\n};\r\nPatientFilters.propTypes = {\r\n  setProfiles: t.func.isRequired,\r\n  setPageInfo: t.func.isRequired,\r\n  queryParams: t.object.isRequired,\r\n};\r\n\r\nexport default PatientFilters;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DoctorFilters.js",["828"],"import React, { useEffect, useState } from \"react\";\r\nimport ProPtypes from \"prop-types\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport Filter from \"./Filter\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport {\r\n  cadreOptions,\r\n  defaultPageInfo,\r\n  doctorsProfileDefaultFilterByValues,\r\n  genderType,\r\n  specializationOptions,\r\n  statusFilterBy,\r\n} from \"helpers/mockData\";\r\nimport { deleteVar, filterData } from \"helpers/filterHelperFunctions\";\r\nimport { getProviders } from \"components/graphQL/useQuery\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n\r\nconst DoctorFilters = ({ setProfiles, setPageInfo, queryParams }) => {\r\n  const { displayAlert } = useAlert();\r\n  const [statusFilterValue, setStatusFilterValue] = useState(\"\");\r\n  const [providers, setProviders] = useState([]);\r\n  const [profileFilterValues, setProfileFilterValues] = useState(\r\n    doctorsProfileDefaultFilterByValues\r\n  ); // gender cadre specialization providerId\r\n  const [fetchProviders] = useLazyQuery(getProviders);\r\n  const { doctorsParams, doctorsByStatusParams } = queryParams;\r\n  const { fetchDoctors, loading, refetch, variables } = doctorsParams;\r\n  const {\r\n    byStatusLoading,\r\n    byStatusVaribles,\r\n    byStatusRefetch,\r\n    fetchDoctorsByStatus,\r\n  } = doctorsByStatusParams;\r\n\r\n  useEffect(() => {\r\n    fetchProviders()\r\n      .then(({ data }) => {\r\n        if (!data) throw Error(\"Couldn'ProPtypes get list of providers\");\r\n        const providersList = (data?.getProviders?.provider || []).map(\r\n          (provider) => {\r\n            const { _id, name } = provider;\r\n            return { key: name, value: _id };\r\n          }\r\n        );\r\n        setProviders(providersList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onFilterProfileChange = async (name, value) => {\r\n    try {\r\n      setStatusFilterValue(\"\");\r\n      deleteVar(variables);\r\n      const filterValues = { ...profileFilterValues, [name]: value };\r\n      setProfileFilterValues(filterValues);\r\n      filterData(filterValues, {\r\n        fetchData: fetchDoctors,\r\n        refetch,\r\n        variables,\r\n      })\r\n        .then((data) => {\r\n          setPageInfo(data.doctorProfiles.pageInfo || []);\r\n          setProfiles(data.doctorProfiles.profile || defaultPageInfo);\r\n        })\r\n        .catch(() => {\r\n          refresh(setProfileFilterValues, doctorsProfileDefaultFilterByValues);\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setProfileFilterValues, doctorsProfileDefaultFilterByValues);\r\n    }\r\n  };\r\n\r\n  const onFilterStatusChange = async (value) => {\r\n    try {\r\n      setProfileFilterValues(doctorsProfileDefaultFilterByValues);\r\n      deleteVar(byStatusVaribles);\r\n      setStatusFilterValue(value);\r\n      const filterVariables = { status: value };\r\n\r\n      filterData(filterVariables, {\r\n        fetchData: fetchDoctorsByStatus,\r\n        refetch: byStatusRefetch,\r\n        variables: byStatusVaribles,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.doctorProfilesByStatus?.profile || []);\r\n          setPageInfo(data?.doctorProfilesByStatus?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setStatusFilterValue, \"\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setStatusFilterValue, \"\");\r\n    }\r\n  };\r\n\r\n  const refresh = async (setFilterValue, defaultVal) => {\r\n    displayAlert(\"error\", \"Something went wrong while filtering. Try again.\");\r\n    setFilterValue(defaultVal);\r\n\r\n    deleteVar(variables);\r\n\r\n    refetch()\r\n      .then(({ data }) => {\r\n        setProfiles(data?.profiles?.data || []);\r\n        setPageInfo(data?.profiles?.pageInfo || {});\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayAlert(\"error\", \"Failed to get patients data, Try again\");\r\n      });\r\n  };\r\n  return (\r\n    <Grid item container flexWrap=\"wrap\" spacing={4}>\r\n      {/* FILTER BY PROFILE */}\r\n      <Grid item>\r\n        <Grid container flexWrap=\"wrap\" spacing={2} alignItems=\"flex-end\">\r\n          {[\r\n            {\r\n              label: \"\",\r\n              onHandleChange: (e) =>\r\n                onFilterProfileChange(\"gender\", e?.target?.value),\r\n              onClickClearBtn: () => onFilterProfileChange(\"gender\", \"\"),\r\n              options: [{ key: \"Gender\", value: \"\" }, ...genderType],\r\n              name: \"gender\",\r\n              placeholder: \"By gender\",\r\n              value: profileFilterValues.gender,\r\n              hasClearBtn: true,\r\n              disavle: loading || byStatusLoading,\r\n            },\r\n            {\r\n              label: \"\",\r\n              onHandleChange: (e) =>\r\n                onFilterProfileChange(\"cadre\", e?.target?.value),\r\n              onClickClearBtn: () => onFilterProfileChange(\"cadre\", \"\"),\r\n              options: [{ key: \"Cadre\", value: \"\" }, ...cadreOptions],\r\n              name: \"cadre\",\r\n              placeholder: \"By cadre\",\r\n              value: profileFilterValues.cadre,\r\n              hasClearBtn: true,\r\n              disavle: loading || byStatusLoading,\r\n            },\r\n            {\r\n              label: \"\",\r\n              onHandleChange: (e) =>\r\n                onFilterProfileChange(\"specialization\", e?.target?.value),\r\n              onClickClearBtn: () =>\r\n                onFilterProfileChange(\"specialization\", \"\"),\r\n              options: [\r\n                { key: \"Specialization\", value: \"\" },\r\n                ...specializationOptions,\r\n              ],\r\n              name: \"specialization\",\r\n              placeholder: \"By specialization\",\r\n              value: profileFilterValues.specialization,\r\n              hasClearBtn: true,\r\n              disavle: loading || byStatusLoading,\r\n            },\r\n            // {\r\n            //   label: \"\",\r\n            //   onHandleChange: (e) =>\r\n            //     onFilterProfileChange(\"providerId\", e?.target?.value),\r\n            //   onClickClearBtn: () => onFilterProfileChange(\"providerId\", \"\"),\r\n            //   options: [{ key: \"Provider\", value: \"\" }, ...providers],\r\n            //   name: \"providerId\",\r\n            //   placeholder: \"By provider\",\r\n            //   value: profileFilterValues.providerId,\r\n            //   hasClearBtn: true,\r\n            //   disavle: loading || byStatusLoading,\r\n            // },\r\n          ].map((filter, idx) => {\r\n            return (\r\n              <Grid item key={`${idx}-${filter.name}`}>\r\n                <Filter\r\n                  label={filter.label}\r\n                  onHandleChange={(e) => filter.onHandleChange(e)}\r\n                  onClickClearBtn={() => filter.onClickClearBtn()}\r\n                  options={filter.options}\r\n                  name={filter.name}\r\n                  placeholder={filter.placeholder}\r\n                  value={filter.value}\r\n                  hasClearBtn={true}\r\n                  disable={loading || byStatusLoading}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n\r\n          {/* FILTER BY STATUS */}\r\n          <Grid item>\r\n            <Filter\r\n              label=\"\"\r\n              onHandleChange={(e) => onFilterStatusChange(e?.target?.value)}\r\n              onClickClearBtn={() => onFilterStatusChange(\"\")}\r\n              options={[{ key: \"Status\", value: \"\" }, ...statusFilterBy]}\r\n              name=\"status\"\r\n              placeholder=\"None\"\r\n              value={statusFilterValue}\r\n              hasClearBtn={true}\r\n              disable={loading || byStatusLoading}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nDoctorFilters.propTypes = {\r\n  setProfiles: ProPtypes.func,\r\n  setPageInfo: ProPtypes.func,\r\n  queryParams: ProPtypes.object,\r\n};\r\n\r\nexport default DoctorFilters;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Buttons\\CloseBtn.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAppType.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAlert.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SubscriptionIncome.js",["829"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  TableCell,\r\n  TableRow,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport TrendingDownIcon from \"@mui/icons-material/TrendingDown\";\r\nimport {\r\n  timeMoment,\r\n  dateMoment,\r\n  formatNumber,\r\n} from \"components/Utilities/Time\";\r\nimport { EnhancedTable, NoData, EmptyTable } from \"components/layouts\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { financeHeader2 } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { Loader } from \"components/Utilities\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getSubscriptionsIncome } from \"components/graphQL/useQuery\";\r\nimport { defaultPageInfo } from \"helpers/mockData\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { useAlert } from \"components/hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  iconWrapper: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: \"50%\",\r\n    display: \"grid\",\r\n    placeContent: \"center\",\r\n    background: theme.palette.common.lightGreen,\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SubscriptionIncome = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [profiles, setProfiles] = useState(\"\");\r\n  const { displayMessage } = useAlert();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n  const [pageInfo, setPageInfo] = useState(defaultPageInfo);\r\n\r\n  const [fetchDoctors, { error, loading }] = useLazyQuery(\r\n    getSubscriptionsIncome\r\n  );\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    try {\r\n      setPageInfo(\r\n        response.getEarningStats.subscriptionIncomeData.PageInfo || []\r\n      );\r\n      setProfiles(\r\n        response.getEarningStats.subscriptionIncomeData.data || defaultPageInfo\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n      displayMessage(\"error\", error);\r\n    }\r\n  };\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const { data } = await fetchDoctors({\r\n          variables: {\r\n            first: pageInfo.limit,\r\n            providerId: partnerProviderId,\r\n          },\r\n        });\r\n        if (data) {\r\n          setPageInfo(\r\n            data.getEarningStats.subscriptionIncomeData.PageInfo || []\r\n          );\r\n          setProfiles(\r\n            data.getEarningStats.subscriptionIncomeData.data || defaultPageInfo\r\n          );\r\n        }\r\n        // ...\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} height=\"100%\">\r\n      <Card\r\n        variant=\"outlined\"\r\n        sx={{\r\n          width: \"100%\",\r\n          borderRadius: \"1.5rem\",\r\n          borderColor: \"transparent\",\r\n          p: 2,\r\n          mt: 2,\r\n        }}\r\n      >\r\n        <Grid item container gap={1} alignItems=\"center\">\r\n          <Grid item flex={1}>\r\n            <Typography noWrap variant=\"h1\" component=\"div\" color=\"#2D2F39\">\r\n              Subscription Earnings table\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item className={classes.iconWrapper}>\r\n            <TrendingDownIcon color=\"success\" className={classes.cardIcon} />\r\n          </Grid>\r\n        </Grid>\r\n        {profiles.length > 0 ? (\r\n          <Grid item container>\r\n            <EnhancedTable\r\n              headCells={financeHeader2}\r\n              rows={profiles}\r\n              paginationLabel=\"finance per page\"\r\n              hasCheckbox={true}\r\n              dataPageInfo={pageInfo}\r\n              changeLimit={async (e) => {\r\n                const res = await changeHospitalTableLimit(fetchDoctors, {\r\n                  first: e,\r\n                  providerId: partnerProviderId,\r\n                });\r\n                console.log(res);\r\n                await setTableData(res.data, \"Failed to change table limit\");\r\n              }}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchDoctors,\r\n                  page,\r\n                  pageInfo,\r\n                  partnerProviderId\r\n                );\r\n                await setTableData(res, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const { createdAt, amount, patientData, providerId, planId } =\r\n                  row;\r\n                const { firstName, image, lastName } = patientData || {};\r\n                const isItemSelected = isSelected(row._id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row._id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(\r\n                            row.id,\r\n                            selectedRows,\r\n                            setSelectedRows\r\n                          )\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {formatNumber(amount.toFixed(2))}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {patientData && patientData !== {} ? (\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <span style={{ fontSize: \"1.25rem\" }}>\r\n                            {patientData &&\r\n                              `${firstName && firstName} ${\r\n                                lastName && lastName\r\n                              }`}\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        \"No name\"\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {planId}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {providerId}\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.black }}\r\n                    >\r\n                      {`${dateMoment(createdAt)} - ${timeMoment(createdAt)}`}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={financeHeader2}\r\n            paginationLabel=\"Finance  per page\"\r\n          />\r\n        )}\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SubscriptionIncome;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\LoginForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\Filters\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorPayout.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorEarning.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\CardItem.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\ChervonDownIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\BellIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DoctorsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DashboardIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PatientsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\FinanceIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SettingsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\RefferalsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SubscriptionIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\LogoutIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\TableLayout.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SearchIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Searchs.js",[],{"ruleId":"830","replacedBy":"831"},{"ruleId":"832","replacedBy":"833"},{"ruleId":"834","severity":1,"message":"835","line":2,"column":8,"nodeType":"836","messageId":"837","endLine":2,"endColumn":12},{"ruleId":"834","severity":1,"message":"838","line":9,"column":3,"nodeType":"836","messageId":"837","endLine":9,"endColumn":13},{"ruleId":"834","severity":1,"message":"839","line":113,"column":9,"nodeType":"836","messageId":"837","endLine":113,"endColumn":21},{"ruleId":"834","severity":1,"message":"840","line":2,"column":8,"nodeType":"836","messageId":"837","endLine":2,"endColumn":27},{"ruleId":"834","severity":1,"message":"841","line":3,"column":10,"nodeType":"836","messageId":"837","endLine":3,"endColumn":14},{"ruleId":"834","severity":1,"message":"842","line":12,"column":3,"nodeType":"836","messageId":"837","endLine":12,"endColumn":9},{"ruleId":"834","severity":1,"message":"842","line":9,"column":3,"nodeType":"836","messageId":"837","endLine":9,"endColumn":9},{"ruleId":"834","severity":1,"message":"840","line":17,"column":8,"nodeType":"836","messageId":"837","endLine":17,"endColumn":27},{"ruleId":"834","severity":1,"message":"841","line":24,"column":10,"nodeType":"836","messageId":"837","endLine":24,"endColumn":14},{"ruleId":"834","severity":1,"message":"843","line":14,"column":28,"nodeType":"836","messageId":"837","endLine":14,"endColumn":40},{"ruleId":"834","severity":1,"message":"844","line":2,"column":8,"nodeType":"836","messageId":"837","endLine":2,"endColumn":21},{"ruleId":"834","severity":1,"message":"845","line":3,"column":10,"nodeType":"836","messageId":"837","endLine":3,"endColumn":16},{"ruleId":"834","severity":1,"message":"846","line":3,"column":18,"nodeType":"836","messageId":"837","endLine":3,"endColumn":22},{"ruleId":"834","severity":1,"message":"847","line":11,"column":3,"nodeType":"836","messageId":"837","endLine":11,"endColumn":23},{"ruleId":"834","severity":1,"message":"842","line":14,"column":3,"nodeType":"836","messageId":"837","endLine":14,"endColumn":9},{"ruleId":"834","severity":1,"message":"848","line":22,"column":3,"nodeType":"836","messageId":"837","endLine":22,"endColumn":9},{"ruleId":"834","severity":1,"message":"849","line":24,"column":3,"nodeType":"836","messageId":"837","endLine":24,"endColumn":15},{"ruleId":"834","severity":1,"message":"840","line":32,"column":8,"nodeType":"836","messageId":"837","endLine":32,"endColumn":27},{"ruleId":"834","severity":1,"message":"850","line":33,"column":8,"nodeType":"836","messageId":"837","endLine":33,"endColumn":20},{"ruleId":"834","severity":1,"message":"841","line":34,"column":10,"nodeType":"836","messageId":"837","endLine":34,"endColumn":14},{"ruleId":"834","severity":1,"message":"851","line":38,"column":10,"nodeType":"836","messageId":"837","endLine":38,"endColumn":20},{"ruleId":"834","severity":1,"message":"852","line":52,"column":7,"nodeType":"836","messageId":"837","endLine":52,"endColumn":17},{"ruleId":"834","severity":1,"message":"853","line":145,"column":9,"nodeType":"836","messageId":"837","endLine":145,"endColumn":22},{"ruleId":"834","severity":1,"message":"854","line":152,"column":9,"nodeType":"836","messageId":"837","endLine":152,"endColumn":25},{"ruleId":"834","severity":1,"message":"855","line":195,"column":9,"nodeType":"836","messageId":"837","endLine":195,"endColumn":17},{"ruleId":"834","severity":1,"message":"856","line":217,"column":10,"nodeType":"836","messageId":"837","endLine":217,"endColumn":16},{"ruleId":"834","severity":1,"message":"857","line":220,"column":9,"nodeType":"836","messageId":"837","endLine":220,"endColumn":19},{"ruleId":"834","severity":1,"message":"858","line":3,"column":10,"nodeType":"836","messageId":"837","endLine":3,"endColumn":26},{"ruleId":"834","severity":1,"message":"859","line":11,"column":3,"nodeType":"836","messageId":"837","endLine":11,"endColumn":23},{"ruleId":"834","severity":1,"message":"860","line":17,"column":10,"nodeType":"836","messageId":"837","endLine":17,"endColumn":18},{"ruleId":"834","severity":1,"message":"861","line":18,"column":10,"nodeType":"836","messageId":"837","endLine":18,"endColumn":25},{"ruleId":"834","severity":1,"message":"862","line":79,"column":10,"nodeType":"836","messageId":"837","endLine":79,"endColumn":26},{"ruleId":"834","severity":1,"message":"863","line":79,"column":28,"nodeType":"836","messageId":"837","endLine":79,"endColumn":47},{"ruleId":"834","severity":1,"message":"864","line":145,"column":10,"nodeType":"836","messageId":"837","endLine":145,"endColumn":18},{"ruleId":"834","severity":1,"message":"840","line":21,"column":8,"nodeType":"836","messageId":"837","endLine":21,"endColumn":27},{"ruleId":"834","severity":1,"message":"841","line":22,"column":10,"nodeType":"836","messageId":"837","endLine":22,"endColumn":14},{"ruleId":"834","severity":1,"message":"842","line":31,"column":3,"nodeType":"836","messageId":"837","endLine":31,"endColumn":9},{"ruleId":"830","replacedBy":"865"},{"ruleId":"832","replacedBy":"866"},{"ruleId":"834","severity":1,"message":"867","line":18,"column":10,"nodeType":"836","messageId":"837","endLine":18,"endColumn":15},{"ruleId":"834","severity":1,"message":"868","line":20,"column":10,"nodeType":"836","messageId":"837","endLine":20,"endColumn":19},{"ruleId":"834","severity":1,"message":"869","line":23,"column":10,"nodeType":"836","messageId":"837","endLine":23,"endColumn":25},{"ruleId":"834","severity":1,"message":"870","line":123,"column":9,"nodeType":"836","messageId":"837","endLine":123,"endColumn":27},{"ruleId":"834","severity":1,"message":"868","line":22,"column":10,"nodeType":"836","messageId":"837","endLine":22,"endColumn":19},{"ruleId":"834","severity":1,"message":"871","line":196,"column":36,"nodeType":"836","messageId":"837","endLine":196,"endColumn":41},"no-native-reassign",["872"],"no-negated-in-lhs",["873"],"no-unused-vars","'Copy' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'returnString' is assigned a value but never used.","'ArrowForwardIosIcon' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'CalendarIcon' is defined but never used.","'FormikControl' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'patientSearchOptions' is defined but never used.","'Modals' is defined but never used.","'CustomButton' is defined but never used.","'displayPhoto' is defined but never used.","'isSelected' is defined but never used.","'genderType' is assigned a value but never used.","'initialValues' is assigned a value but never used.","'validationSchema' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'buttonType' is assigned a value but never used.","'AvailabilityCard' is defined but never used.","'getSearchPlaceholder' is defined but never used.","'useQuery' is defined but never used.","'getAvailability' is defined but never used.","'availabiltyArray' is assigned a value but never used.","'setAvailabiltyArray' is assigned a value but never used.","'loadings' is assigned a value but never used.",["872"],["873"],"'plans' is assigned a value but never used.","'providers' is assigned a value but never used.","'filterPlanValue' is assigned a value but never used.","'onFilterPlanChange' is assigned a value but never used.","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\index.js":"1","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\reportWebVitals.js":"2","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\accessToken.js":"3","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\App.js":"4","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\serviceWorkerRegistration.js":"5","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\index.js":"6","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\index.js":"7","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\muiTheme.js":"8","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\SideNav.js":"9","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Routes.js":"10","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Private.js":"11","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\Mutation.js":"12","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useActions.js":"13","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Hospital.js":"14","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\useQuery.js":"15","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\AppTypeContext.js":"16","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\index.js":"17","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\index.js":"18","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\appTypeReducer.js":"19","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\fragment.js":"20","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\store.js":"21","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Notifications.js":"22","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EmptyTable.js":"23","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfileHospital.js":"24","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpConsultations.js":"25","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientAppointment.js":"26","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalSettings.js":"27","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ReferralTab.js":"28","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\asideMenus.js":"29","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalProfile.js":"30","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\func.js":"31","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\DeleteOrDisable.js":"32","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableToolbar.js":"33","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableHeader.js":"34","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\index.js":"35","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\filterHelperFunctions.js":"36","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Time.js":"37","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormikControl.js":"38","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\isSelected.js":"39","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\selectedRows.js":"40","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableHeaders.js":"41","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\authReducer.js":"42","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\tablesReducer.js":"43","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\index.js":"44","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\mocks\\patterns.js":"45","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Date.js":"46","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-types\\index.js":"47","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\LoginInput.js":"48","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Textarea.js":"49","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Input.js":"50","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\File.js":"51","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\DateTimePicker.js":"52","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormRadio.js":"53","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Select.js":"54","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Checkbox.js":"55","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Typography.js":"56","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularChart.js":"57","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\TextError.js":"58","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\SearchInput.js":"59","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Search.js":"60","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PreviousButton.js":"61","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Modal.js":"62","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Loader.js":"63","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\NotistackAlert.js":"64","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart2.js":"65","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart.js":"66","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LinearProgress.js":"67","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormInput.js":"68","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormSelect.js":"69","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FilterList.js":"70","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile1.js":"71","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile2.js":"72","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfiles.js":"73","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\ProfileCard.js":"74","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile.js":"75","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularProgress.js":"76","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CustomButton.js":"77","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Button.js":"78","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Card.js":"79","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\AvailabilityCard.js":"80","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\NoData.js":"81","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderProfile.js":"82","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Header.js":"83","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderProfile.js":"84","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersProfile.js":"85","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Headers.js":"86","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalDashboardChart.js":"87","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersContents.js":"88","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderContents.js":"89","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderContent.js":"90","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTable.js":"91","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashCharts.js":"92","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashboardChart.js":"93","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\AvailabilityTable.js":"94","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\mockData.js":"95","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helperFunctions\\breadcrumb.js":"96","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Subscription.js":"97","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewReferral.js":"98","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Payout.js":"99","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Financetable.js":"100","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Finance.js":"101","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Email.js":"102","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewMessage.js":"103","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Messages.js":"104","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CreateMessage.js":"105","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Appointments.js":"106","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpCaseNote.js":"107","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpPatients.js":"108","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SinglePatient.js":"109","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SingleHCP.js":"110","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Settings.js":"111","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Prescriptions.js":"112","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Patients.js":"113","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpEarnings.js":"114","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAvailability.js":"115","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HCPChat.js":"116","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAppointments.js":"117","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpProfile.js":"118","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Hcps.js":"119","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Medications.js":"120","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CaseNotes.js":"121","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\MedicalRecords.js":"122","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Consultations.js":"123","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientProfile.js":"124","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Chat.js":"125","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalDashboard.js":"126","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\PrivateRoute.js":"127","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequest.js":"128","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequestProfile.js":"129","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profiles.js":"130","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewResult.js":"131","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Setting.js":"132","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrder.js":"133","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Pending.js":"134","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingProfile.js":"135","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrder.js":"136","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboards.js":"137","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrderProfile.js":"138","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profile.js":"139","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrders.js":"140","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewCompleted.js":"141","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrders.js":"142","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ProcessingOrders.js":"143","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrder.js":"144","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboard.js":"145","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\index.js":"146","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\SubscriptionModal.js":"147","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\WaitingListTable.js":"148","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Copy.js":"149","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\bMI.js":"150","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useFormInput.js":"151","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\Success.js":"152","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\index.js":"153","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\auth.js":"154","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\tablesActions.js":"155","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useCopy.js":"156","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableData.js":"157","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ReferPatient.js":"158","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Management.js":"159","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Administrator.js":"160","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Error.js":"161","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PageNotFound.js":"162","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Login.js":"163","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\RoleModal.js":"164","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\debounce.js":"165","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CompoundSearch.js":"166","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Filter.js":"167","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PatientFilters.js":"168","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DoctorFilters.js":"169","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Buttons\\CloseBtn.js":"170","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\index.js":"171","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAppType.js":"172","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAlert.js":"173","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SubscriptionIncome.js":"174","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\index.js":"175","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\LoginForm.js":"176","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\Filters\\index.js":"177","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorPayout.js":"178","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorEarning.js":"179","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\CardItem.js":"180","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\ChervonDownIcon.js":"181","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\BellIcon.js":"182","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DoctorsIcon.js":"183","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DashboardIcon.js":"184","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PatientsIcon.js":"185","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\FinanceIcon.js":"186","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SettingsIcon.js":"187","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\RefferalsIcon.js":"188","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SubscriptionIcon.js":"189","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\LogoutIcon.js":"190","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\TableLayout.js":"191","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SearchIcon.js":"192","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Searchs.js":"193"},{"size":2433,"mtime":1659095183273,"results":"194","hashOfConfig":"195"},{"size":377,"mtime":1656592111518,"results":"196","hashOfConfig":"195"},{"size":165,"mtime":1656592111151,"results":"197","hashOfConfig":"195"},{"size":12061,"mtime":1663057448144,"results":"198","hashOfConfig":"195"},{"size":5201,"mtime":1656592111520,"results":"199","hashOfConfig":"195"},{"size":38,"mtime":1656592111527,"results":"200","hashOfConfig":"195"},{"size":3553,"mtime":1661339027074,"results":"201","hashOfConfig":"195"},{"size":3799,"mtime":1663136448239,"results":"202","hashOfConfig":"195"},{"size":6411,"mtime":1663136320381,"results":"203","hashOfConfig":"195"},{"size":2320,"mtime":1656592111490,"results":"204","hashOfConfig":"195"},{"size":2191,"mtime":1656592111489,"results":"205","hashOfConfig":"195"},{"size":11368,"mtime":1656592111365,"results":"206","hashOfConfig":"195"},{"size":479,"mtime":1656592111369,"results":"207","hashOfConfig":"195"},{"size":7386,"mtime":1663088071664,"results":"208","hashOfConfig":"195"},{"size":28949,"mtime":1660904365510,"results":"209","hashOfConfig":"195"},{"size":596,"mtime":1656592111525,"results":"210","hashOfConfig":"195"},{"size":1241,"mtime":1662876975116,"results":"211","hashOfConfig":"195"},{"size":1799,"mtime":1663088544202,"results":"212","hashOfConfig":"195"},{"size":278,"mtime":1656592111526,"results":"213","hashOfConfig":"195"},{"size":263,"mtime":1656592111367,"results":"214","hashOfConfig":"195"},{"size":296,"mtime":1656592111532,"results":"215","hashOfConfig":"195"},{"size":3030,"mtime":1656592111395,"results":"216","hashOfConfig":"195"},{"size":1470,"mtime":1663152467334,"results":"217","hashOfConfig":"195"},{"size":3275,"mtime":1661339347622,"results":"218","hashOfConfig":"195"},{"size":8384,"mtime":1661338848403,"results":"219","hashOfConfig":"195"},{"size":18337,"mtime":1661338823675,"results":"220","hashOfConfig":"195"},{"size":1123,"mtime":1663088140521,"results":"221","hashOfConfig":"195"},{"size":9947,"mtime":1663088994972,"results":"222","hashOfConfig":"195"},{"size":3529,"mtime":1663055504155,"results":"223","hashOfConfig":"195"},{"size":4512,"mtime":1659095183188,"results":"224","hashOfConfig":"195"},{"size":1505,"mtime":1659095183273,"results":"225","hashOfConfig":"195"},{"size":4570,"mtime":1656592111403,"results":"226","hashOfConfig":"195"},{"size":1942,"mtime":1656592111384,"results":"227","hashOfConfig":"195"},{"size":2013,"mtime":1662885864260,"results":"228","hashOfConfig":"195"},{"size":275,"mtime":1656592111530,"results":"229","hashOfConfig":"195"},{"size":7668,"mtime":1660281236033,"results":"230","hashOfConfig":"195"},{"size":4167,"mtime":1662881370118,"results":"231","hashOfConfig":"195"},{"size":806,"mtime":1656592111497,"results":"232","hashOfConfig":"195"},{"size":82,"mtime":1656592111509,"results":"233","hashOfConfig":"195"},{"size":683,"mtime":1656592111511,"results":"234","hashOfConfig":"195"},{"size":8917,"mtime":1663087093268,"results":"235","hashOfConfig":"195"},{"size":1663,"mtime":1656592111528,"results":"236","hashOfConfig":"195"},{"size":807,"mtime":1656592111531,"results":"237","hashOfConfig":"195"},{"size":513,"mtime":1656592111502,"results":"238","hashOfConfig":"195"},{"size":2130,"mtime":1660281236036,"results":"239","hashOfConfig":"195"},{"size":2040,"mtime":1656592111493,"results":"240","hashOfConfig":"195"},{"size":706,"mtime":1656592111524,"results":"241","hashOfConfig":"195"},{"size":1233,"mtime":1656592111499,"results":"242","hashOfConfig":"195"},{"size":2045,"mtime":1656592111501,"results":"243","hashOfConfig":"195"},{"size":951,"mtime":1656592111498,"results":"244","hashOfConfig":"195"},{"size":4077,"mtime":1659095183271,"results":"245","hashOfConfig":"195"},{"size":1914,"mtime":1656592111494,"results":"246","hashOfConfig":"195"},{"size":1476,"mtime":1656592111496,"results":"247","hashOfConfig":"195"},{"size":6451,"mtime":1662880744353,"results":"248","hashOfConfig":"195"},{"size":2262,"mtime":1656592111492,"results":"249","hashOfConfig":"195"},{"size":240,"mtime":1656592111310,"results":"250","hashOfConfig":"195"},{"size":3423,"mtime":1656592111317,"results":"251","hashOfConfig":"195"},{"size":460,"mtime":1656592111349,"results":"252","hashOfConfig":"195"},{"size":1979,"mtime":1656592111347,"results":"253","hashOfConfig":"195"},{"size":1528,"mtime":1663082736951,"results":"254","hashOfConfig":"195"},{"size":762,"mtime":1656592111344,"results":"255","hashOfConfig":"195"},{"size":2431,"mtime":1660158341758,"results":"256","hashOfConfig":"195"},{"size":536,"mtime":1660281235958,"results":"257","hashOfConfig":"195"},{"size":663,"mtime":1656592111343,"results":"258","hashOfConfig":"195"},{"size":7044,"mtime":1662893384388,"results":"259","hashOfConfig":"195"},{"size":2786,"mtime":1656592111334,"results":"260","hashOfConfig":"195"},{"size":1099,"mtime":1656592111337,"results":"261","hashOfConfig":"195"},{"size":1502,"mtime":1656592111331,"results":"262","hashOfConfig":"195"},{"size":1442,"mtime":1660281235953,"results":"263","hashOfConfig":"195"},{"size":1470,"mtime":1656592111330,"results":"264","hashOfConfig":"195"},{"size":7094,"mtime":1659095183094,"results":"265","hashOfConfig":"195"},{"size":6574,"mtime":1656926098107,"results":"266","hashOfConfig":"195"},{"size":7498,"mtime":1661337656902,"results":"267","hashOfConfig":"195"},{"size":2138,"mtime":1656592111345,"results":"268","hashOfConfig":"195"},{"size":4521,"mtime":1660281235951,"results":"269","hashOfConfig":"195"},{"size":1633,"mtime":1656592111319,"results":"270","hashOfConfig":"195"},{"size":2525,"mtime":1656592111320,"results":"271","hashOfConfig":"195"},{"size":1305,"mtime":1656592111314,"results":"272","hashOfConfig":"195"},{"size":1148,"mtime":1656592111315,"results":"273","hashOfConfig":"195"},{"size":2533,"mtime":1656592111312,"results":"274","hashOfConfig":"195"},{"size":978,"mtime":1663152622446,"results":"275","hashOfConfig":"195"},{"size":3876,"mtime":1656592111393,"results":"276","hashOfConfig":"195"},{"size":2292,"mtime":1663135335322,"results":"277","hashOfConfig":"195"},{"size":10253,"mtime":1663140745993,"results":"278","hashOfConfig":"195"},{"size":3720,"mtime":1656592111390,"results":"279","hashOfConfig":"195"},{"size":1971,"mtime":1656592111388,"results":"280","hashOfConfig":"195"},{"size":17240,"mtime":1663134554138,"results":"281","hashOfConfig":"195"},{"size":10265,"mtime":1656592111389,"results":"282","hashOfConfig":"195"},{"size":8504,"mtime":1663140906791,"results":"283","hashOfConfig":"195"},{"size":12942,"mtime":1656592111392,"results":"284","hashOfConfig":"195"},{"size":5051,"mtime":1660281235979,"results":"285","hashOfConfig":"195"},{"size":11988,"mtime":1656592111378,"results":"286","hashOfConfig":"195"},{"size":12741,"mtime":1656592111379,"results":"287","hashOfConfig":"195"},{"size":12969,"mtime":1663142457760,"results":"288","hashOfConfig":"195"},{"size":6242,"mtime":1663059767566,"results":"289","hashOfConfig":"195"},{"size":772,"mtime":1656592111503,"results":"290","hashOfConfig":"195"},{"size":13773,"mtime":1663088923671,"results":"291","hashOfConfig":"195"},{"size":7601,"mtime":1661338881794,"results":"292","hashOfConfig":"195"},{"size":10005,"mtime":1661338896949,"results":"293","hashOfConfig":"195"},{"size":9982,"mtime":1663083386707,"results":"294","hashOfConfig":"195"},{"size":10379,"mtime":1660905070030,"results":"295","hashOfConfig":"195"},{"size":12498,"mtime":1656592111428,"results":"296","hashOfConfig":"195"},{"size":2594,"mtime":1656592111481,"results":"297","hashOfConfig":"195"},{"size":9477,"mtime":1661338820444,"results":"298","hashOfConfig":"195"},{"size":8740,"mtime":1661339774128,"results":"299","hashOfConfig":"195"},{"size":1963,"mtime":1656592111413,"results":"300","hashOfConfig":"195"},{"size":19365,"mtime":1661339789613,"results":"301","hashOfConfig":"195"},{"size":6621,"mtime":1663087409410,"results":"302","hashOfConfig":"195"},{"size":5488,"mtime":1661337808579,"results":"303","hashOfConfig":"195"},{"size":7023,"mtime":1663142562863,"results":"304","hashOfConfig":"195"},{"size":1107,"mtime":1656592111474,"results":"305","hashOfConfig":"195"},{"size":8078,"mtime":1661338836567,"results":"306","hashOfConfig":"195"},{"size":13813,"mtime":1663088581463,"results":"307","hashOfConfig":"195"},{"size":9954,"mtime":1660281235996,"results":"308","hashOfConfig":"195"},{"size":15650,"mtime":1663142900657,"results":"309","hashOfConfig":"195"},{"size":7862,"mtime":1656592111433,"results":"310","hashOfConfig":"195"},{"size":12662,"mtime":1661338863743,"results":"311","hashOfConfig":"195"},{"size":7641,"mtime":1656592111440,"results":"312","hashOfConfig":"195"},{"size":24067,"mtime":1663083121436,"results":"313","hashOfConfig":"195"},{"size":6512,"mtime":1661338812656,"results":"314","hashOfConfig":"195"},{"size":22171,"mtime":1661337203667,"results":"315","hashOfConfig":"195"},{"size":4294,"mtime":1656592111449,"results":"316","hashOfConfig":"195"},{"size":8731,"mtime":1661338872257,"results":"317","hashOfConfig":"195"},{"size":4553,"mtime":1661339361189,"results":"318","hashOfConfig":"195"},{"size":7906,"mtime":1659095183173,"results":"319","hashOfConfig":"195"},{"size":804,"mtime":1662887393343,"results":"320","hashOfConfig":"195"},{"size":626,"mtime":1656592111490,"results":"321","hashOfConfig":"195"},{"size":14971,"mtime":1661338860481,"results":"322","hashOfConfig":"195"},{"size":21299,"mtime":1659095183235,"results":"323","hashOfConfig":"195"},{"size":4363,"mtime":1659095183220,"results":"324","hashOfConfig":"195"},{"size":13050,"mtime":1659095183253,"results":"325","hashOfConfig":"195"},{"size":1105,"mtime":1656592111473,"results":"326","hashOfConfig":"195"},{"size":15131,"mtime":1659095183173,"results":"327","hashOfConfig":"195"},{"size":14244,"mtime":1661338826017,"results":"328","hashOfConfig":"195"},{"size":18697,"mtime":1659095183220,"results":"329","hashOfConfig":"195"},{"size":12887,"mtime":1661337156943,"results":"330","hashOfConfig":"195"},{"size":275,"mtime":1656592111425,"results":"331","hashOfConfig":"195"},{"size":14353,"mtime":1659095183204,"results":"332","hashOfConfig":"195"},{"size":4618,"mtime":1659095183220,"results":"333","hashOfConfig":"195"},{"size":13281,"mtime":1659095183157,"results":"334","hashOfConfig":"195"},{"size":7747,"mtime":1659095183239,"results":"335","hashOfConfig":"195"},{"size":14984,"mtime":1659095183173,"results":"336","hashOfConfig":"195"},{"size":19124,"mtime":1661338838610,"results":"337","hashOfConfig":"195"},{"size":15781,"mtime":1661338828930,"results":"338","hashOfConfig":"195"},{"size":275,"mtime":1656592111425,"results":"339","hashOfConfig":"195"},{"size":131,"mtime":1656592111522,"results":"340","hashOfConfig":"195"},{"size":6155,"mtime":1659095183157,"results":"341","hashOfConfig":"195"},{"size":5232,"mtime":1656592111399,"results":"342","hashOfConfig":"195"},{"size":616,"mtime":1659095183079,"results":"343","hashOfConfig":"195"},{"size":163,"mtime":1656592111353,"results":"344","hashOfConfig":"195"},{"size":306,"mtime":1656592111372,"results":"345","hashOfConfig":"195"},{"size":1894,"mtime":1656592111408,"results":"346","hashOfConfig":"195"},{"size":173,"mtime":1656592111409,"results":"347","hashOfConfig":"195"},{"size":895,"mtime":1656592111521,"results":"348","hashOfConfig":"195"},{"size":536,"mtime":1656592111523,"results":"349","hashOfConfig":"195"},{"size":732,"mtime":1659095183142,"results":"350","hashOfConfig":"195"},{"size":7937,"mtime":1656592111357,"results":"351","hashOfConfig":"195"},{"size":4335,"mtime":1656592111406,"results":"352","hashOfConfig":"195"},{"size":13667,"mtime":1661339828885,"results":"353","hashOfConfig":"195"},{"size":15342,"mtime":1657697851744,"results":"354","hashOfConfig":"195"},{"size":1024,"mtime":1659095183173,"results":"355","hashOfConfig":"195"},{"size":1640,"mtime":1656592111454,"results":"356","hashOfConfig":"195"},{"size":3996,"mtime":1659095183188,"results":"357","hashOfConfig":"195"},{"size":3435,"mtime":1656592111407,"results":"358","hashOfConfig":"195"},{"size":314,"mtime":1659095183273,"results":"359","hashOfConfig":"195"},{"size":3093,"mtime":1663088565384,"results":"360","hashOfConfig":"195"},{"size":1122,"mtime":1659095183094,"results":"361","hashOfConfig":"195"},{"size":8542,"mtime":1663064379439,"results":"362","hashOfConfig":"195"},{"size":7811,"mtime":1663065409832,"results":"363","hashOfConfig":"195"},{"size":1287,"mtime":1659095183079,"results":"364","hashOfConfig":"195"},{"size":157,"mtime":1659095183126,"results":"365","hashOfConfig":"195"},{"size":434,"mtime":1659095183139,"results":"366","hashOfConfig":"195"},{"size":1010,"mtime":1660281235974,"results":"367","hashOfConfig":"195"},{"size":9458,"mtime":1663087938109,"results":"368","hashOfConfig":"195"},{"size":53,"mtime":1659095183263,"results":"369","hashOfConfig":"195"},{"size":6887,"mtime":1659330167913,"results":"370","hashOfConfig":"195"},{"size":644,"mtime":1656592111306,"results":"371","hashOfConfig":"195"},{"size":11285,"mtime":1661337365810,"results":"372","hashOfConfig":"195"},{"size":10888,"mtime":1661338936756,"results":"373","hashOfConfig":"195"},{"size":4091,"mtime":1661969190836,"results":"374","hashOfConfig":"195"},{"size":505,"mtime":1662880890555,"results":"375","hashOfConfig":"195"},{"size":906,"mtime":1661939670949,"results":"376","hashOfConfig":"195"},{"size":1177,"mtime":1662198259872,"results":"377","hashOfConfig":"195"},{"size":1392,"mtime":1662198259857,"results":"378","hashOfConfig":"195"},{"size":1496,"mtime":1662198259914,"results":"379","hashOfConfig":"195"},{"size":2025,"mtime":1662198259875,"results":"380","hashOfConfig":"195"},{"size":1705,"mtime":1662198259920,"results":"381","hashOfConfig":"195"},{"size":1439,"mtime":1662198259916,"results":"382","hashOfConfig":"195"},{"size":1169,"mtime":1662198259927,"results":"383","hashOfConfig":"195"},{"size":931,"mtime":1662198259902,"results":"384","hashOfConfig":"195"},{"size":972,"mtime":1663058588839,"results":"385","hashOfConfig":"195"},{"size":2072,"mtime":1661939670960,"results":"386","hashOfConfig":"195"},{"size":2971,"mtime":1663088467558,"results":"387","hashOfConfig":"195"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},"1gz4jv2",{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"390"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"390"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"390"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"390"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"692"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"692"},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"390"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"390"},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"390"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\index.js",[],["786","787"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\reportWebVitals.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\accessToken.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\App.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\muiTheme.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\SideNav.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Routes.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Private.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\Mutation.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useActions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\Hospital.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\useQuery.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\AppTypeContext.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\contexts\\appTypeReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\graphQL\\fragment.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\store.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Notifications.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EmptyTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfileHospital.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpConsultations.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientAppointment.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalSettings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ReferralTab.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\asideMenus.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\func.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\DeleteOrDisable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableToolbar.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTableHeader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\filterHelperFunctions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Time.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormikControl.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\isSelected.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\selectedRows.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableHeaders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\reducers\\tablesReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\mocks\\patterns.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Date.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-types\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\LoginInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Textarea.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Input.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\File.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\DateTimePicker.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\FormRadio.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Select.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\validation\\Checkbox.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Typography.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\TextError.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\SearchInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Search.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PreviousButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Modal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Loader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\NotistackAlert.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart2.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LineChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\LinearProgress.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FormSelect.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\FilterList.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile1.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile2.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfiles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\ProfileCard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DisplayProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CircularProgress.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CustomButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Button.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Card.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\AvailabilityCard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\NoData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Header.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderProfile.js",["788","789","790"],"import React, { useState, useEffect } from \"react\";\r\nimport Copy from \"components/Copy\";\r\n// import { ReactComponent as SearchIcon } from \"assets/images/search.svg\";\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  Grid,\r\n  InputBase,\r\n  Typography,\r\n  Badge,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n// import BellIcon from \"components/Icons/BellIcon\";\r\nimport { ReactComponent as SearchIcon } from \"assets/images/search.svg\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\n// import NotificationsActiveIcon from \"@mui/icons-material/NotificationsActive\";\r\nimport Notifications from \"components/layouts/Notifications\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getPartner, getNotifications } from \"components/graphQL/useQuery\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport BellIcon from \"components/Icons/BellIcon\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  role: {\r\n    fontSize: \"clamp(1rem, 1vw, 1.5rem)\",\r\n    color: theme.palette.common.lightGrey,\r\n  },\r\n\r\n  name: {\r\n    fontWeight: \"normal\",\r\n    fontSize: \"clamp(1.6rem, 2vw, 1.2rem)\",\r\n  },\r\n\r\n  notification: {\r\n    fontSize: \"clamp(2rem, 2vw, 1.2rem)\",\r\n  },\r\n  HeaderProfile: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  head: {\r\n    \"@media(max-width:600px)\": {\r\n      \"&.MuiGrid-root\": {\r\n        display: \"none\",\r\n      },\r\n    },\r\n  },\r\n  iconContainer: {\r\n    height: \"inherit\",\r\n    backgroundColor: \"#F8F8F8\",\r\n    borderRadius: \"100%\",\r\n    display: \"flex\",\r\n    width: \"4.8rem\",\r\n    padding: \"0 !important\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst HeaderProfile = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const { userDetail } = useActions();\r\n  const classes = useStyles();\r\n  function notificationsLabel(count) {\r\n    if (count === 0) {\r\n      return \"no notifications\";\r\n    }\r\n    if (count > 99) {\r\n      return \"more than 99 notifications\";\r\n    }\r\n    return `${count} notifications`;\r\n  }\r\n  const id = localStorage.getItem(\"AppId\");\r\n  const [num, setNum] = useState(null);\r\n  const [pharmacyData, setPharmacyData] = useState([]);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [pharmacy, { data }] = useLazyQuery(getPartner, {\r\n    variables: { id },\r\n  });\r\n  const [notify, { data: notData }] = useLazyQuery(getNotifications, {\r\n    variables: { user: id },\r\n  });\r\n  useEffect(() => {\r\n    setNum(notifications && notifications?.length);\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  useEffect(() => {\r\n    (async () => {\r\n      setTimeout(notify, 300);\r\n    })();\r\n    if (notData) {\r\n      setNotifications(notData.getNotifications.data);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [notData]);\r\n  const handleNotification = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setNum(0);\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      setTimeout(pharmacy, 300);\r\n    })();\r\n    if (data) {\r\n      setPharmacyData(data?.getPartner);\r\n      userDetail({\r\n        data: data?.getPartner.category,\r\n      });\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [pharmacy, data]);\r\n  const returnString = (data) => {\r\n    let string = data?.split(\"/\");\r\n    if (string) return string[string?.length - 1];\r\n    return null;\r\n  };\r\n  // return (\r\n  //   <header className={classes.HeaderProfile}>\r\n  //     <Grid\r\n  //       container\r\n  //       alignItems=\"center\"\r\n  //       gap=\"1rem\"\r\n  //       justifyContent=\"space-between\"\r\n  //       flexWrap=\"nowrap\"\r\n  //       className={classes.head}\r\n  //       spacing={1}\r\n  //       sx={{ height: \"4.8rem\" }}\r\n  //     >\r\n  //       <Grid\r\n  //         item\r\n  //         className={classes.grid}\r\n  //         sx={{\r\n  //           height: \"inherit\",\r\n  //           width: \"40rem\",\r\n  //           background: \"#F8F8F8\",\r\n  //           borderRadius: \"4rem\",\r\n  //           display: \"flex\",\r\n  //           alignItems: \"center\",\r\n  //           padding: \"1.4rem 1.6rem\",\r\n  //           paddingTop: 0,\r\n  //         }}\r\n  //       >\r\n  //         <IconButton\r\n  //           type=\"button\"\r\n  //           sx={{ color: \"#F8F8F8\" }}\r\n  //           aria-label=\"search\"\r\n  //         >\r\n  //           <SearchIcon />\r\n  //         </IconButton>\r\n  //         <InputBase\r\n  //           sx={{ flex: 1, p: 0 }}\r\n  //           size=\"large\"\r\n  //           placeholder=\"Search partners, patients, enrollees… \"\r\n  //         />\r\n  //       </Grid>\r\n  //       <Grid className={classes.iconContainer} item>\r\n  //         <IconButton\r\n  //           aria-label={notificationsLabel(num)}\r\n  //           onClick={(event) => handleNotification(event)}\r\n  //           sx={{\r\n  //             borderRadius: \"100%\",\r\n  //             backgroundColor: \"#F8F8F8\",\r\n  //             padding: \"1rem\",\r\n  //           }}\r\n  //         >\r\n  //           <Badge>\r\n  //             <BellIcon sx={{ color: \"transparent\" }} />\r\n  //           </Badge>\r\n  //         </IconButton>\r\n  //         <Notifications\r\n  //           anchorEl={anchorEl}\r\n  //           Notifications={notifications}\r\n  //           setNotifications={setNotifications}\r\n  //           setAnchorEl={setAnchorEl}\r\n  //         />\r\n  //       </Grid>\r\n  //       <Grid item className={classes.iconContainer}>\r\n  //         <Avatar\r\n  //           alt=\"Display avatar\"\r\n  //           src={displayPhoto}\r\n  //           sx={{ height: \"100%\", width: \"100%\" }}\r\n  //         />\r\n  //       </Grid>\r\n  //     </Grid>\r\n  //   </header>\r\n  // );\r\n  return (\r\n    <header className={classes.HeaderProfile}>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        gap=\"2rem\"\r\n        justifyContent=\"space-between\"\r\n        flexWrap=\"nowrap\"\r\n        className={classes.head}\r\n        spacing={1}\r\n        sx={{ height: \"4.8rem\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          className={classes.grid}\r\n          sx={{\r\n            height: \"inherit\",\r\n            width: \"40rem\",\r\n            background: \"#F8F8F8\",\r\n            borderRadius: \"4rem\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            padding: \"1.4rem 1.6rem\",\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <IconButton\r\n            type=\"button\"\r\n            sx={{ color: \"#F8F8F8\" }}\r\n            aria-label=\"search\"\r\n          >\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <InputBase\r\n            sx={{ flex: 1, p: 0 }}\r\n            size=\"large\"\r\n            placeholder=\"Search , Patients, Doctors... \"\r\n          />\r\n        </Grid>\r\n        <Grid className={classes.iconContainer} item>\r\n          <IconButton\r\n            aria-label={notificationsLabel(num)}\r\n            onClick={(event) => handleNotification(event)}\r\n            sx={{\r\n              borderRadius: \"100%\",\r\n              backgroundColor: \"#F8F8F8\",\r\n              padding: \"1rem\",\r\n            }}\r\n          >\r\n            <Badge>\r\n              <BellIcon sx={{ color: \"transparent\" }} />\r\n            </Badge>\r\n          </IconButton>\r\n          <Notifications\r\n            anchorEl={anchorEl}\r\n            Notifications={notifications}\r\n            setNotifications={setNotifications}\r\n            setAnchorEl={setAnchorEl}\r\n          />\r\n        </Grid>\r\n        <Grid item className={classes.iconContainer}>\r\n          <Avatar\r\n            alt=\"Display avatar\"\r\n            src={\r\n              pharmacyData?.logoImageUrl\r\n                ? pharmacyData?.logoImageUrl\r\n                : displayPhoto\r\n            }\r\n            sx={{ height: \"100%\", width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </header>\r\n  );\r\n  // return (\r\n  //   <header className={classes.HeaderProfile}>\r\n  //     <Grid\r\n  //       container\r\n  //       alignItems=\"center\"\r\n  //       gap=\"3px\"\r\n  //       justifyContent=\"space-between\"\r\n  //       flexWrap=\"nowrap\"\r\n  //     >\r\n  //       <Grid\r\n  //         className={classes.head}\r\n  //         item\r\n  //         style={{ marginRight: \"3em\", marginLeft: \"1em\" }}\r\n  //       >\r\n  //         <Grid container direction=\"column\" justifyContent=\"center\">\r\n  //           {/* <Grid item>\r\n  //             <Typography variant=\"body1\" className={classes.name}>\r\n  //               {pharmacyData?.name}\r\n  //             </Typography>\r\n  //           </Grid> */}\r\n  //           {/*<Grid item>\r\n  //         <Typography\r\n  //               variant=\"body2\"\r\n  //               className={classes.role}\r\n  //               style={{ fontWeight: 300 }}\r\n  //             >\r\n  //               {pharmacyData?.profileUrl !== null &&\r\n  //               pharmacyData?.category === \"hospital\" ? (\r\n  //                 <Grid item container alignItems=\"center\">\r\n  //                   {returnString(pharmacyData?.profileUrl)}\r\n  //                   <Copy text={pharmacyData?.profileUrl} name=\"Profile URL\" />\r\n  //                 </Grid>\r\n  //               ) : (\r\n  //                 pharmacyData?.category\r\n  //               )}\r\n  //             </Typography>\r\n  //           </Grid> */}\r\n  //         </Grid>\r\n  //       </Grid>\r\n  //       <Grid className={classes.iconContainer} item>\r\n  //         {/* <IconButton\r\n  //           aria-label={notificationsLabel(num)}\r\n  //           onClick={(event) => handleNotification(event)}\r\n  //           sx={{\r\n  //             borderRadius: \"100%\",\r\n  //             backgroundColor: \"#F8F8F8\",\r\n  //             padding: \"1rem\",\r\n  //           }}\r\n  //         >\r\n  //           <Badge>\r\n  //             <BellIcon sx={{ color: \"transparent\" }} />\r\n  //           </Badge>\r\n  //         </IconButton> */}\r\n  //         <Grid item>\r\n  //           <Avatar\r\n  //             alt={pharmacyData?.name}\r\n  //             src={\r\n  //               pharmacyData?.logoImageUrl\r\n  //                 ? pharmacyData?.logoImageUrl\r\n  //                 : displayPhoto\r\n  //             }\r\n  //           />\r\n  //         </Grid>\r\n  //         <Notifications\r\n  //           anchorEl={anchorEl}\r\n  //           Notifications={notifications}\r\n  //           setNotifications={setNotifications}\r\n  //           setAnchorEl={setAnchorEl}\r\n  //         />\r\n  //       </Grid>\r\n  //     </Grid>\r\n  //   </header>\r\n  // );\r\n};\r\n\r\nexport default HeaderProfile;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\Headers.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalDashboardChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeadersContents.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HeaderContents.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\HospitalHeaderContent.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\EnhancedTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashCharts.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\DashboardChart.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\AvailabilityTable.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\mockData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helperFunctions\\breadcrumb.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Subscription.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewReferral.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Payout.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Financetable.js",["791","792","793"],"import React, { useState, useEffect } from \"react\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TableCell,\r\n  Button,\r\n  TableRow,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport TrendingDownIcon from \"@mui/icons-material/TrendingDown\";\r\nimport {\r\n  timeMoment,\r\n  dateMoment,\r\n  formatNumber,\r\n} from \"components/Utilities/Time\";\r\nimport { EnhancedTable, NoData, EmptyTable } from \"components/layouts\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { payoutHeaderss1 } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { Loader } from \"components/Utilities\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEarningStats } from \"components/graphQL/useQuery\";\r\nimport { defaultPageInfo } from \"helpers/mockData\";\r\nimport { useAlert } from \"components/hooks\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  buttons: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  iconWrapper: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: \"50%\",\r\n    display: \"grid\",\r\n    placeContent: \"center\",\r\n    background: theme.palette.common.lightGreen,\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Financetable = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { displayMessage } = useAlert();\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n  const [profiles, setProfiles] = useState(\"\");\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n  const [fetchDoctors, { error, loading }] = useLazyQuery(getEarningStats);\r\n\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const { data } = await fetchDoctors({\r\n          variables: {\r\n            first: pageInfo.limit,\r\n            providerId: partnerProviderId,\r\n          },\r\n        });\r\n        if (data) {\r\n          setPageInfo(data.getEarningStats.earningData.PageInfo || []);\r\n          setProfiles(data.getEarningStats.earningData.data || defaultPageInfo);\r\n        }\r\n        // ...\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    try {\r\n      setPageInfo(response.getEarningStats.earningData.PageInfo || []);\r\n      setProfiles(response.getEarningStats.earningData.data || defaultPageInfo);\r\n    } catch (error) {\r\n      console.error(error);\r\n      displayMessage(\"error\", error);\r\n    }\r\n  };\r\n  const history = useHistory();\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} height=\"100%\">\r\n      <>\r\n        <Grid item container gap={1} alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography noWrap variant=\"h1\" component=\"div\" color=\"#2D2F39\">\r\n              Earnings table\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item className={classes.iconWrapper}>\r\n            <TrendingDownIcon color=\"success\" className={classes.cardIcon} />\r\n          </Grid>\r\n        </Grid>\r\n        {profiles.length > 0 ? (\r\n          <Grid item container>\r\n            <EnhancedTable\r\n              headCells={payoutHeaderss1}\r\n              rows={profiles}\r\n              paginationLabel=\"finance per page\"\r\n              hasCheckbox={true}\r\n              dataPageInfo={pageInfo}\r\n              changeLimit={async (e) => {\r\n                const res = await changeHospitalTableLimit(fetchDoctors, {\r\n                  first: e,\r\n                  providerId: partnerProviderId,\r\n                });\r\n\r\n                await setTableData(res.data, \"Failed to change table limit\");\r\n              }}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchDoctors,\r\n                  page,\r\n                  pageInfo,\r\n                  partnerProviderId\r\n                );\r\n                await setTableData(res.data, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const { createdAt, providerId, balance, doctorData } = row;\r\n                const { firstName, lastName } = doctorData[0] || {};\r\n                const isItemSelected = isSelected(row._id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row._id}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    selected={isItemSelected}\r\n                    onClick={() =>\r\n                      history.push(`hcps/${doctorData[0]._id}/consultations`)\r\n                    }\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(\r\n                            row.id,\r\n                            selectedRows,\r\n                            setSelectedRows\r\n                          )\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {formatNumber(balance.toFixed(2))}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {doctorData && doctorData[0] !== {} ? (\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <span style={{ fontSize: \"1.25rem\" }}>\r\n                            {doctorData &&\r\n                              `${firstName && firstName} ${\r\n                                lastName && lastName\r\n                              }`}\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        \"No name\"\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.black }}\r\n                    >\r\n                      {providerId}\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.black }}\r\n                    >\r\n                      {`${dateMoment(createdAt)} - ${timeMoment(createdAt)}`}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={payoutHeaderss1}\r\n            paginationLabel=\"Finance  per page\"\r\n          />\r\n        )}\r\n      </>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Financetable;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Finance.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Email.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewMessage.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Messages.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CreateMessage.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Appointments.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpCaseNote.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpPatients.js",["794","795","796"],"import React, { useState, useEffect } from \"react\";\r\nimport { Loader } from \"components/Utilities\";\r\nimport {\r\n  Grid,\r\n  TableRow,\r\n  Typography,\r\n  TableCell,\r\n  Card,\r\n  Button,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { NoData, EnhancedTable, EmptyTable } from \"components/layouts\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { hcpPatientsHeadCells } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { getDoctorPatients } from \"components/graphQL/useQuery\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"12rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst HcpPatients = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n\r\n  const { hcpId } = useParams();\r\n\r\n  const { setSelectedRows } = useActions();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n\r\n  const [fetchDoctorsPatients, { loading, error, data }] = useLazyQuery(\r\n    getDoctorPatients,\r\n    { notifyOnNetworkStatusChange: true }\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchDoctorsPatients({\r\n      variables: { id: hcpId },\r\n    });\r\n  }, [fetchDoctorsPatients, hcpId]);\r\n  const [profiles, setProfiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setProfiles(data.getDoctorPatients.data);\r\n      setPageInfo(data.getDoctorPatients.pageInfo);\r\n    }\r\n  }, [data]);\r\n  const history = useHistory();\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n      <Card\r\n        variant=\"outlined\"\r\n        sx={{\r\n          width: \"100%\",\r\n          borderRadius: \"1.5rem\",\r\n          borderColor: \"transparent\",\r\n          p: 2,\r\n          mt: 2,\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <Grid item sx={{ mb: 2 }}>\r\n          <Typography variant=\"h2\">Doctor Patients</Typography>\r\n        </Grid>\r\n        {profiles.length > 0 ? (\r\n          <Grid item container direction=\"column\" height=\"100%\">\r\n            <EnhancedTable\r\n              headCells={hcpPatientsHeadCells}\r\n              rows={profiles}\r\n              paginationLabel=\"List Per Page\"\r\n              hasCheckbox={true}\r\n              changeLimit={(e) =>\r\n                changeHospitalTableLimit(fetchDoctorsPatients, {\r\n                  first: e,\r\n                  id: hcpId,\r\n                })\r\n              }\r\n              dataPageInfo={pageInfo}\r\n              handlePagination={(page) =>\r\n                handleHospitalPageChange(fetchDoctorsPatients, page, pageInfo, {\r\n                  id: hcpId,\r\n                })\r\n              }\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const { _id, doctorData, patientData } = row;\r\n                const isItemSelected = isSelected(_id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => history.push(`/hcps/${hcpId}/profile`)}\r\n                    key={_id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(_id, selectedRows, setSelectedRows)\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.grey }}\r\n                    >\r\n                      {doctorData\r\n                        ? doctorData?.dociId?.split(\"-\")[1]\r\n                        : \"No Doctor ID\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <div\r\n                        style={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          textAlign: \"left\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: \"1.25rem\" }}>\r\n                          {patientData?.firstName\r\n                            ? `${patientData?.firstName} ${patientData?.lastName}`\r\n                            : \"No Patient Name\"}\r\n                          {row.lastName}\r\n                        </span>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={hcpPatientsHeadCells}\r\n            paginationLabel=\"List  per page\"\r\n          />\r\n        )}\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HcpPatients;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SinglePatient.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SingleHCP.js",["797"],"import React, { useState, createElement, useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { NoData } from \"components/layouts\";\r\nimport { doctor, getDoctorsProfile } from \"components/graphQL/useQuery\";\r\nimport { CustomButton, Loader, Card } from \"components/Utilities\";\r\nimport PersonRemoveIcon from \"@mui/icons-material/PersonRemove\";\r\nimport PaymentsIcon from \"@mui/icons-material/Payments\";\r\nimport DisablePatient from \"components/modals/DeleteOrDisable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { ReactComponent as ConsultationIcon } from \"assets/images/consultation.svg\";\r\nimport { ReactComponent as UserIcon } from \"assets/images/user.svg\";\r\nimport { ReactComponent as CalendarIcon } from \"assets/images/calendar.svg\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { deleteDoctor } from \"components/graphQL/Mutation\";\r\n//\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridContainer: {\r\n    paddingBottom: \"10rem\",\r\n  },\r\n\r\n  gridsWrapper: {\r\n    \"@media(max-width:600px)\": {\r\n      \"&.MuiGrid-root\": {\r\n        flexDirection: \"column\",\r\n        rowGap: \"1.5rem\",\r\n        alignItems: \"center\",\r\n        \"& .detailsContainer\": {\r\n          justifyContent: \"space-around\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  parentGrid: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  icon: {\r\n    \"&.css-1o5jd4y-MuiSvgIcon-root\": {\r\n      fontSize: \"4rem\",\r\n    },\r\n  },\r\n  \"@media(max-width:600px)\": {\r\n    \"&.MuiGrid-root\": {\r\n      flexDirection: \"column\",\r\n      rowGap: \"1.5rem\",\r\n    },\r\n  },\r\n  container: {\r\n    \"&.MuiGrid-root\": {\r\n      paddingTop: \"5rem\",\r\n      flexWrap: \"wrap\",\r\n      \"@media(max-width:600px)\": {\r\n        \"&\": {\r\n          padding: 0,\r\n          paddingTop: \"1rem\",\r\n          // flexDirection: \"column\",\r\n          rowGap: \"1.5rem\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\nconst SingleHCP = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { hcpId } = useParams();\r\n  const history = useHistory();\r\n  const [disableUser] = useMutation(deleteDoctor);\r\n  const [doctorProfile, setDoctorProfile] = useState(\"\");\r\n  const [openDisableDoctor, setOpenDisableDoctor] = useState(false);\r\n  const { loading, error, data } = useQuery(doctor, {\r\n    variables: {\r\n      id: hcpId,\r\n    },\r\n  });\r\n  const onConfirm = async () => {\r\n    try {\r\n      await disableUser({\r\n        variables: { id: hcpId },\r\n        refetchQueries: [{ query: getDoctorsProfile }],\r\n      });\r\n      history.push(\"/hcps\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (data) {\r\n      setDoctorProfile(data.doctorProfile);\r\n    }\r\n  }, [data, hcpId]);\r\n\r\n  const cards2 = [\r\n    {\r\n      id: 1,\r\n      title: \"Doctor Profile\",\r\n      background: theme.palette.common.lightRed,\r\n      path: \"profile\",\r\n      icon: UserIcon,\r\n      fill: theme.palette.common.red,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Availability\",\r\n      background: theme.palette.common.lightGreen,\r\n      path: \"availability\",\r\n      icon: ConsultationIcon,\r\n      fill: theme.palette.common.green,\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Consultations\",\r\n      background: theme.palette.common.lightRed,\r\n      path: \"consultations\",\r\n      icon: ConsultationIcon,\r\n      fill: theme.palette.common.red,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Earnings\",\r\n      background: theme.palette.common.lightGreen,\r\n      path: \"earnings\" /* \"earnings\", */,\r\n      icon: PaymentsIcon,\r\n      fill: theme.palette.common.green,\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Patients\",\r\n      background: theme.palette.common.lightRed,\r\n      path: \"doctor-patients\",\r\n      icon: UserIcon,\r\n      fill: theme.palette.common.red,\r\n    },\r\n    // {\r\n    //   id: 2,\r\n    //   title: \"Appointments\",\r\n    //   background: theme.palette.common.lightGreen,\r\n    //   path: \"appointments\",\r\n    //   icon: CalendarIcon,\r\n    //   fill: theme.palette.common.green,\r\n    // },\r\n  ];\r\n\r\n  const trasparentButton = {\r\n    background: \"transparent\",\r\n    hover: \"#fafafa\",\r\n    active: \"#f4f4f4\",\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        gap={2}\r\n        rowSpacing={2}\r\n        className={classes.gridContainer}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          p={2}\r\n          className={classes.gridsWrapper}\r\n        >\r\n          {/* Display photo and profile name grid */}\r\n          <Grid\r\n            item\r\n            alignItems=\"center\"\r\n            container\r\n            gap={2}\r\n            className=\"detailsContainer\"\r\n            sx={{ flex: 1 }}\r\n          >\r\n            <Typography variant=\"h2\">{`${doctorProfile.firstName} ${doctorProfile.lastName}`}</Typography>\r\n          </Grid>\r\n          {/* Action Buttons grid */}\r\n\r\n          <Grid item>\r\n            <CustomButton\r\n              endIcon={<PersonRemoveIcon />}\r\n              title=\"Disable Doctor\"\r\n              onClick={() => setOpenDisableDoctor(true)}\r\n              type={trasparentButton}\r\n              textColor={theme.palette.common.red}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* BOTTOM CARDS SECTION */}\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            p={2}\r\n            flexWrap=\"wrap\"\r\n            // sx={{ background: \"yellow\" }}\r\n            columnSpacing={{ md: 6, sm: 4, xs: 4 }}\r\n            rowSpacing={{ md: 6, sm: 4, xs: 4 }}\r\n            // spacing={2}\r\n          >\r\n            {cards2.map((card) => (\r\n              <Grid\r\n                key={card.id}\r\n                item\r\n                xs={10}\r\n                sm={6}\r\n                md={4}\r\n                className={classes.parentGrid}\r\n                component={Link}\r\n                to={`/hcps/${hcpId}/${card.path}`}\r\n              >\r\n                <Card\r\n                  title={card.title}\r\n                  background={card.background}\r\n                  header=\"h4\"\r\n                >\r\n                  {createElement(card.icon, {\r\n                    fill: card.fill,\r\n                    color:\r\n                      card.id === 4 || card.id === 6 ? \"success\" : undefined,\r\n                    style: { fontSize: \"clamp(2.5rem, 3vw,4rem)\" },\r\n                  })}\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <DisablePatient\r\n        open={openDisableDoctor}\r\n        setOpen={setOpenDisableDoctor}\r\n        title=\"Delete Doctor\"\r\n        btnValue=\"delete\"\r\n        confirmationMsg=\"delete Doctor\"\r\n        onConfirm={onConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleHCP;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Settings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Prescriptions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Patients.js",["798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814"],"import React, { useState, useEffect } from \"react\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport TableLayout from \"components/layouts/TableLayout\";\r\nimport * as Yup from \"yup\";\r\nimport { NoData, EmptyTable } from \"components/layouts\";\r\nimport {\r\n  defaultPageInfo,\r\n  searchOptions,\r\n  patientSearchOptions,\r\n} from \"helpers/mockData\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Checkbox,\r\n  TableCell,\r\n  TableRow,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport {\r\n  Modals,\r\n  Loader,\r\n  CustomButton,\r\n  PatientFilters,\r\n  CompoundSearch,\r\n} from \"components/Utilities\";\r\nimport { EnhancedTable } from \"components/layouts\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { patientsHeadCells1 } from \"components/Utilities/tableHeaders\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport displayPhoto from \"assets/images/avatar.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n// import { getPatients } from \"components/graphaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjkkkkvkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo6666666666666666666666666666666666666666666666666666666666666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuukkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkQL/useQuery\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n  getSearchPlaceholder,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport {\r\n  getPatients,\r\n  getPatientsByPlan,\r\n  getPatientsByStatus,\r\n} from \"components/graphQL/useQuery\";\r\n\r\nconst genderType = [\r\n  { key: \"Male\", value: \"0\" },\r\n  { key: \"Female\", value: \"1\" },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchFilterContainer: {\r\n    \"&.MuiGrid-root\": {\r\n      justifyContent: \"space-between\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: \"#757886\",\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n      whiteSpace: \"nowrap\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n      textAlign: \"left\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem !important\",\r\n      height: \"2.7rem\",\r\n\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n  searchFilterBtn: {\r\n    \"&.MuiButton-root\": {\r\n      fontSize: \"1.5rem\",\r\n      textTransform: \"none\",\r\n      height: \"5rem\",\r\n      borderRadius: 10,\r\n      boxShadow: \"0px 0px 4px -1px rgba(71,64,71,0.63)\",\r\n      background: \"#2D2F39\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Patients = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [fetchPatient, { loading, refetch, error, variables }] =\r\n    useLazyQuery(getPatients);\r\n  const [\r\n    fetchPatientByStatus,\r\n    {\r\n      loading: byStatusLoading,\r\n      variables: byStatusVaribles,\r\n      refetch: byStatusRefetch,\r\n    },\r\n  ] = useLazyQuery(getPatientsByStatus);\r\n  const [\r\n    fetchPatientByPlan,\r\n    {\r\n      loading: byPlanLoading,\r\n      variables: byPlanVaribles,\r\n      refetch: byPlanRefetch,\r\n    },\r\n  ] = useLazyQuery(getPatientsByPlan);\r\n  const id = localStorage.getItem(\"partnerProviderId\");\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    bloodGroup: \"\",\r\n    phone: \"\",\r\n    gender: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string(\"Enter your hospital\").trim(),\r\n    bloodGroup: Yup.string(\"Enter your bloodGroup\").trim(),\r\n    gender: Yup.string(\"Select your gender\"),\r\n    phone: Yup.number(\"Enter your specialization\").typeError(\r\n      \"Enter a current Number\"\r\n    ),\r\n  });\r\n  const setTableData = async (response, errMsg) => {\r\n    response\r\n      .then(({ data }) => {\r\n        setPageInfo(data?.profiles?.pageInfo || []);\r\n        setProfiles(data?.profiles?.data || defaultPageInfo);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPatient({\r\n      variables: {\r\n        first: pageInfo.limit,\r\n      },\r\n    }).then(({ data }) => {\r\n      if (data) {\r\n        setPageInfo(data?.profiles?.pageInfo || []);\r\n        setProfiles(data?.profiles?.data || defaultPageInfo);\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchPatient({\r\n      variables: {\r\n        first: 10,\r\n        providerId: id,\r\n      },\r\n    });\r\n  }, [fetchPatient, id]);\r\n\r\n  const [profiles, setProfiles] = useState([]);\r\n  const onSubmit = async (values) => {\r\n    const { gender } = values;\r\n    await fetchPatient({\r\n      variables: {\r\n        gender,\r\n      },\r\n    });\r\n    handleDialogClose();\r\n  };\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n  const history = useHistory();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const handleDialogClose = () => setIsOpen(false);\r\n\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n    disabled: theme.palette.common.black,\r\n  };\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid item flex={1} container direction=\"column\" rowGap={2}>\r\n      <Grid\r\n        item\r\n        container\r\n        spacing={2}\r\n        className={classes.searchFilterContainer}\r\n      >\r\n        <Grid item container flexWrap=\"wrap\" spacing={4}></Grid>\r\n      </Grid>\r\n      <TableLayout\r\n        filters={\r\n          <PatientFilters\r\n            setProfiles={setProfiles}\r\n            setPageInfo={setPageInfo}\r\n            queryParams={{\r\n              patientsParams: { fetchPatient, loading, refetch, variables },\r\n              patientsByStatusParams: {\r\n                byStatusLoading,\r\n                byStatusVaribles,\r\n                byStatusRefetch,\r\n                fetchPatientByStatus,\r\n              },\r\n              patientsByPlanParams: {\r\n                byPlanLoading,\r\n                byPlanVaribles,\r\n                byPlanRefetch,\r\n                fetchPatientByPlan,\r\n              },\r\n            }}\r\n          />\r\n        }\r\n        search={\r\n          <CompoundSearch\r\n            queryParams={{\r\n              fetchData: fetchPatient,\r\n              variables,\r\n              loading,\r\n              newVariables: {},\r\n            }}\r\n            setPageInfo={(data) => setPageInfo(data?.profiles?.pageInfo || {})}\r\n            setProfiles={(data) => setProfiles(data?.profiles?.data || [])}\r\n            getSearchPlaceholder={(filterBy) => getSearchPlaceholder(filterBy)}\r\n            filterOptions={searchOptions}\r\n          />\r\n        }\r\n      >\r\n        {loading || byStatusLoading || byPlanLoading ? (\r\n          <Loader />\r\n        ) : // ) : networkStatus === NetworkStatus.refetch ? (\r\n        //   <Loader />\r\n        profiles.length > 0 ? (\r\n          /* ================= PATIENTS TABLE ================= */\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            overflow=\"hidden\"\r\n            maxWidth={{ md: \"100%\", sm: \"100%\", xs: \"100%\" }}\r\n          >\r\n            <EnhancedTable\r\n              headCells={patientsHeadCells1}\r\n              rows={profiles}\r\n              paginationLabel=\"Patients per page\"\r\n              hasCheckbox={true}\r\n              changeLimit={async (e) => {\r\n                const res = changeHospitalTableLimit(fetchPatient, {\r\n                  first: e,\r\n                  providerId: id,\r\n                });\r\n                await setTableData(res, \"Failed to change table limit.\");\r\n              }}\r\n              dataPageInfo={pageInfo}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchPatient,\r\n                  page,\r\n                  pageInfo,\r\n                  id\r\n                );\r\n                await setTableData(res, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                const {\r\n                  dociId,\r\n                  firstName,\r\n                  lastName,\r\n                  plan,\r\n                  provider,\r\n                  //image,\r\n                  consultations,\r\n                  _id,\r\n                  status,\r\n                } = row;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    // aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={_id}\r\n                    // selected={isItemSelected}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => history.push(`patients/${_id}`)}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(_id, selectedRows, setSelectedRows)\r\n                        }\r\n                        color=\"primary\"\r\n                        // checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{\r\n                        color: theme.palette.common.grey,\r\n                        textAlign: \"left\",\r\n                      }}\r\n                    >\r\n                      {dociId?.split(\"-\")[1]}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <div\r\n                        style={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <span\r\n                          test=\"test-value\"\r\n                          style={{ fontSize: \"1.25rem\" }}\r\n                        >{`${firstName} ${lastName}`}</span>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {plan ? plan : \"No Plan\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      data-testid=\"test-value\"\r\n                    >\r\n                      {provider ? provider : \"No Provider\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {consultations ? consultations : 0}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <Chip\r\n                        label={status ? status : \"No Status\"}\r\n                        className={classes.badge}\r\n                        style={{\r\n                          background:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.lightGreen\r\n                              : theme.palette.common.lightRed,\r\n                          color:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.green\r\n                              : theme.palette.common.red,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={patientsHeadCells1}\r\n            paginationLabel=\"Patients per page\"\r\n          />\r\n        )}\r\n      </TableLayout>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpEarnings.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAvailability.js",["815","816","817","818","819","820","821"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Grid, Typography, Card } from \"@mui/material\";\r\nimport { AvailabilityCard, Loader } from \"components/Utilities\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { EmptyTable } from \"components/layouts\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { Modals } from \"components/Utilities\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  getSearchPlaceholder,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getAvailability } from \"components/graphQL/useQuery\";\r\nimport { TableRow, TableCell, Chip, Checkbox } from \"@mui/material\";\r\nimport { NoData } from \"components/layouts\";\r\nimport { CustomSelect } from \"components/validation/Select\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { availabilityHeadCells10 } from \"components/Utilities/tableHeaders\";\r\nimport {\r\n  getDoctorAvailabilityForDate,\r\n  getAvailabilities,\r\n} from \"components/graphQL/useQuery\";\r\nimport { hours, days, today } from \"components/Utilities/Time\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { defaultPageInfo } from \"helpers/mockData\";\r\nconst HcpAvailability = () => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    tableCell: {\r\n      \"&.MuiTableCell-root\": {\r\n        fontSize: \"1.25rem\",\r\n      },\r\n    },\r\n\r\n    button: {\r\n      \"&.MuiButton-root\": {\r\n        background: \"#fff\",\r\n        color: theme.palette.common.grey,\r\n        textTransform: \"none\",\r\n        borderRadius: \"2rem\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: \"1rem\",\r\n        maxWidth: \"10rem\",\r\n        whiteSpace: \"nowrap\",\r\n\r\n        \"&:hover\": {\r\n          background: \"#fcfcfc\",\r\n        },\r\n\r\n        \"&:active\": {\r\n          background: \"#fafafa\",\r\n        },\r\n\r\n        \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n          fontSize: \"1.2rem\",\r\n        },\r\n\r\n        \"& .MuiButton-endIcon\": {\r\n          marginLeft: \".3rem\",\r\n          marginTop: \"-.2rem\",\r\n        },\r\n      },\r\n    },\r\n\r\n    badge: {\r\n      \"&.MuiChip-root\": {\r\n        fontSize: \"1.2rem !important\",\r\n        height: \"2.7rem\",\r\n        borderRadius: \"1.3rem\",\r\n      },\r\n    },\r\n  }));\r\n  const [availabiltyArray, setAvailabiltyArray] = useState([]);\r\n  const { hcpId } = useParams();\r\n  const id = localStorage.getItem(\"partnerProviderId\");\r\n  const theme = useTheme();\r\n  // const { loading, data, error } = useQuery(getAvailability, {\r\n  //   variables: {\r\n  //     id: hcpId,\r\n  //   },\r\n  // });\r\n  const classes = useStyles();\r\n  const [availabilities, setAvailabilities] = useState([]);\r\n  //  const { hcpId } = useParams();\r\n  const { setSelectedRows } = useActions();\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n  const [fetchDay, { data: dt, loading: load2 }] = useLazyQuery(\r\n    getDoctorAvailabilityForDate\r\n  );\r\n  const [fetchAvailabilities, { error, loading }] =\r\n    useLazyQuery(getAvailabilities);\r\n  // useEffect(() => {\r\n  //   if (data) {\r\n  //     const filteredAvailbility = (\r\n  //       data?.getAvailabilities?.availability || []\r\n  //     ).filter((availability) => availability?.times?.length > 0);\r\n  //     setAvailabiltyArray(filteredAvailbility);\r\n  //   }\r\n  // }, [data]);\r\n  useEffect(() => {\r\n    fetchAvailabilities({\r\n      variables: {\r\n        first: 5,\r\n        providerId: id,\r\n        day: select,\r\n        doctor: hcpId,\r\n      },\r\n    }).then(({ data }) => {\r\n      if (data) {\r\n        setPageInfo(data?.getAvailabilities?.pageInfo || []);\r\n        setAvailabilities(\r\n          data?.getAvailabilities?.availability || defaultPageInfo\r\n        );\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const [select, setSelect] = useState(today());\r\n  const [modal, setModal] = useState(false);\r\n  const [avail, setAvail] = useState(\"\");\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    if (response?.data) {\r\n      setPageInfo(response?.data?.getAvailabilities?.pageInfo || []);\r\n      setAvailabilities(\r\n        response?.data?.getAvailabilities?.availability || defaultPageInfo\r\n      );\r\n    } else {\r\n      console.error(errMsg);\r\n    }\r\n  };\r\n  const [loadings, setLoading] = useState(false);\r\n\r\n  const handleCheckDay = useCallback((day, doctor) => {\r\n    setModal(true);\r\n    fetchDay({\r\n      variables: {\r\n        day,\r\n        doctor,\r\n      },\r\n    });\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  useEffect(() => {\r\n    if (dt) {\r\n      const { available, day, times } = dt?.getDoctorAvailabilityForDate;\r\n      setAvail({\r\n        available,\r\n        day,\r\n        times,\r\n      });\r\n    } else {\r\n      setAvail({\r\n        availale: false,\r\n        day: \"Not Available\",\r\n        times: [],\r\n      });\r\n    }\r\n  }, [dt]);\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n\r\n  const handleSelectChange = async (e) => {\r\n    const { value } = e.target;\r\n\r\n    setLoading(true);\r\n    await fetchAvailabilities({\r\n      variables: {\r\n        first: 5,\r\n        day: value,\r\n        doctor: hcpId,\r\n      },\r\n    }).then(({ data }) => {\r\n      if (data) {\r\n        setPageInfo(data?.getAvailabilities?.pageInfo || []);\r\n        setAvailabilities(\r\n          data?.getAvailabilities?.availability || defaultPageInfo\r\n        );\r\n      }\r\n    });\r\n    setLoading(false);\r\n    setSelect(value);\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  const { day, available, times } = avail;\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n  return (\r\n    <>\r\n      <Grid item container direction=\"column\" height=\"100%\">\r\n        <Card\r\n          variant=\"outlined\"\r\n          sx={{\r\n            width: \"100%\",\r\n            borderRadius: \"1.5rem\",\r\n            borderColor: \"transparent\",\r\n            p: 2,\r\n          }}\r\n        >\r\n          <Grid item container alignItems=\"center\" sx={{ mb: 2 }}>\r\n            <Grid item flex={1}>\r\n              <Typography\r\n                sx={{\r\n                  fontWeight: 500,\r\n                  fontSize: \"20px\",\r\n                  lineHeight: \"25px\",\r\n                  letterSpacing: \"-0.01em\",\r\n                  color: \"#010101\",\r\n                }}\r\n              >\r\n                Doctor Availabilities\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CustomSelect\r\n                value={select}\r\n                onChange={handleSelectChange}\r\n                options={days}\r\n                name=\"select\"\r\n              />\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <CustomSelect\r\n                value={form}\r\n                onChange={onChange}\r\n                options={dropDown}\r\n                name=\"availability-dropdown\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          {availabilities?.length > 0 ? (\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"column\"\r\n              overflow=\"hidden\"\r\n              sx={{ mt: 2 }}\r\n              maxWidth={{ md: \"100%\", sm: \"100%\", xs: \"100%\" }}\r\n            >\r\n              <EnhancedTable\r\n                headCells={availabilityHeadCells10}\r\n                rows={availabilities}\r\n                paginationLabel=\"Availabilities per page\"\r\n                hasCheckbox={true}\r\n                changeLimit={async (e) => {\r\n                  const res = await changeHospitalTableLimit(\r\n                    fetchAvailabilities,\r\n                    {\r\n                      first: e,\r\n                      providerId: partnerProviderId,\r\n                    }\r\n                  );\r\n\r\n                  await setTableData(res, \"Failed to change table limit.\");\r\n                }}\r\n                dataPageInfo={pageInfo}\r\n                handlePagination={async (page) => {\r\n                  const res = handleHospitalPageChange(\r\n                    fetchAvailabilities,\r\n                    page,\r\n                    pageInfo,\r\n                    {\r\n                      day: select,\r\n                      providerId: partnerProviderId,\r\n                      id: hcpId,\r\n                    }\r\n                  );\r\n                  await setTableData(res, \"Failed to change page.\");\r\n                }}\r\n              >\r\n                {availabilities?.map((row, index) => {\r\n                  const { _id, day, times, doctor } = row;\r\n                  const startTime = hours(times[0].start);\r\n                  const endTime = hours(times[times.length - 1].stop);\r\n\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  const isItemSelected = isSelected(_id, selectedRows);\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={_id}\r\n                      sx={{ cursor: \"pointer\" }}\r\n                      onClick={() => handleCheckDay(day, doctor)}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={() =>\r\n                            handleSelectedRows(\r\n                              _id,\r\n                              selectedRows,\r\n                              setSelectedRows\r\n                            )\r\n                          }\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            \"aria-labelledby\": labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      {/* <TableCell\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{ color: theme.palette.common.grey }}\r\n                      >\r\n                        {doctorData?.dociId?.split(\"-\")[1]}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" className={classes.tableCell}>\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            textAlign: \"left\",\r\n                          }}\r\n                        >\r\n                          {/* <span style={{ marginRight: \"1rem\" }}>\r\n                            <Avatar\r\n                              alt={`${doctorData?.firstName} ${doctorData?.lastName}`}\r\n                              src={picture ? picture : displayPhoto}\r\n                              sx={{ width: 24, height: 24 }}\r\n                            />\r\n                          </span> \r\n                          <span style={{ fontSize: \"1.25rem\" }}>\r\n                            {doctorData?.firstName\r\n                              ? `${doctorData?.firstName} ${doctorData?.lastName}`\r\n                              : \"no name\"}\r\n                          </span>\r\n                        </div>\r\n                      </TableCell> */}\r\n                      <TableCell align=\"left\" className={classes.tableCell}>\r\n                        {day}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{\r\n                          color: theme.palette.common.red,\r\n                        }}\r\n                      >\r\n                        <Chip\r\n                          label={startTime}\r\n                          className={classes.badge}\r\n                          style={{\r\n                            background: theme.palette.common.lightRed,\r\n                            color: theme.palette.common.red,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        className={classes.tableCell}\r\n                        style={{\r\n                          color: theme.palette.common.red,\r\n                        }}\r\n                      >\r\n                        <Chip\r\n                          label={endTime}\r\n                          className={classes.badge}\r\n                          style={{\r\n                            background: theme.palette.common.lightRed,\r\n                            color: theme.palette.common.red,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </EnhancedTable>\r\n            </Grid>\r\n          ) : (\r\n            <EmptyTable\r\n              headCells={availabilityHeadCells10}\r\n              paginationLabel=\"Availability  per page\"\r\n            />\r\n          )}\r\n        </Card>\r\n      </Grid>\r\n      <Modals\r\n        isOpen={modal}\r\n        title=\"Doctor Availability Time\"\r\n        rowSpacing={5}\r\n        width=\"10vw\"\r\n        handleClose={() => setModal(false)}\r\n      >\r\n        {load2 && <Loader />}\r\n        <Grid item container alignItems=\"center\" gap={2}>\r\n          <Typography variant=\"h4\">{day}</Typography>\r\n          <div\r\n            style={{\r\n              background: available\r\n                ? theme.palette.common.green\r\n                : theme.palette.common.red,\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item container gap={1}>\r\n          {times\r\n            ? times?.map((time, ind) => {\r\n                const { start, stop } = time;\r\n                return (\r\n                  <Chip\r\n                    key={ind}\r\n                    label={`${hours(start)} - ${hours(stop)} `}\r\n                    className={classes.badge}\r\n                    style={{\r\n                      background: theme.palette.common.lightRed,\r\n                      color: theme.palette.common.red,\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            : \"No Time\"}\r\n        </Grid>\r\n      </Modals>\r\n    </>\r\n  );\r\n  // return (\r\n  //   <Grid container direction=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n  //     <Grid item>\r\n  //       <Typography variant=\"h2\">HCP Availability</Typography>\r\n  //     </Grid>\r\n  //     <Grid\r\n  //       item\r\n  //       container\r\n  //       gap={3}\r\n  //       direction=\"column\"\r\n  //       flexWrap=\"nowrap\"\r\n  //       height=\"100%\"\r\n  //     >\r\n  //       {availabiltyArray.length > 0 ? (\r\n  //         availabiltyArray.map((availability, index) => {\r\n  //           if (availability?.times) {\r\n  //             return (\r\n  //               <Grid item key={index}>\r\n  //                 <AvailabilityCard availability={availability} />\r\n  //               </Grid>\r\n  //             );\r\n  //           } else {\r\n  //             return null;\r\n  //           }\r\n  //         })\r\n  //       ) : (\r\n  //         <NoData />\r\n  //       )}\r\n  //     </Grid>\r\n  //   </Grid>\r\n  // );\r\n};\r\n\r\nexport default HcpAvailability;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HCPChat.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpAppointments.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HcpProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Hcps.js",["822","823","824"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { NoData, EmptyTable } from \"components/layouts\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { useMutation, useLazyQuery, NetworkStatus } from \"@apollo/client\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  Modals,\r\n  Loader,\r\n  CompoundSearch,\r\n  DoctorFilters,\r\n  CustomButton,\r\n} from \"components/Utilities\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport TableLayout from \"components/layouts/TableLayout\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { hcpsHeadCells5 } from \"components/Utilities/tableHeaders\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport {\r\n  Grid,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Checkbox,\r\n  Chip,\r\n} from \"@mui/material\";\r\nimport { createDOctorProfile } from \"components/graphQL/Mutation\";\r\nimport { timeConverter } from \"components/Utilities/Time\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  getSearchPlaceholder,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { defaultPageInfo, doctorsSearchOptions } from \"helpers/mockData\";\r\nimport {\r\n  getDoctorsProfile,\r\n  getDoctorsProfileByStatus,\r\n} from \"components/graphQL/useQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  filterBtnGrid: {\r\n    \"&.MuiGrid-root\": {\r\n      marginRight: \"3rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n      whiteSpace: \"nowrap\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  badge: {\r\n    \"&.MuiChip-root\": {\r\n      fontSize: \"1.25rem !important\",\r\n      height: \"2.7rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n\r\n  searchFilterBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: theme.palette.common.black,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  uploadBtn: {\r\n    \"&.MuiButton-root\": {\r\n      ...theme.typography.btn,\r\n      background: \"#f2f2f2\",\r\n      boxShadow: \"none\",\r\n      color: theme.palette.common.black,\r\n\r\n      \"&:hover\": {\r\n        background: \"#f2f3f3\",\r\n        boxShadow: \"none\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        boxShadow: \"none\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Hcps = () => {\r\n  const classes = useStyles();\r\n  const { displayMessage } = useAlert();\r\n  const theme = useTheme();\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 0,\r\n    totalPages: 1,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n    limit: 10,\r\n    totalDocs: 0,\r\n  });\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n  const cadre = [\r\n    { key: \"1\", value: \"1\" },\r\n    { key: \"2\", value: \"2\" },\r\n    { key: \"3\", value: \"3\" },\r\n    { key: \"4\", value: \"4\" },\r\n    { key: \"5\", value: \"5\" },\r\n  ];\r\n  const buttonType = {\r\n    background: theme.palette.common.black,\r\n    hover: theme.palette.primary.main,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n  const [fetchDoctors, { error, loading, refetch, variables, networkStatus }] =\r\n    useLazyQuery(getDoctorsProfile);\r\n  const [\r\n    fetchDoctorsByStatus,\r\n    {\r\n      loading: byStatusLoading,\r\n      refetch: byStatusRefetch,\r\n      variables: byStatusVariables,\r\n    },\r\n  ] = useLazyQuery(getDoctorsProfileByStatus);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const { data } = await fetchDoctors({\r\n          variables: {\r\n            first: pageInfo.limit,\r\n            providerId: partnerProviderId,\r\n          },\r\n        });\r\n        if (data) {\r\n          setPageInfo(data.doctorProfiles.pageInfo || []);\r\n          setProfiles(data.doctorProfiles.profile || defaultPageInfo);\r\n        }\r\n        // ...\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    response\r\n      .then(({ data }) => {\r\n        setPageInfo(data.doctorProfiles.pageInfo || []);\r\n        setProfiles(data.doctorProfiles.profile || defaultPageInfo);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayMessage(\"error\", errMsg);\r\n      });\r\n  };\r\n\r\n  const [profiles, setProfiles] = useState(\"\");\r\n\r\n  const [openHcpFilter, setOpenHcpFilter] = useState(false);\r\n  const [openAddHcp, setOpenAddHcp] = useState(false);\r\n\r\n  const initialValues1 = {\r\n    hospital: \"\",\r\n    specialization: \"\",\r\n    phone: \"\",\r\n    cadre: \"\",\r\n  };\r\n\r\n  const validationSchema1 = Yup.object({\r\n    hospital: Yup.string(\"Enter your hospital\"),\r\n    specialization: Yup.string(\"Enter your specialization\"),\r\n    phone: Yup.number(\"Enter a correct Number\").typeError(\r\n      \"Enter a current Number\"\r\n    ),\r\n    cadre: Yup.string(\"Enter your Cadre\").trim(),\r\n  });\r\n  const onSubmit1 = async (values) => {\r\n    const { specialization } = values;\r\n    await refetch({\r\n      specialization,\r\n    });\r\n    setOpenHcpFilter(false);\r\n  };\r\n  const onSubmit = async (values) => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      gender,\r\n      phone,\r\n      email,\r\n      hospital,\r\n      healaId,\r\n      specialization,\r\n      dob,\r\n      cadre,\r\n      image,\r\n    } = values;\r\n    const correctDOB = timeConverter(dob);\r\n    await createDoc({\r\n      variables: {\r\n        dociId: healaId,\r\n        firstName,\r\n        lastName,\r\n        gender,\r\n        phoneNumber: phone,\r\n        email,\r\n        hospital,\r\n        specialization,\r\n        dob: correctDOB,\r\n        cadre,\r\n        image,\r\n        providerId: \"61db6f8968b248001aec4fcb\",\r\n      },\r\n      refetchQueries: [{ query: getDoctorsProfile }],\r\n    });\r\n    setOpenAddHcp(false);\r\n  };\r\n  const specializations = [\r\n    { key: \"diagnostics\", value: \"diagnostics\" },\r\n    { key: \"pharmacy\", value: \"pharmacy\" },\r\n  ];\r\n\r\n  const gender = [\r\n    { key: \"Male\", value: \"Male\" },\r\n    { key: \"Female\", value: \"Female\" },\r\n  ];\r\n\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    specialization: \"\",\r\n    image: null,\r\n    cadre: \"\",\r\n    gender: \"\",\r\n    hospital: \"\",\r\n    phone: \"\",\r\n    dob: null,\r\n    healaId: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string(\"Enter your firstName\").required(\r\n      \"firstName is required\"\r\n    ),\r\n    hospital: Yup.string(\"Enter your hosptial\").required(\r\n      \"hospital is required\"\r\n    ),\r\n    dob: Yup.date(\"required\")\r\n      .typeError(\" Enter a valid DOB\")\r\n      .required(\" DOB required\"),\r\n    healaId: Yup.string(\"Enter healaId\").required(\"HealaID required\"),\r\n    gender: Yup.string(\"select your Gender\").required(\"Select a gender\"),\r\n    phone: Yup.number(\"Enter your Phone Number\")\r\n      .typeError(\" Enter a valid phone number\")\r\n      .min(11, \"min value is  11 digits\")\r\n      .required(\"Phone number is required\"),\r\n    lastName: Yup.string(\"Enter your lastName\").required(\r\n      \"LastName is required\"\r\n    ),\r\n    image: Yup.string(\"Upload a single Image\")\r\n      .typeError(\"Pick correct image\")\r\n      .required(\"Image is required\"),\r\n    specialization: Yup.string(\"select your Specialization\").required(\r\n      \"Specialization is required\"\r\n    ),\r\n    cadre: Yup.string(\"select your Cadre\").required(\"Cadre is required\"),\r\n  });\r\n  const [createDoc] = useMutation(createDOctorProfile);\r\n  const history = useHistory();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n\r\n  const { setSelectedRows } = useActions();\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} flexWrap=\"nowrap\" height=\"100%\">\r\n      <Grid\r\n        item\r\n        gap={{ md: 4, sm: 4, xs: 2 }}\r\n        flexDirection={{ md: \"row\", sm: \"row\", xs: \"column\" }}\r\n        container\r\n        justifyContent=\"space-between\"\r\n      >\r\n        {/* <Grid item container flex={1} justifyContent=\"space-between\"> */}\r\n        <Grid item sx={{ ml: \"auto\" }}>\r\n          <CustomButton\r\n            endIcon={<AddIcon />}\r\n            title=\"Add Doctor\"\r\n            type={buttonType}\r\n            onClick={() => setOpenAddHcp(true)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TableLayout\r\n        filters={\r\n          <DoctorFilters\r\n            setProfiles={setProfiles}\r\n            setPageInfo={setPageInfo}\r\n            queryParams={{\r\n              doctorsParams: { fetchDoctors, loading, refetch, variables },\r\n              doctorsByStatusParams: {\r\n                byStatusLoading,\r\n                byStatusVariables,\r\n                byStatusRefetch,\r\n                fetchDoctorsByStatus,\r\n              },\r\n            }}\r\n          />\r\n        }\r\n        search={\r\n          <CompoundSearch\r\n            queryParams={{ fetchData: fetchDoctors, variables, loading }}\r\n            setPageInfo={(data) =>\r\n              setPageInfo(data.doctorProfiles.pageInfo || {})\r\n            }\r\n            setProfiles={(data) =>\r\n              setProfiles(data.doctorProfiles.profile || [])\r\n            }\r\n            getSearchPlaceholder={(filterBy) => getSearchPlaceholder(filterBy)}\r\n            filterOptions={doctorsSearchOptions}\r\n          />\r\n        }\r\n      >\r\n        {loading ? (\r\n          <Loader />\r\n        ) : byStatusLoading ? (\r\n          <Loader />\r\n        ) : networkStatus === NetworkStatus.refetch ? (\r\n          <Loader />\r\n        ) : profiles.length > 0 ? (\r\n          <Grid item container height=\"100%\" direction=\"column\">\r\n            <EnhancedTable\r\n              headCells={hcpsHeadCells5}\r\n              rows={profiles}\r\n              paginationLabel=\"Doctors per page\"\r\n              hasCheckbox={true}\r\n              changeLimit={async (e) => {\r\n                const res = await changeHospitalTableLimit(fetchDoctors, {\r\n                  first: e,\r\n                  providerId: partnerProviderId,\r\n                });\r\n\r\n                await setTableData(res, \"Failed to change table limit\");\r\n              }}\r\n              dataPageInfo={pageInfo}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchDoctors,\r\n                  page,\r\n                  pageInfo,\r\n                  partnerProviderId\r\n                );\r\n\r\n                await setTableData(res, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const {\r\n                  _id,\r\n                  dociId,\r\n                  firstName,\r\n                  status,\r\n                  specialization,\r\n                  consultations,\r\n                  lastName,\r\n                } = row;\r\n                const isItemSelected = isSelected(_id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    onClick={() => history.push(`hcps/${_id}`)}\r\n                    key={_id}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(_id, selectedRows, setSelectedRows)\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{\r\n                        color: theme.palette.common.grey,\r\n                        minWidth: \"10rem\",\r\n                      }}\r\n                    >\r\n                      {dociId?.split(\"-\")[1]}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <div\r\n                        style={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                          alignItems: \"left\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: \"1.25rem\" }}>\r\n                          {firstName} {lastName}\r\n                        </span>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.grey }}\r\n                    >\r\n                      {specialization}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {consultations ? consultations : 0}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      <Chip\r\n                        label={status ? status : \"No Status\"}\r\n                        className={classes.badge}\r\n                        style={{\r\n                          background:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.lightGreen\r\n                              : theme.palette.common.lightRed,\r\n                          color:\r\n                            status === \"Active\"\r\n                              ? theme.palette.common.green\r\n                              : theme.palette.common.red,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    {/* <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        component={Link}\r\n                        to=\r\n                        endIcon={<ArrowForwardIosIcon />}\r\n                      >\r\n                        View Doctor\r\n                      </Button>\r\n                    </TableCell> */}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={hcpsHeadCells5}\r\n            paginationLabel=\"Doctors  per page\"\r\n          />\r\n        )}\r\n      </TableLayout>\r\n      {/* Filter Modal */}\r\n      <Modals\r\n        isOpen={openHcpFilter}\r\n        title=\"Filter\"\r\n        rowSpacing={5}\r\n        handleClose={() => setOpenHcpFilter(false)}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues1}\r\n          onSubmit={onSubmit1}\r\n          validationSchema={validationSchema1}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({ isSubmitting, isValid, dirty }) => {\r\n            return (\r\n              <Form style={{ marginTop: \"3rem\" }}>\r\n                <Grid item container direction=\"column\" gap={1}>\r\n                  <Grid item container rowSpacing={3}>\r\n                    <Grid item container>\r\n                      <FormikControl\r\n                        control=\"select\"\r\n                        options={specializations}\r\n                        name=\"specialization\"\r\n                        label=\"Specialization\"\r\n                        placeholder=\"Select Specialization\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item marginTop={3}>\r\n                  <CustomButton\r\n                    title=\"Apply Filter\"\r\n                    width=\"100%\"\r\n                    type={buttonType}\r\n                    isSubmitting={isSubmitting}\r\n                    disabled={!(dirty || isValid)}\r\n                  />\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n      {/* ADD Doctor MODAL */}\r\n      <Modals\r\n        isOpen={openAddHcp}\r\n        title=\"Add Doctor\"\r\n        rowSpacing={5}\r\n        height=\"auto\"\r\n        handleClose={() => setOpenAddHcp(false)}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnMount={false}\r\n          validateOnBlur={false}\r\n        >\r\n          {({\r\n            isSubmitting,\r\n            dirty,\r\n            isValid,\r\n            setFieldValue,\r\n            errors,\r\n            setValues,\r\n          }) => {\r\n            console.log(errors);\r\n            return (\r\n              <Form style={{ marginTop: \"1rem\" }}>\r\n                <Grid container direction=\"column\" gap={2}>\r\n                  <Grid item container direction=\"column\" gap={1}>\r\n                    <Grid item container>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"First Name\"\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"Enter first name\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Last Name\"\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Enter last name\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" gap={2}>\r\n                      <Grid item container>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item md>\r\n                            <Grid container direction=\"column\">\r\n                              <FormikControl\r\n                                control=\"select\"\r\n                                options={specializations}\r\n                                name=\"specialization\"\r\n                                label=\"Specialization\"\r\n                                placeholder=\"Specialization\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"select\"\r\n                              label=\"Gender\"\r\n                              id=\"gender\"\r\n                              name=\"gender\"\r\n                              options={gender}\r\n                              placeholder=\"Gender\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container direction=\"column\" gap={2}>\r\n                    <Grid item container>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item md>\r\n                          <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Phone Number\"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter last Phone number\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item md>\r\n                          <Grid container direction=\"column\">\r\n                            <FormikControl\r\n                              control=\"select\"\r\n                              options={cadre}\r\n                              name=\"cadre\"\r\n                              label=\"Cadre\"\r\n                              placeholder=\"Select Cadre\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" gap={2}>\r\n                      <Grid item container>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"date\"\r\n                              name=\"dob\"\r\n                              label=\"DOB\"\r\n                              type=\"hospital\"\r\n                              setFieldValue={setFieldValue}\r\n                              setValues={setValues}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item md>\r\n                            <FormikControl\r\n                              control=\"input\"\r\n                              label=\"HealaId\"\r\n                              id=\"heala\"\r\n                              name=\"healaId\"\r\n                              placeholder=\"Enter Heala ID\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container spacing={2} alignItems=\"center\">\r\n                    <Grid item container md>\r\n                      <FormikControl\r\n                        control=\"file\"\r\n                        name=\"image\"\r\n                        label=\"Profile Pics\"\r\n                        setFieldValue={setFieldValue}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md>\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        name=\"hospital\"\r\n                        label=\"Hospital\"\r\n                        placeholder=\"Enter Hospital\"\r\n                      />\r\n                    </Grid>\r\n                    {/* <Grid item md>\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        label=\"Heala-ID\"\r\n                        id=\"dociId\"\r\n                        name=\"dociId\"\r\n                        placeholder=\"Enter Heala ID\"\r\n                      />\r\n                    </Grid> */}\r\n                  </Grid>\r\n                  <Grid item container>\r\n                    <CustomButton\r\n                      title=\"Add Doctor\"\r\n                      width=\"100%\"\r\n                      type={buttonType}\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!(dirty || isValid)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modals>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Hcps;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Medications.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CaseNotes.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\MedicalRecords.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Consultations.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PatientProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Chat.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\HospitalDashboard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\routes\\PrivateRoute.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequest.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ScheduledRequestProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profiles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewResult.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Setting.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Pending.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboards.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrderProfile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Profile.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CancelledOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ViewCompleted.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\CompletedOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\ProcessingOrders.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PendingOrder.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Dashboard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\SubscriptionModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\WaitingListTable.js",[],["825","826"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Copy.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\bMI.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useFormInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\Success.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\auth.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\store\\action-creators\\tablesActions.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useCopy.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\tableData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\ReferPatient.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Management.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Administrator.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Error.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\PageNotFound.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\Login.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\modals\\RoleModal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\helpers\\debounce.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\CompoundSearch.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Filter.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\PatientFilters.js",["827","828","829","830"],"import React, { useEffect, useState } from \"react\";\r\nimport t from \"prop-types\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport Filter from \"./Filter\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getPlans, getProviders } from \"components/graphQL/useQuery\";\r\nimport { deleteVar, filterData } from \"helpers/filterHelperFunctions\";\r\nimport {\r\n  genderType,\r\n  patientsProfileDefaultFilterByValues,\r\n  /* statusFilterBy, */\r\n} from \"helpers/mockData\";\r\n\r\nconst PatientFilters = ({ setProfiles, setPageInfo, queryParams }) => {\r\n  const { displayAlert } = useAlert();\r\n  const [plans, setPlans] = useState([]);\r\n  const [fetchPlans] = useLazyQuery(getPlans);\r\n  const [providers, setProviders] = useState([]);\r\n  const [fetchProviders] = useLazyQuery(getProviders);\r\n  const [providerId, setProviderId] = useState(null);\r\n  const [filterPlanValue, setFilterPlanValue] = useState(\"\");\r\n  const [, setStatusFilterValue] = useState(\"\");\r\n  const { patientsParams, patientsByStatusParams, patientsByPlanParams } =\r\n    queryParams;\r\n  const { fetchPatient, loading, refetch, variables } = patientsParams;\r\n  const [profileFilterValues, setProfileFilterValues] = useState(\r\n    patientsProfileDefaultFilterByValues\r\n  );\r\n  const {\r\n    byStatusLoading,\r\n    /* byStatusVaribles,\r\n    byStatusRefetch,\r\n    fetchPatientByStatus, */\r\n  } = patientsByStatusParams;\r\n  const { byPlanLoading, byPlanVaribles, byPlanRefetch, fetchPatientByPlan } =\r\n    patientsByPlanParams;\r\n\r\n  useEffect(() => {\r\n    fetchProviders()\r\n      .then(({ data }) => {\r\n        if (!data) throw Error(\"Couldn't get list of providers\");\r\n        const providersList = (data?.getProviders?.provider).map((provider) => {\r\n          const { _id, name } = provider;\r\n          return { key: name, value: _id };\r\n        });\r\n        setProviders(providersList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (providerId === \"\" || providerId === null) return;\r\n    fetchPlans({ variables: { provider: providerId } })\r\n      .then(({ data }) => {\r\n        if (!data) throw Error(\"Couldn't get list of plans\");\r\n        const planList = (data?.getPlans?.plan || []).map((plan) => {\r\n          const { _id, name } = plan;\r\n          return { key: name, value: _id };\r\n        });\r\n        setPlans(planList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [providerId]);\r\n\r\n  const onFilterProfileChange = async (name, value) => {\r\n    try {\r\n      if (name === \"provider\") setProviderId(value);\r\n      setStatusFilterValue(\"\");\r\n      deleteVar(variables);\r\n      const filterValues = { ...profileFilterValues, [name]: value };\r\n      setProfileFilterValues(filterValues);\r\n      filterData(filterValues, {\r\n        fetchData: fetchPatient,\r\n        refetch,\r\n        variables,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.profiles?.data || []);\r\n          setPageInfo(data?.profiles?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setProfileFilterValues, patientsProfileDefaultFilterByValues);\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setProfileFilterValues, patientsProfileDefaultFilterByValues);\r\n    }\r\n  };\r\n\r\n  /*   const onFilterStatusChange = async (value) => {\r\n    try {\r\n      setProfileFilterValues({ gender: \"\", provider: \"\" });\r\n      deleteVar(byStatusVaribles);\r\n      setStatusFilterValue(value);\r\n      const filterVariables = { status: value };\r\n\r\n      filterData(filterVariables, {\r\n        fetchData: fetchPatientByStatus,\r\n        refetch: byStatusRefetch,\r\n        variables: byStatusVaribles,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.profilesByStatus?.data || []);\r\n          setPageInfo(data?.profilesByStatus?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setStatusFilterValue, \"\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setStatusFilterValue, \"\");\r\n    }\r\n  }; */\r\n\r\n  const onFilterPlanChange = async (value) => {\r\n    try {\r\n      if (value === \"\") {\r\n        setProfileFilterValues({\r\n          ...patientsProfileDefaultFilterByValues,\r\n        });\r\n      } else {\r\n        setProfileFilterValues({\r\n          ...patientsProfileDefaultFilterByValues,\r\n          provider: profileFilterValues.provider,\r\n        });\r\n      }\r\n      deleteVar(byPlanVaribles);\r\n      setFilterPlanValue(value);\r\n      const filterVariables = { planId: value };\r\n\r\n      filterData(filterVariables, {\r\n        fetchData: fetchPatientByPlan,\r\n        refetch: byPlanRefetch,\r\n        variables: byPlanVaribles,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.profilesByPlan?.data || []);\r\n          setPageInfo(data?.profilesByPlan?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setStatusFilterValue, \"\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setStatusFilterValue, \"\");\r\n    }\r\n  };\r\n\r\n  const refresh = async (setFilterValue, defaultVal) => {\r\n    displayAlert(\"error\", \"Something went wrong while filtering. Try again.\");\r\n    setFilterValue(defaultVal);\r\n\r\n    deleteVar(variables);\r\n\r\n    refetch()\r\n      .then(({ data }) => {\r\n        setProfiles(data?.profiles?.data || []);\r\n        setPageInfo(data?.profiles?.pageInfo || {});\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayAlert(\"error\", \"Failed to get patients data, Try again\");\r\n      });\r\n  };\r\n  return (\r\n    <Grid item container flexWrap=\"wrap\" spacing={2} alignItems=\"flex-end\">\r\n      {/* FILTER BY GENDER */}\r\n      <Grid item>\r\n        <Filter\r\n          onHandleChange={(e) =>\r\n            onFilterProfileChange(\"gender\", e?.target?.value)\r\n          }\r\n          onClickClearBtn={() => onFilterProfileChange(\"gender\", \"\")}\r\n          options={[{ key: \"Gender\", value: \"\" }, ...genderType]}\r\n          name=\"gender\"\r\n          value={profileFilterValues.gender}\r\n          hasClearBtn={true}\r\n          disable={loading || byStatusLoading || byPlanLoading}\r\n          variant=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      {/* FILTER BY PROVIDER AND PLAN */}\r\n      {/* <Grid item>\r\n        <Filter\r\n          onHandleChange={(e) =>\r\n            onFilterProfileChange(\"provider\", e?.target?.value)\r\n          }\r\n          onClickClearBtn={() => onFilterProfileChange(\"provider\", \"\")}\r\n          options={[{ key: \"Provider\", value: \"\" }, ...providers]}\r\n          name=\"provider\"\r\n          value={profileFilterValues.provider}\r\n          hasClearBtn={true}\r\n          disable={loading || byStatusLoading || byPlanLoading}\r\n        />\r\n      </Grid> */}\r\n      {/* {profileFilterValues.provider === \"\" ? null : (\r\n        <Grid item>\r\n          <Filter\r\n            label=\"\"\r\n            onHandleChange={(e) => onFilterPlanChange(e?.target?.value)}\r\n            onClickClearBtn={() => onFilterPlanChange(\"\")}\r\n            options={plans}\r\n            name=\"plan\"\r\n            placeholder=\"Provider Plan\"\r\n            value={filterPlanValue}\r\n            hasClearBtn={true}\r\n            disable={loading || byStatusLoading || byPlanLoading}\r\n          />\r\n        </Grid>\r\n      )} */}\r\n\r\n      {/* FILTER BY STATUS */}\r\n      {/* <Grid item>\r\n        <Filter\r\n          label=\"By Status\"\r\n          onHandleChange={(e) => onFilterStatusChange(e?.target?.value)}\r\n          onClickClearBtn={() => onFilterStatusChange(\"\")}\r\n          options={statusFilterBy}\r\n          name=\"status\"\r\n          placeholder=\"None\"\r\n          value={statusFilterValue}\r\n          hasClearBtn={true}\r\n          disable={loading || byStatusLoading || byPlanLoading}\r\n        />\r\n      </Grid> */}\r\n      {/* ==== CLEAR FILTERS BUTTON ===== */}\r\n      {/* <Grid item>\r\n            <ClearFiltersBtn\r\n              title=\"Clear filters\"\r\n              onHandleClick={() => {\r\n                resetFilters(\r\n                  setFilterValues,\r\n                  patientsPageDefaultFilterValues,\r\n                  variables,\r\n                  fetchPatient\r\n                );\r\n              }}\r\n            />\r\n          </Grid> */}\r\n    </Grid>\r\n  );\r\n};\r\nPatientFilters.propTypes = {\r\n  setProfiles: t.func.isRequired,\r\n  setPageInfo: t.func.isRequired,\r\n  queryParams: t.object.isRequired,\r\n};\r\n\r\nexport default PatientFilters;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\DoctorFilters.js",["831"],"import React, { useEffect, useState } from \"react\";\r\nimport ProPtypes from \"prop-types\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport Filter from \"./Filter\";\r\nimport { useAlert } from \"components/hooks\";\r\nimport {\r\n  cadreOptions,\r\n  defaultPageInfo,\r\n  doctorsProfileDefaultFilterByValues,\r\n  genderType,\r\n  specializationOptions,\r\n  statusFilterBy,\r\n} from \"helpers/mockData\";\r\nimport { deleteVar, filterData } from \"helpers/filterHelperFunctions\";\r\nimport { getProviders } from \"components/graphQL/useQuery\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n\r\nconst DoctorFilters = ({ setProfiles, setPageInfo, queryParams }) => {\r\n  const { displayAlert } = useAlert();\r\n  const [statusFilterValue, setStatusFilterValue] = useState(\"\");\r\n  const [providers, setProviders] = useState([]);\r\n  const [profileFilterValues, setProfileFilterValues] = useState(\r\n    doctorsProfileDefaultFilterByValues\r\n  ); // gender cadre specialization providerId\r\n  const [fetchProviders] = useLazyQuery(getProviders);\r\n  const { doctorsParams, doctorsByStatusParams } = queryParams;\r\n  const { fetchDoctors, loading, refetch, variables } = doctorsParams;\r\n  const {\r\n    byStatusLoading,\r\n    byStatusVaribles,\r\n    byStatusRefetch,\r\n    fetchDoctorsByStatus,\r\n  } = doctorsByStatusParams;\r\n\r\n  useEffect(() => {\r\n    fetchProviders()\r\n      .then(({ data }) => {\r\n        if (!data) throw Error(\"Couldn'ProPtypes get list of providers\");\r\n        const providersList = (data?.getProviders?.provider || []).map(\r\n          (provider) => {\r\n            const { _id, name } = provider;\r\n            return { key: name, value: _id };\r\n          }\r\n        );\r\n        setProviders(providersList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onFilterProfileChange = async (name, value) => {\r\n    try {\r\n      setStatusFilterValue(\"\");\r\n      deleteVar(variables);\r\n      const filterValues = { ...profileFilterValues, [name]: value };\r\n      setProfileFilterValues(filterValues);\r\n      filterData(filterValues, {\r\n        fetchData: fetchDoctors,\r\n        refetch,\r\n        variables,\r\n      })\r\n        .then((data) => {\r\n          setPageInfo(data.doctorProfiles.pageInfo || []);\r\n          setProfiles(data.doctorProfiles.profile || defaultPageInfo);\r\n        })\r\n        .catch(() => {\r\n          refresh(setProfileFilterValues, doctorsProfileDefaultFilterByValues);\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setProfileFilterValues, doctorsProfileDefaultFilterByValues);\r\n    }\r\n  };\r\n\r\n  const onFilterStatusChange = async (value) => {\r\n    try {\r\n      setProfileFilterValues(doctorsProfileDefaultFilterByValues);\r\n      deleteVar(byStatusVaribles);\r\n      setStatusFilterValue(value);\r\n      const filterVariables = { status: value };\r\n\r\n      filterData(filterVariables, {\r\n        fetchData: fetchDoctorsByStatus,\r\n        refetch: byStatusRefetch,\r\n        variables: byStatusVaribles,\r\n      })\r\n        .then((data) => {\r\n          setProfiles(data?.doctorProfilesByStatus?.profile || []);\r\n          setPageInfo(data?.doctorProfilesByStatus?.pageInfo || {});\r\n        })\r\n        .catch(() => {\r\n          refresh(setStatusFilterValue, \"\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n      refresh(setStatusFilterValue, \"\");\r\n    }\r\n  };\r\n\r\n  const refresh = async (setFilterValue, defaultVal) => {\r\n    displayAlert(\"error\", \"Something went wrong while filtering. Try again.\");\r\n    setFilterValue(defaultVal);\r\n\r\n    deleteVar(variables);\r\n\r\n    refetch()\r\n      .then(({ data }) => {\r\n        setProfiles(data?.profiles?.data || []);\r\n        setPageInfo(data?.profiles?.pageInfo || {});\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        displayAlert(\"error\", \"Failed to get patients data, Try again\");\r\n      });\r\n  };\r\n  return (\r\n    <Grid item container flexWrap=\"wrap\" spacing={4}>\r\n      {/* FILTER BY PROFILE */}\r\n      <Grid item>\r\n        <Grid container flexWrap=\"wrap\" spacing={2} alignItems=\"flex-end\">\r\n          {[\r\n            {\r\n              label: \"\",\r\n              onHandleChange: (e) =>\r\n                onFilterProfileChange(\"gender\", e?.target?.value),\r\n              onClickClearBtn: () => onFilterProfileChange(\"gender\", \"\"),\r\n              options: [{ key: \"Gender\", value: \"\" }, ...genderType],\r\n              name: \"gender\",\r\n              placeholder: \"By gender\",\r\n              value: profileFilterValues.gender,\r\n              hasClearBtn: true,\r\n              disavle: loading || byStatusLoading,\r\n            },\r\n            {\r\n              label: \"\",\r\n              onHandleChange: (e) =>\r\n                onFilterProfileChange(\"cadre\", e?.target?.value),\r\n              onClickClearBtn: () => onFilterProfileChange(\"cadre\", \"\"),\r\n              options: [{ key: \"Cadre\", value: \"\" }, ...cadreOptions],\r\n              name: \"cadre\",\r\n              placeholder: \"By cadre\",\r\n              value: profileFilterValues.cadre,\r\n              hasClearBtn: true,\r\n              disavle: loading || byStatusLoading,\r\n            },\r\n            {\r\n              label: \"\",\r\n              onHandleChange: (e) =>\r\n                onFilterProfileChange(\"specialization\", e?.target?.value),\r\n              onClickClearBtn: () =>\r\n                onFilterProfileChange(\"specialization\", \"\"),\r\n              options: [\r\n                { key: \"Specialization\", value: \"\" },\r\n                ...specializationOptions,\r\n              ],\r\n              name: \"specialization\",\r\n              placeholder: \"By specialization\",\r\n              value: profileFilterValues.specialization,\r\n              hasClearBtn: true,\r\n              disavle: loading || byStatusLoading,\r\n            },\r\n            // {\r\n            //   label: \"\",\r\n            //   onHandleChange: (e) =>\r\n            //     onFilterProfileChange(\"providerId\", e?.target?.value),\r\n            //   onClickClearBtn: () => onFilterProfileChange(\"providerId\", \"\"),\r\n            //   options: [{ key: \"Provider\", value: \"\" }, ...providers],\r\n            //   name: \"providerId\",\r\n            //   placeholder: \"By provider\",\r\n            //   value: profileFilterValues.providerId,\r\n            //   hasClearBtn: true,\r\n            //   disavle: loading || byStatusLoading,\r\n            // },\r\n          ].map((filter, idx) => {\r\n            return (\r\n              <Grid item key={`${idx}-${filter.name}`}>\r\n                <Filter\r\n                  label={filter.label}\r\n                  onHandleChange={(e) => filter.onHandleChange(e)}\r\n                  onClickClearBtn={() => filter.onClickClearBtn()}\r\n                  options={filter.options}\r\n                  name={filter.name}\r\n                  placeholder={filter.placeholder}\r\n                  value={filter.value}\r\n                  hasClearBtn={true}\r\n                  disable={loading || byStatusLoading}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n\r\n          {/* FILTER BY STATUS */}\r\n          <Grid item>\r\n            <Filter\r\n              label=\"\"\r\n              onHandleChange={(e) => onFilterStatusChange(e?.target?.value)}\r\n              onClickClearBtn={() => onFilterStatusChange(\"\")}\r\n              options={[{ key: \"Status\", value: \"\" }, ...statusFilterBy]}\r\n              name=\"status\"\r\n              placeholder=\"None\"\r\n              value={statusFilterValue}\r\n              hasClearBtn={true}\r\n              disable={loading || byStatusLoading}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nDoctorFilters.propTypes = {\r\n  setProfiles: ProPtypes.func,\r\n  setPageInfo: ProPtypes.func,\r\n  queryParams: ProPtypes.object,\r\n};\r\n\r\nexport default DoctorFilters;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Buttons\\CloseBtn.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAppType.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\hooks\\useAlert.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\SubscriptionIncome.js",["832"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  TableCell,\r\n  TableRow,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport TrendingDownIcon from \"@mui/icons-material/TrendingDown\";\r\nimport {\r\n  timeMoment,\r\n  dateMoment,\r\n  formatNumber,\r\n} from \"components/Utilities/Time\";\r\nimport { EnhancedTable, NoData, EmptyTable } from \"components/layouts\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { financeHeader2 } from \"components/Utilities/tableHeaders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { Loader } from \"components/Utilities\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getSubscriptionsIncome } from \"components/graphQL/useQuery\";\r\nimport { defaultPageInfo } from \"helpers/mockData\";\r\nimport {\r\n  changeHospitalTableLimit,\r\n  handleHospitalPageChange,\r\n} from \"helpers/filterHelperFunctions\";\r\nimport { useAlert } from \"components/hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  iconWrapper: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: \"50%\",\r\n    display: \"grid\",\r\n    placeContent: \"center\",\r\n    background: theme.palette.common.lightGreen,\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SubscriptionIncome = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [profiles, setProfiles] = useState(\"\");\r\n  const { displayMessage } = useAlert();\r\n  const { selectedRows } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n  const [pageInfo, setPageInfo] = useState(defaultPageInfo);\r\n\r\n  const [fetchDoctors, { error, loading }] = useLazyQuery(\r\n    getSubscriptionsIncome\r\n  );\r\n\r\n  const setTableData = async (response, errMsg) => {\r\n    try {\r\n      setPageInfo(\r\n        response.getEarningStats.subscriptionIncomeData.PageInfo || []\r\n      );\r\n      setProfiles(\r\n        response.getEarningStats.subscriptionIncomeData.data || defaultPageInfo\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n      displayMessage(\"error\", error);\r\n    }\r\n  };\r\n  const partnerProviderId = localStorage.getItem(\"partnerProviderId\");\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function fetchData() {\r\n        const { data } = await fetchDoctors({\r\n          variables: {\r\n            first: pageInfo.limit,\r\n            providerId: partnerProviderId,\r\n          },\r\n        });\r\n        if (data) {\r\n          setPageInfo(\r\n            data.getEarningStats.subscriptionIncomeData.PageInfo || []\r\n          );\r\n          setProfiles(\r\n            data.getEarningStats.subscriptionIncomeData.data || defaultPageInfo\r\n          );\r\n        }\r\n        // ...\r\n      }\r\n      fetchData();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <NoData error={error} />;\r\n  return (\r\n    <Grid container direction=\"column\" gap={2} height=\"100%\">\r\n      <Card\r\n        variant=\"outlined\"\r\n        sx={{\r\n          width: \"100%\",\r\n          borderRadius: \"1.5rem\",\r\n          borderColor: \"transparent\",\r\n          p: 2,\r\n          mt: 2,\r\n        }}\r\n      >\r\n        <Grid item container gap={1} alignItems=\"center\">\r\n          <Grid item flex={1}>\r\n            <Typography noWrap variant=\"h1\" component=\"div\" color=\"#2D2F39\">\r\n              Subscription Earnings table\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item className={classes.iconWrapper}>\r\n            <TrendingDownIcon color=\"success\" className={classes.cardIcon} />\r\n          </Grid>\r\n        </Grid>\r\n        {profiles.length > 0 ? (\r\n          <Grid item container>\r\n            <EnhancedTable\r\n              headCells={financeHeader2}\r\n              rows={profiles}\r\n              paginationLabel=\"finance per page\"\r\n              hasCheckbox={true}\r\n              dataPageInfo={pageInfo}\r\n              changeLimit={async (e) => {\r\n                const res = await changeHospitalTableLimit(fetchDoctors, {\r\n                  first: e,\r\n                  providerId: partnerProviderId,\r\n                });\r\n                console.log(res);\r\n                await setTableData(res.data, \"Failed to change table limit\");\r\n              }}\r\n              handlePagination={async (page) => {\r\n                const res = handleHospitalPageChange(\r\n                  fetchDoctors,\r\n                  page,\r\n                  pageInfo,\r\n                  partnerProviderId\r\n                );\r\n                await setTableData(res, \"Failed to change page.\");\r\n              }}\r\n            >\r\n              {profiles.map((row, index) => {\r\n                const { createdAt, amount, patientData, providerId, planId } =\r\n                  row;\r\n                const { firstName, image, lastName } = patientData || {};\r\n                const isItemSelected = isSelected(row._id, selectedRows);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row._id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onClick={() =>\r\n                          handleSelectedRows(\r\n                            row.id,\r\n                            selectedRows,\r\n                            setSelectedRows\r\n                          )\r\n                        }\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {formatNumber(amount.toFixed(2))}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableCell}>\r\n                      {patientData && patientData !== {} ? (\r\n                        <div\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <span style={{ fontSize: \"1.25rem\" }}>\r\n                            {patientData &&\r\n                              `${firstName && firstName} ${\r\n                                lastName && lastName\r\n                              }`}\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        \"No name\"\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {planId}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.red }}\r\n                    >\r\n                      {providerId}\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                      className={classes.tableCell}\r\n                      style={{ color: theme.palette.common.black }}\r\n                    >\r\n                      {`${dateMoment(createdAt)} - ${timeMoment(createdAt)}`}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </EnhancedTable>\r\n          </Grid>\r\n        ) : (\r\n          <EmptyTable\r\n            headCells={financeHeader2}\r\n            paginationLabel=\"Finance  per page\"\r\n          />\r\n        )}\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SubscriptionIncome;\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\forms\\LoginForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Forms\\Filters\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorPayout.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\pages\\DoctorEarning.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\CardItem.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\ChervonDownIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\BellIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DoctorsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\DashboardIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\PatientsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\FinanceIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SettingsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\RefferalsIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SubscriptionIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\LogoutIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\layouts\\TableLayout.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Icons\\SearchIcon.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\PartPNew\\src\\components\\Utilities\\Searchs.js",[],{"ruleId":"833","replacedBy":"834"},{"ruleId":"835","replacedBy":"836"},{"ruleId":"837","severity":1,"message":"838","line":2,"column":8,"nodeType":"839","messageId":"840","endLine":2,"endColumn":12},{"ruleId":"837","severity":1,"message":"841","line":9,"column":3,"nodeType":"839","messageId":"840","endLine":9,"endColumn":13},{"ruleId":"837","severity":1,"message":"842","line":113,"column":9,"nodeType":"839","messageId":"840","endLine":113,"endColumn":21},{"ruleId":"837","severity":1,"message":"843","line":2,"column":8,"nodeType":"839","messageId":"840","endLine":2,"endColumn":27},{"ruleId":"837","severity":1,"message":"844","line":3,"column":10,"nodeType":"839","messageId":"840","endLine":3,"endColumn":14},{"ruleId":"837","severity":1,"message":"845","line":12,"column":3,"nodeType":"839","messageId":"840","endLine":12,"endColumn":9},{"ruleId":"837","severity":1,"message":"845","line":9,"column":3,"nodeType":"839","messageId":"840","endLine":9,"endColumn":9},{"ruleId":"837","severity":1,"message":"843","line":17,"column":8,"nodeType":"839","messageId":"840","endLine":17,"endColumn":27},{"ruleId":"837","severity":1,"message":"844","line":24,"column":10,"nodeType":"839","messageId":"840","endLine":24,"endColumn":14},{"ruleId":"837","severity":1,"message":"846","line":14,"column":28,"nodeType":"839","messageId":"840","endLine":14,"endColumn":40},{"ruleId":"837","severity":1,"message":"847","line":2,"column":8,"nodeType":"839","messageId":"840","endLine":2,"endColumn":21},{"ruleId":"837","severity":1,"message":"848","line":3,"column":10,"nodeType":"839","messageId":"840","endLine":3,"endColumn":16},{"ruleId":"837","severity":1,"message":"849","line":3,"column":18,"nodeType":"839","messageId":"840","endLine":3,"endColumn":22},{"ruleId":"837","severity":1,"message":"850","line":11,"column":3,"nodeType":"839","messageId":"840","endLine":11,"endColumn":23},{"ruleId":"837","severity":1,"message":"845","line":14,"column":3,"nodeType":"839","messageId":"840","endLine":14,"endColumn":9},{"ruleId":"837","severity":1,"message":"851","line":22,"column":3,"nodeType":"839","messageId":"840","endLine":22,"endColumn":9},{"ruleId":"837","severity":1,"message":"852","line":24,"column":3,"nodeType":"839","messageId":"840","endLine":24,"endColumn":15},{"ruleId":"837","severity":1,"message":"843","line":32,"column":8,"nodeType":"839","messageId":"840","endLine":32,"endColumn":27},{"ruleId":"837","severity":1,"message":"853","line":33,"column":8,"nodeType":"839","messageId":"840","endLine":33,"endColumn":20},{"ruleId":"837","severity":1,"message":"844","line":34,"column":10,"nodeType":"839","messageId":"840","endLine":34,"endColumn":14},{"ruleId":"837","severity":1,"message":"854","line":38,"column":10,"nodeType":"839","messageId":"840","endLine":38,"endColumn":20},{"ruleId":"837","severity":1,"message":"855","line":52,"column":7,"nodeType":"839","messageId":"840","endLine":52,"endColumn":17},{"ruleId":"837","severity":1,"message":"856","line":145,"column":9,"nodeType":"839","messageId":"840","endLine":145,"endColumn":22},{"ruleId":"837","severity":1,"message":"857","line":152,"column":9,"nodeType":"839","messageId":"840","endLine":152,"endColumn":25},{"ruleId":"837","severity":1,"message":"858","line":195,"column":9,"nodeType":"839","messageId":"840","endLine":195,"endColumn":17},{"ruleId":"837","severity":1,"message":"859","line":217,"column":10,"nodeType":"839","messageId":"840","endLine":217,"endColumn":16},{"ruleId":"837","severity":1,"message":"860","line":220,"column":9,"nodeType":"839","messageId":"840","endLine":220,"endColumn":19},{"ruleId":"837","severity":1,"message":"861","line":3,"column":10,"nodeType":"839","messageId":"840","endLine":3,"endColumn":26},{"ruleId":"837","severity":1,"message":"862","line":11,"column":3,"nodeType":"839","messageId":"840","endLine":11,"endColumn":23},{"ruleId":"837","severity":1,"message":"863","line":17,"column":10,"nodeType":"839","messageId":"840","endLine":17,"endColumn":18},{"ruleId":"837","severity":1,"message":"864","line":18,"column":10,"nodeType":"839","messageId":"840","endLine":18,"endColumn":25},{"ruleId":"837","severity":1,"message":"865","line":79,"column":10,"nodeType":"839","messageId":"840","endLine":79,"endColumn":26},{"ruleId":"837","severity":1,"message":"866","line":79,"column":28,"nodeType":"839","messageId":"840","endLine":79,"endColumn":47},{"ruleId":"837","severity":1,"message":"867","line":145,"column":10,"nodeType":"839","messageId":"840","endLine":145,"endColumn":18},{"ruleId":"837","severity":1,"message":"843","line":21,"column":8,"nodeType":"839","messageId":"840","endLine":21,"endColumn":27},{"ruleId":"837","severity":1,"message":"844","line":22,"column":10,"nodeType":"839","messageId":"840","endLine":22,"endColumn":14},{"ruleId":"837","severity":1,"message":"845","line":31,"column":3,"nodeType":"839","messageId":"840","endLine":31,"endColumn":9},{"ruleId":"833","replacedBy":"868"},{"ruleId":"835","replacedBy":"869"},{"ruleId":"837","severity":1,"message":"870","line":18,"column":10,"nodeType":"839","messageId":"840","endLine":18,"endColumn":15},{"ruleId":"837","severity":1,"message":"871","line":20,"column":10,"nodeType":"839","messageId":"840","endLine":20,"endColumn":19},{"ruleId":"837","severity":1,"message":"872","line":23,"column":10,"nodeType":"839","messageId":"840","endLine":23,"endColumn":25},{"ruleId":"837","severity":1,"message":"873","line":123,"column":9,"nodeType":"839","messageId":"840","endLine":123,"endColumn":27},{"ruleId":"837","severity":1,"message":"871","line":22,"column":10,"nodeType":"839","messageId":"840","endLine":22,"endColumn":19},{"ruleId":"837","severity":1,"message":"874","line":196,"column":36,"nodeType":"839","messageId":"840","endLine":196,"endColumn":41},"no-native-reassign",["875"],"no-negated-in-lhs",["876"],"no-unused-vars","'Copy' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'returnString' is assigned a value but never used.","'ArrowForwardIosIcon' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'CalendarIcon' is defined but never used.","'FormikControl' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'patientSearchOptions' is defined but never used.","'Modals' is defined but never used.","'CustomButton' is defined but never used.","'displayPhoto' is defined but never used.","'isSelected' is defined but never used.","'genderType' is assigned a value but never used.","'initialValues' is assigned a value but never used.","'validationSchema' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'buttonType' is assigned a value but never used.","'AvailabilityCard' is defined but never used.","'getSearchPlaceholder' is defined but never used.","'useQuery' is defined but never used.","'getAvailability' is defined but never used.","'availabiltyArray' is assigned a value but never used.","'setAvailabiltyArray' is assigned a value but never used.","'loadings' is assigned a value but never used.",["875"],["876"],"'plans' is assigned a value but never used.","'providers' is assigned a value but never used.","'filterPlanValue' is assigned a value but never used.","'onFilterPlanChange' is assigned a value but never used.","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 7bd9c10f8b899e2ef358c671370b4c640e5f7571
